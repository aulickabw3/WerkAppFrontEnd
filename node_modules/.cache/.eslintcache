[{"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/index.tsx":"1","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/serviceWorker.ts":"2","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/App.tsx":"3","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ScheduleJob.tsx":"4","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx":"5","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AvailableJob.tsx":"6","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Profile.tsx":"7","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Associates.tsx":"8","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx":"9","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Logout.tsx":"10","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Login.tsx":"11","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AssociateProfile.tsx":"12","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Search.tsx":"13","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/CreateAccount.tsx":"14","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/EditProfile.tsx":"15","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedulerView.tsx":"16","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Crews.tsx":"17","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/PublishJob.tsx":"18","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftDetails.tsx":"19","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ShiftDetails.tsx":"20","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/PastJob.tsx":"21","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/components/GetUser.tsx":"22","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ShiftChat.tsx":"23","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/EditShift.tsx":"24","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftWerkers.tsx":"25","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftChat.tsx":"26"},{"size":822,"mtime":1659051837432,"results":"27","hashOfConfig":"28"},{"size":5213,"mtime":1641238598863,"results":"29","hashOfConfig":"28"},{"size":4778,"mtime":1659051837432,"results":"30","hashOfConfig":"28"},{"size":7937,"mtime":1661306691984,"results":"31","hashOfConfig":"28"},{"size":4485,"mtime":1661306691984,"results":"32","hashOfConfig":"28"},{"size":6873,"mtime":1661306691984,"results":"33","hashOfConfig":"28"},{"size":6146,"mtime":1661306691984,"results":"34","hashOfConfig":"28"},{"size":3944,"mtime":1661306691998,"results":"35","hashOfConfig":"28"},{"size":15950,"mtime":1661306691984,"results":"36","hashOfConfig":"28"},{"size":1518,"mtime":1641238598861,"results":"37","hashOfConfig":"28"},{"size":4151,"mtime":1661306691984,"results":"38","hashOfConfig":"28"},{"size":13332,"mtime":1661306691984,"results":"39","hashOfConfig":"28"},{"size":4488,"mtime":1661306691984,"results":"40","hashOfConfig":"28"},{"size":6006,"mtime":1661306691984,"results":"41","hashOfConfig":"28"},{"size":8331,"mtime":1661306691984,"results":"42","hashOfConfig":"28"},{"size":16251,"mtime":1661306691984,"results":"43","hashOfConfig":"28"},{"size":1934,"mtime":1647385168744,"results":"44","hashOfConfig":"28"},{"size":5560,"mtime":1661306691984,"results":"45","hashOfConfig":"28"},{"size":11641,"mtime":1661306691984,"results":"46","hashOfConfig":"28"},{"size":12923,"mtime":1661306691984,"results":"47","hashOfConfig":"28"},{"size":6847,"mtime":1661306691998,"results":"48","hashOfConfig":"28"},{"size":376,"mtime":1661306691998,"results":"49","hashOfConfig":"28"},{"size":7121,"mtime":1661306691984,"results":"50","hashOfConfig":"28"},{"size":10506,"mtime":1661306691984,"results":"51","hashOfConfig":"28"},{"size":10965,"mtime":1661306691984,"results":"52","hashOfConfig":"28"},{"size":7540,"mtime":1661306691984,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wqzeyk",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/index.tsx",[],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/serviceWorker.ts",[],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/App.tsx",["126","127","128","129","130","131","132","133","134"],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ScheduleJob.tsx",["135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect, Route, Link } from \"react-router-dom\";\nimport { IonReactRouter } from \"@ionic/react-router\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonModal,\n  IonItem,\n  IonInput,\n  IonTextarea,\n  IonDatetime,\n  IonSelect,\n  IonSelectOption,\n} from \"@ionic/react\";\n// import { format, parseISO } from 'date-fns';\nimport axios from \"axios\";\nimport { person, arrowBackCircle } from \"ionicons/icons\";\nimport \"./ScheduleJob.css\";\nimport GetUser from \"../components/GetUser\";\n\nconst ScheduleJob: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  React.useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  const [jobId, setJobId] = React.useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [beginSelectedDate, setBeginSelectedDate] = useState(\"\");\n  const [endSelectedDate, setEndSelectedDate] = useState(\"\");\n  const [company, setCompany] = React.useState(\"\");\n  const [location, setLocation] = React.useState(\"\");\n  const [pay, setPay] = React.useState(\"\");\n  const [numberOfWorkers, setnumberOfWorkers] = React.useState(0);\n  const [notes, setNotes] = React.useState(\"\");\n\n  const handleSubmit = () => {\n    const newShift = {\n      UserUserId: profile.UserId,\n      ShiftIdentifier: jobId,\n      DateDay: selectedDate,\n      StartDateTime: beginSelectedDate,\n      FinishDateTime: endSelectedDate,\n      Company: company,\n      Location: location,\n      Pay: pay,\n      NumberOfWerkers: numberOfWorkers,\n      ShiftNotes: notes,\n    };\n\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/CreateShift\", { newShift })\n      .then((response) => { \n        console.log(response);\n        return response.data\n      }).then((data) => {\n        console.log(data.ShiftId);\n        window.location.href = \"/PublishJob/\" + data.ShiftId;\n      });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Schedule Job</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Schedule Job\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow className=\"\">\n            <IonRow>\n              <IonCol>\n                <Link to=\"/SchedulerView\">\n                  <IonIcon size=\"large\" icon={arrowBackCircle} />\n                </Link>\n              </IonCol>\n            </IonRow>\n          </IonRow>\n          <form>\n            <br></br>\n            <IonRow>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Job ID/#:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Date\"\n                    onIonChange={(e: any) => setJobId(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Date:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    min=\"2022-01-01\"\n                    max=\"2030-01-01\"\n                    value={selectedDate}\n                    onIonChange={(e) => setSelectedDate(e.detail.value!)}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Start:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    displayFormat=\"HH:mm\"\n                    value={beginSelectedDate}\n                    onIonChange={(e) => setBeginSelectedDate(e.detail.value!)}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>End:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    displayFormat=\"HH:mm\"\n                    value={endSelectedDate}\n                    onIonChange={(e) => setEndSelectedDate(e.detail.value!)}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Company:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Company\"\n                    onIonChange={(e: any) => setCompany(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Location:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Location\"\n                    onIonChange={(e: any) => setLocation(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Pay: </h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Pay\"\n                    onIonChange={(e: any) => setPay(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>How Many:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"number\"\n                    name=\"NumberOfWerkers\"\n                    onIonChange={(e: any) => setnumberOfWorkers(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"12\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Notes:</h1>\n                  </IonLabel>\n                  <IonTextarea\n                    name=\"Time\"\n                    onIonChange={(e: any) => setNotes(e.target.value)}\n                    clearOnEdit={true}\n                  ></IonTextarea>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol></IonCol>\n              <IonCol>\n                <IonButton\n                  // href=\"/PublishJob\"\n                  onClick={handleSubmit}\n                  color=\"danger\"\n                  size=\"large\"\n                  fill=\"solid\"\n                >\n                  Create Job\n                </IonButton>\n              </IonCol>\n              <IonCol></IonCol>\n            </IonRow>\n          </form>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ScheduleJob;\n\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  useIonViewDidEnter,\n  IonDatetime,\n} from \"@ionic/react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport axios from \"axios\";\n// import TimeAgo from 'react-timeago'\nimport {\n  person,\n  arrowBackCircle,\n  arrowBack,\n  mailUnreadOutline,\n  mailOpenOutline,\n} from \"ionicons/icons\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport \"./Main.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\n\nexport const Notifications: React.FC<RouteComponentProps> = ({ match }) => {\n  //GET MY PROFILE DATA\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile);\n\n  // GET ARRAY OF ALL NEW REQUESTS\n  interface NotificationsDate {\n    id: number;\n    IsRead: boolean;\n    UserActionTakenUserProfilePicURL: string;\n    UserActionTakenUserActionTyped: string;\n    UserActionTakenUserActionTypeDescription: string;\n    UserActionTakenUserName: string;\n    createdAt: number;\n    UserActionTakenAppLink: string;\n  }\n\n  const [notifications, setNotifications] = React.useState<NotificationsDate[]>(\n    [\n      {\n        id: 0,\n        IsRead: false,\n        UserActionTakenUserProfilePicURL: \"../assets/profilePic.png\",\n        UserActionTakenUserActionTyped: \"No Notifications\",\n        UserActionTakenUserActionTypeDescription: \"Here Yet! Go do stuff!\",\n        UserActionTakenUserName: \"\",\n        createdAt: 0,\n        UserActionTakenAppLink: \"\",\n      },\n    ]\n  );\n\n\n  const fetchRequests = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/notifications/ListOfNotifications/\" +\n          profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then((data) => {\n      setNotifications(data.listOfNotifications);\n    });\n  }, [profile]);\n\n  console.log(notifications);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Notifications</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Notifications\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <br></br>\n        <IonList>\n          {notifications.reverse().map((notification) => (\n            <Fragment key={notification.id}>\n              <br></br>\n              <IonItem\n                onClick={(e: any) => {\n                  const ReadData = {\n                    IsRead: true,\n                  };\n                  return axios\n                    .put(\n                      \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/notifications/MarkRead/\" +\n                        notification.id,\n                      {\n                        ReadData,\n                        withCredentials: true,\n                      }\n                    )\n                    .then((response) => {\n                      console.log(response);\n                    });\n                }}\n                className={`${notification.IsRead ? \"read\" : \"unread\"}`}\n                href={`${notification.UserActionTakenAppLink}`}\n              >\n                <IonAvatar className=\"avatario\" slot=\"start\">\n                  <img src={notification.UserActionTakenUserProfilePicURL} />\n                </IonAvatar>\n                {notification.UserActionTakenUserName}\n                {notification.UserActionTakenUserActionTypeDescription}\n                <ReactTimeAgo\n                  timeStyle=\"twitter-minute-now\"\n                  slot=\"end\"\n                  className=\"nill\"\n                  date={notification.createdAt}\n                  locale=\"en-US\"\n                />\n              </IonItem>\n            </Fragment>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Notifications;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AvailableJob.tsx",["161","162","163","164"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonTabBar,\n} from \"@ionic/react\";\nimport { person, arrowBackCircle } from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface AvailableJobProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst AvailableJob: React.FC<AvailableJobProps> = ({ match }) => {\n  console.log(match.params.id);\n\n  interface AvailableJobData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n  }\n\n  const [availableJob, setAvailableJob] = useState<AvailableJobData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n  });\n\n  const fetchAvailableJob = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftDetails/\" + match.params.id, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    fetchAvailableJob().then((data) => setAvailableJob(data.werkShift));\n  }, []);\n\n  useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, [availableJob]);\n\n  const handleSubmit = () => {\n    const werkJob = {\n      UserId: profile.UserId,\n      ShiftId: availableJob.ShiftId,\n    };\n\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/WerkShift/\", {\n        werkJob,\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/ScheduledJob/\" + availableJob.ShiftId;\n      });\n  };\n  console.log(match.params.id);\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Job Summary</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Job Summary\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow className=\"\">\n            <IonRow>\n              <IonCol>\n                <Link to=\"/AvailableJobs\">\n                  <IonIcon size=\"large\" icon={arrowBackCircle} />\n                </Link>\n              </IonCol>\n            </IonRow>\n          </IonRow>\n          <form>\n            <br></br>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Job ID/#:</h1>\n                  </IonLabel>\n                  {availableJob.ShiftIdentifier}\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Date:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.DateDay}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Start:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    // hourValues={12}\n                    // hour-cycle=\"h12\"\n                    displayFormat=\"HH:mm\"\n                    value={availableJob.StartDateTime}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>End:</h1>\n                  </IonLabel>\n                  <IonDatetime\n                    displayFormat=\"HH:mm\"\n                    value={availableJob.FinishDateTime}\n                  ></IonDatetime>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Company:</h1>\n                  </IonLabel>\n                  {availableJob.Company}\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Location:</h1>\n                  </IonLabel>\n                  {availableJob.Location}\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"6\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Pay: </h1>\n                  </IonLabel>\n                </IonItem>\n              </IonCol>\n              <IonCol size=\"1\"><h1>$</h1></IonCol>\n              <IonCol size=\"5\">\n                <IonItem>\n                  <h1 className=\"money\">{availableJob.Pay}</h1>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol size=\"12\">\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Notes:</h1>\n                  </IonLabel>\n                  {availableJob.ShiftNotes}\n                </IonItem>\n              </IonCol>\n            </IonRow>\n          </form>\n        </IonGrid>\n      </IonContent>\n\n      <IonTabBar className=\"schedulebutton\">\n        <IonTabButton>\n          <IonRow>\n            <IonCol></IonCol>\n            <IonCol>\n              <IonButton\n                onClick={handleSubmit}\n                color=\"danger\"\n                size=\"large\"\n                fill=\"solid\"\n              >\n                Werk\n              </IonButton>\n            </IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n        </IonTabButton>\n      </IonTabBar>\n      \n    </IonPage>\n  );\n};\n\nexport default AvailableJob;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Profile.tsx",["165","166","167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonLabel,\n  IonList,\n  IonItem,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonCheckbox,\n  IonButton,\n  IonAvatar,\n  useIonActionSheet,\n  IonModal,\n  useIonAlert,\n  IonTabButton,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  people,\n  pencilSharp,\n  ellipsisHorizontalOutline,\n  ellipsisHorizontal,\n} from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./Profile.css\";\nimport GetUser from \"../components/GetUser\";\nimport axios from \"axios\";\n\nconst Profile: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    Username: string;\n    IsScheduler: boolean;\n    IsDeleted: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n    UserBio: string;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Username: \"\",\n    IsScheduler: false,\n    IsDeleted: false,\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"\",\n    UserBio: \"\",\n  });\n\n  useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  const handleLogout = () => {\n    axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Logout\", {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/Login\";\n      });\n  };\n\n  const [present] = useIonAlert();\n\n  // Get Array Of All My Associates\n  interface AssociatesData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [associates, setAssociates] = React.useState<AssociatesData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAssociates = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/ListOfAssociates/\" +\n          profile.UserId,\n        {}\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchAssociates().then((data) => setAssociates(data.listOfAssociates2));\n  }, [profile]);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Profile</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Profile\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <br></br>\n        <IonGrid>\n          <IonRow className=\"profileGrid\">\n            <IonCol>\n              <IonAvatar className=\"avatarino\">\n                <img src={profile.ProfilePicURL}></img>\n              </IonAvatar>\n            </IonCol>\n            <IonCol className=\"title2\"></IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol size=\"\">\n              <h1>\n                {profile.FirstName} {profile.LastName}\n              </h1>\n            </IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol size=\"11\">\n              <p>\n                {profile.Occupation} @ {profile.Company}\n              </p>\n              <p>{profile.Email}</p>\n            </IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol size=\"8\">\n              <Link to=\"/EditProfile\">\n                <IonButton\n                  color=\"warning\"\n                  // size=\"large\"\n                  expand=\"block\"\n                  fill=\"solid\"\n                >\n                  <IonIcon icon={pencilSharp} />\n                  Edit Profile\n                </IonButton>\n              </Link>\n            </IonCol>\n            <IonCol size=\"3\">\n              <IonButton\n                color=\"medium\"\n                expand=\"block\"\n                fill=\"solid\"\n                onClick={() =>\n                  present({\n                    header: \"Logout\",\n                    buttons: [\"Cancel\", { text: \"Ok\", handler: handleLogout }],\n                    onDidDismiss: (e) => console.log(\"did dismiss\"),\n                  })\n                }\n              >\n                <IonIcon icon={ellipsisHorizontal} />\n              </IonButton>\n            </IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol>{profile.UserBio}</IonCol>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n          <br></br>\n          <IonTabButton tab=\"Associates\" href=\"/Associates\">\n            <IonIcon size=\"large\" icon={people} />\n            <IonLabel>\n              <h4>Associates</h4>\n            </IonLabel>\n          </IonTabButton>\n          <IonList>\n            {/* Need to rewrite this so the \".filter\" and \".sort\" methods are not\n                being called on render... */}\n            {associates\n              .sort((a, b) => a.FirstName.localeCompare(b.FirstName))\n              .map((associate) => (\n                <IonItem\n                  href={`/AssociateProfile/${associate.UserId}`}\n                  key={associate.UserId}\n                >\n                  <IonAvatar className=\"avatario\" slot=\"start\">\n                    <img src={associate.ProfilePicURL} />\n                  </IonAvatar>\n                  <IonLabel className=\"labelo\">\n                    <h1>\n                      {associate.FirstName} {associate.LastName}\n                    </h1>\n                    <p>{associate.Company}</p>\n                  </IonLabel>\n                  <br></br>\n                </IonItem>\n              ))}\n          </IonList>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\nexport default Profile;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Associates.tsx",["175","176","177","178","179","180","181","182","183","184","185","186","187"],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useEffect, useState } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonList,\n  IonLabel,\n  IonItem,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  useIonViewDidEnter,\n  IonAvatar,\n  IonDatetime,\n  IonSegment,\n  IonSegmentButton,\n  IonSearchbar,\n  IonButton,\n  IonTabBar,\n  IonTabButton,\n  IonToggle,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  arrowBack,\n  createOutline,\n  reorderFour,\n  reorderFourOutline,\n  reorderThreeOutline,\n  pin,\n  wifi,\n  wine,\n  warning,\n  walk,\n  arrowUp,\n} from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport { create } from \"domain\";\n\nexport const Main: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Search Users/////////////////////\n  ///////////////////////////////////////////////////////\n  interface UsersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    IsScheduler: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [users, setUsers] = React.useState<UsersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Email: \"\",\n      IsScheduler: false,\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  const fetchUsers = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Search/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchUsers().then((data) => setUsers(data.personArray));\n  }, [profile]);\n\n  // Available Jobs Segment\n  //////////////////////////////////////\n  interface AvailableJobData {\n    JJobId: number;\n    JJobId2: any;\n    dentifier: string;\n    SchedulerId: any;\n    Company: any;\n    Location: string;\n    Date: any;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: any;\n  }\n\n  const [availableJobs, setAvailableJobs] = React.useState<AvailableJobData[]>([\n    {\n      JJobId: 0,\n      JJobId2: 0,\n      dentifier: \"\",\n      SchedulerId: 0,\n      Company: \"No     Jobs\",\n      Location: \"\",\n      Date: \"Yet\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/AvailableShifts/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  console.log(availableJobs);\n\n  const AvailableJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {availableJobs.map((availableJob) => (\n          <IonCard key={availableJob.JJobId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={availableJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{availableJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${availableJob.JJobId}`}\n                slot=\"end\"\n                fill=\"outline\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{availableJob.dentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{availableJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{availableJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{availableJob.Pay}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Scheduled Jobs Segment\n  //////////////////////////////////////////////\n  interface MyScheduledJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myScheduledJobs, setMyScheduledJobs] = React.useState<\n    MyScheduledJobsData[]\n  >([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchScheduledJobs = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/MyScheduledJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const ScheduledJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myScheduledJobs.map((myScheduledJob) => (\n          <IonCard key={myScheduledJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myScheduledJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myScheduledJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myScheduledJob.ShiftShiftId}`}\n                slot=\"end\"\n                fill=\"outline\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myScheduledJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myScheduledJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myScheduledJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myScheduledJob.Pay}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myScheduledJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Past Jobs Segment\n  /////////////////////////////////////////\n  interface MyPastJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myPastJobs, setMyPastJobs] = React.useState<MyPastJobsData[]>([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchPastJobs = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/MyPastJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const PastJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myPastJobs.map((myPastJob) => (\n          <IonCard key={myPastJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myPastJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myPastJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myPastJob.ShiftShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myPastJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myPastJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myPastJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myPastJob.Pay}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  console.log(myPastJobs);\n\n  const SelectAJobList: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon slot=\"\" size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"7\">\n            <h1>Select A Job List</h1>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setAvailableJobs(data.availableShifts2);\n    });\n    fetchScheduledJobs().then((data) =>\n      setMyScheduledJobs(data.scheduledShifts2)\n    );\n    fetchPastJobs().then((data) => setMyPastJobs(data.pastShifts2));\n  }, [profile]);\n\n  const [mainSegment, setMainSegment] = useState<string>(\"\");\n\n  const MainSegmentActions: React.FC = () => {\n    if (mainSegment == \"past\") {\n      return <PastJobsSegment />;\n    }\n    if (mainSegment == \"scheduled\") {\n      return <ScheduledJobsSegment />;\n    }\n    if (mainSegment == \"available\") {\n      return <AvailableJobsSegment />;\n    }\n    return <SelectAJobList />;\n  };\n\n  const [checked, setChecked] = React.useState<boolean>(false);\n\n  const handleToggle = () => {\n    if (!checked) window.location.href = \"/SchedulerView\";\n    return;\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title1\">WerkApp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              WerkApp\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar className=\"bckgrnd\">\n          <IonGrid>\n            <IonRow className=\"tpmrgn\">\n              <IonCol size=\"2\">\n                <IonToggle\n                  checked={checked}\n                  onIonChange={(e) => {\n                    setChecked(e.detail.checked);\n                    handleToggle();\n                  }}\n                  color=\"danger\"\n                ></IonToggle>\n                <IonLabel className=\"smallfont\">Scheduler</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\">\n                <IonSearchbar\n                  value={searchText}\n                  onIonChange={(e) => setSearchText(e.detail.value!)}\n                  animated\n                  className=\"srchbr\"\n                ></IonSearchbar>\n              </IonCol>\n              <IonCol size=\"1\">\n                <Link to={\"/Profile\"}>\n                  <IonAvatar className=\"tinyavatar\">\n                    <img src={profile.ProfilePicURL} />\n                  </IonAvatar>\n                </Link>\n              </IonCol>\n            </IonRow>\n\n            <IonList className=\"searchBar\">\n              {users\n                .filter((value) => {\n                  if (searchText == \"\") {\n                    return \"\";\n                  } else if (\n                    value.FirstName.toLowerCase().includes(\n                      searchText.toLowerCase()\n                    )\n                  ) {\n                    return value;\n                  } else if (\n                    value.LastName.toLowerCase().includes(\n                      searchText.toLowerCase()\n                    )\n                  ) {\n                    return value;\n                  }\n                })\n                .sort((a, b) => a.FirstName.localeCompare(b.FirstName))\n                .map((user) => (\n                  <IonItem\n                    href={`/AssociateProfile/${user.UserId}`}\n                    key={user.UserId}\n                  >\n                    <IonAvatar className=\"avatario\" slot=\"start\">\n                      <img src={user.ProfilePicURL} />\n                    </IonAvatar>\n                    <IonLabel className=\"labelo\">\n                      <h1>\n                        {user.FirstName} {user.LastName}\n                      </h1>\n                      <p>{user.Company}</p>\n                    </IonLabel>\n                    <br></br>\n                  </IonItem>\n                ))}\n            </IonList>\n\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  className=\"bckgrnd\"\n                  onIonChange={(e: any) => {\n                    setMainSegment(e.detail.value!);\n                    console.log(mainSegment);\n                  }}\n                >\n                  <IonSegmentButton value=\"available\">\n                    <IonLabel>\n                      <h2>Available</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"scheduled\">\n                    <IonLabel>\n                      <h2>Scheduled</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"past\">\n                    <IonLabel>\n                      <h2>Past</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n\n        <MainSegmentActions />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Main;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Logout.tsx",["218","219","220","221","222","223","224","225","226","227","228"],"import React from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonList,\n  IonLabel,\n  IonItem,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n} from \"@ionic/react\";\nimport { person, arrowBackCircle, arrowBack } from 'ionicons/icons';\nimport ExploreContainer from \"../components/ExploreContainer\";\nimport \"./Logout.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Logout: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Logged Out</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Logged Out\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n        <IonRow>\n            <IonCol></IonCol>\n            <IonCol><h1></h1></IonCol>\n            <IonCol><h1></h1></IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n          <br></br>\n          <IonRow>\n            <IonCol></IonCol>\n            <IonCol></IonCol>\n            <IonCol><h1>...</h1></IonCol>\n            <IonCol><h1>Logged</h1></IonCol>\n            <IonCol><h1>Out</h1></IonCol>\n            <IonCol></IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n        </IonGrid>\n        \n        \n        {/* <ExploreContainer name=\"Tab 2 page\" /> */}\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Logout;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Login.tsx",["229","230","231","232","233","234","235","236","237"],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Redirect, Route, Link } from \"react-router-dom\";\nimport {\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonCol,\n  IonRow,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport \"./Login.css\";\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [cookies, setCookie] = useCookies([\"jwt\"]);\n\n  const handleClick = () => {\n    const logProfile = {\n      Email: email,\n      Password: password,\n    };\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Login\", {\n        logProfile,\n        withCredentials: true,\n      })\n      .then((response) => {\n        if (response.data !== \"Person not found\" || \"Wrong Password\" || \"\" ) {\n          setCookie(\"jwt\", response.data, { path: \"/\" });\n          window.location.href = \"/Main\";\n        }\n        if (response.data == \"Wrong Password\") {\n          console.log(response.data);\n          alert(response.data);\n          window.location.href = \"/Login\";\n        }\n        if (response.data == \"Person not found\") {\n          console.log(response.data);\n          alert(response.data);\n          window.location.href = \"/Login\";\n        } if (!response) {\n          alert(\"Invalid Email or Password\");\n          window.location.href = \"/Login\";\n        }\n        return\n      });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title1\">Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              Login\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <br></br>\n        <br></br>\n        <IonGrid className=\"wholeGrid\">\n          <form>\n            <IonRow>\n              <IonCol>\n                <h2></h2>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Email:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Email\"\n                    placeholder=\"Email\"\n                    onIonChange={(e: any) => setEmail(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Password:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"password\"\n                    name=\"Password\"\n                    placeholder=\"Password\"\n                    onIonChange={(e: any) => setPassword(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  onClick={handleClick}\n                  color=\"warning\"\n                  size=\"large\"\n                  expand=\"block\"\n                  fill=\"solid\"\n                >\n                  Login\n                </IonButton>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <br></br>\n            <IonRow>\n              <IonCol>\n                <IonButton\n                  href=\"/CreateAccount\"\n                  color=\"medium\"\n                  size=\"large\"\n                  expand=\"block\"\n                  fill=\"solid\"\n                >\n                  Create Account\n                </IonButton>\n              </IonCol>\n            </IonRow>\n          </form>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Login;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AssociateProfile.tsx",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonButton,\n  IonLabel,\n  IonRouterLink,\n  IonList,\n  IonItem,\n  IonSpinner,\n  useIonViewDidEnter,\n  useIonViewDidLeave,\n  useIonViewWillEnter,\n  useIonViewWillLeave,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonCheckbox,\n  IonTabBar,\n  IonTabButton,\n  IonAvatar,\n  useIonAlert,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  people,\n  ellipsisHorizontal,\n  pencilSharp,\n} from \"ionicons/icons\";\nimport axios from \"axios\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport \"./AssociateProfile.css\";\nimport GetUser from \"../components/GetUser\";\nimport { profile } from \"console\";\n\n\ninterface AssociateProfileProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst AssociateProfile: React.FC<AssociateProfileProps> = ({ match }) => {\n  const [present] = useIonAlert();\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n  // Get Self Data\n  interface SelfData {\n    UserId: number;\n  }\n\n  const [Self, setSelf] = React.useState<SelfData>({\n    UserId: 0,\n  });\n\n  // Get selected user data\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    Username: string;\n    IsScheduler: boolean;\n    IsDeleted: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n    UserBio: string;\n  }\n\n  const [ListProfile, setListProfile] = React.useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Username: \"\",\n    IsScheduler: false,\n    IsDeleted: false,\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"\",\n    UserBio: \"\",\n  });\n\n  const fetchProfile = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/AssociateProfile/\" + match.params.id, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        return response.data;\n      });\n  };\n\n  // Request Status of Selected Associate\n  interface AssociationData {\n    RequestStatus: string;\n  }\n\n  const [association, setAssociation] = React.useState<AssociationData>({\n    RequestStatus: \"\",\n  });\n\n  // association.RequestStatus = \"something we can see\";\n\n  const associationRequest = (listProfile: ProfileData, self: SelfData) => {\n    console.log(listProfile, self);\n    return axios\n      .post(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/AssociateRelationshipStatus\",\n        {\n          withCredentials: true,\n          self,\n          listProfile,\n        }\n      )\n      .then((response) => {\n        return response.data;\n      });\n  };\n\n  useIonViewDidEnter(() => {\n    fetchProfile().then((profileData) => {\n      GetUser().then((selfProfileData) => {\n        setSelf(selfProfileData.personDataFound);\n        associationRequest(\n          profileData.user,\n          selfProfileData.personDataFound\n        ).then((requestStatusData) => {\n          setAssociation(requestStatusData.associationStatus);\n        });\n      });\n      setListProfile(profileData.user);\n    });\n    setIsLoading(false);\n  }, [match, ListProfile, Self, association]);\n\n  // Request Associate component and handler\n  const handleAssociateRequest = () => {\n    axios\n      .post(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/AssociateProfile/\" +\n          match.params.id,\n        { withCredentials: true, Self, ListProfile }\n      )\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/AssociateProfile/\" + match.params.id;\n      });\n  };\n\n  const NotMyAssociateProfile: React.FC = () => {\n    return (\n      <IonRow>\n        <IonCol size=\"8\">\n          <IonButton\n            onClick={handleAssociateRequest}\n            color=\"warning\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            Add Associate\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"2\">\n          <IonButton\n            color=\"medium\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            <IonIcon icon={ellipsisHorizontal} />\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    );\n  };\n\n  // Accept or Decline Request component and handlers\n  var requestResponse = {};\n\n  const handleAcceptRequest = () => {\n    requestResponse = { RequestStatus: \"RequestAccepted\" };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/UpdateRequest\", {\n        Self,\n        ListProfile,\n        requestResponse,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/AssociateProfile/\" + match.params.id;\n      });\n  };\n\n  const handleDeclineRequest = () => {\n    requestResponse = { RequestStatus: \"RequestDeclined\" };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/UpdateRequest\", {\n        Self,\n        ListProfile,\n        requestResponse,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/AssociateProfile/\" + match.params.id;\n      });\n  };\n\n  const PendingAssociateProfile: React.FC = () => {\n    return (\n      <IonRow>\n        <IonCol size=\"5\">\n          <IonButton\n            onClick={handleAcceptRequest}\n            color=\"warning\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            Accept Request\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"5\">\n          <IonButton\n            onClick={handleDeclineRequest}\n            color=\"medium\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            Deny Request\n          </IonButton>\n          {/* </Link> */}\n        </IonCol>\n      </IonRow>\n    );\n  };\n\n  // PendingSent cancel request component and handler\n  const handleCancelRequest = () => {\n    requestResponse = { RequestStatus: \"Cancelled\" };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/UpdateRequest\", {\n        Self,\n        ListProfile,\n        requestResponse,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/AssociateProfile/\" + match.params.id;\n      });\n  };\n\n  const PendingSentAssociateProfile: React.FC = () => {\n    return (\n      <IonRow>\n        <IonCol size=\"5\">\n          <IonButton\n            color=\"warning\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            Request Pending...\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"2\">\n        <IonButton\n                color=\"medium\"\n                expand=\"block\"\n                fill=\"solid\"\n                onClick={() =>\n                  present({\n                    header: \"Rescind Request\",\n                    buttons: [\"Cancel\", { text: \"Ok\", handler: handleCancelRequest }],\n                    onDidDismiss: (e) => console.log(\"did dismiss\"),\n                  })\n                }\n              >\n                <IonIcon icon={ellipsisHorizontal} />\n              </IonButton>\n        </IonCol>\n      </IonRow>\n    );\n  };\n\n  // My Associate component and handler\n  const handleFireAssociate = () => {\n    requestResponse = { RequestStatus: \"Fired\" };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/UpdateRequest\", {\n        Self,\n        ListProfile,\n        requestResponse,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/AssociateProfile/\" + match.params.id;\n      });\n  };\n\n  const MyAssociateProfile: React.FC = () => {\n    return (\n      <IonRow>\n        <IonCol size=\"8\">\n          <IonButton\n            color=\"warning\"\n            expand=\"block\"\n            fill=\"solid\"\n          >\n            Associate\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"3\">\n        <IonButton\n                color=\"medium\"\n                expand=\"block\"\n                fill=\"solid\"\n                onClick={() =>\n                  present({\n                    header: \"Fire Associate\",\n                    buttons: [\"Cancel\", { text: \"Ok\", handler: handleFireAssociate }],\n                    onDidDismiss: (e) => console.log(\"did dismiss\"),\n                  })\n                }\n              >\n                <IonIcon icon={ellipsisHorizontal} />\n              </IonButton>\n        </IonCol>\n      </IonRow>\n    );\n  };\n\n // Get Array Of All My Associates\n interface AssociatesData {\n  UserId: number;\n  FirstName: string;\n  LastName: string;\n  Company: string;\n  Occupation: string;\n  ProfilePicURL: string;\n}\n\nconst [associates, setAssociates] = React.useState<AssociatesData[]>([\n  {\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"../assets/profilePic.png\",\n  },\n]);\n\nconst fetchAssociates = () => {\n  return axios\n    .get(\n      \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/ListOfAssociates/\" + ListProfile.UserId,\n      {}\n    )\n    .then((response) => {\n      console.log(response);\n      return response.data;\n    });\n};\n\nReact.useEffect(() => {\n  fetchAssociates().then((data) => setAssociates(data.listOfAssociates2));\n}, [Self]);\n\n\n  // Render Conditional Associate Profile Action Button\n  const AssociateProfileActions: React.FC = () => {\n    console.log(association.RequestStatus);\n    if (association.RequestStatus == \"RequestAccepted\") {\n      return <MyAssociateProfile />;\n    }\n    if (association.RequestStatus == \"RequestReceived\") {\n      return <PendingAssociateProfile />;\n    }\n    if (association.RequestStatus == \"RequestSent\") {\n      return <PendingSentAssociateProfile />;\n    }\n    return <NotMyAssociateProfile />;\n  };\n\n  // const MyLoadingScreen: React.FC = () => {\n  //   return (\n  //     <IonPage>\n  //       <IonGrid>\n  //         <IonRow>\n  //           <IonCol>\n  //             <IonContent>\n\n  //               <IonSpinner />\n\n  //             </IonContent>\n  //           </IonCol>\n  //         </IonRow>\n  //       </IonGrid>\n  //     </IonPage>\n  //   )\n  // };\n\n  // const RenderPage: React.FC = () => {\n  //   if (isLoading == true) {\n  //     return <MyLoadingScreen />;\n  //   }\n  //   return <MyPage />;\n  // };\n\n  // const MyPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Profile</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Profile\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <br></br>\n        </IonGrid>\n        <IonGrid>\n          <IonRow className=\"profileGrid\">\n            <IonCol>\n              <IonAvatar className=\"avatarino\">\n                <img src={ListProfile.ProfilePicURL}></img>\n              </IonAvatar>\n            </IonCol>\n            <IonCol className=\"title2\"></IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol size=\"\">\n              <h1>\n                {ListProfile.FirstName} {ListProfile.LastName}\n              </h1>\n            </IonCol>\n          </IonRow>\n          <IonRow className=\"profileGrid\">\n            <IonCol size=\"11\">\n              <p>\n                {ListProfile.Occupation} @ {ListProfile.Company}\n              </p>\n              <p>{ListProfile.Email}</p>\n            </IonCol>\n          </IonRow>\n          <br></br>\n\n          <AssociateProfileActions />\n\n          <br></br>\n          <IonRow className=\"profileGrid\">\n            <IonCol>\n              {ListProfile.UserBio}\n            </IonCol>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n          <br></br>\n          <IonTabButton>\n            <IonIcon size=\"large\" icon={people} />\n            <IonLabel>\n              <h4>Associates</h4>\n            </IonLabel>\n          </IonTabButton>\n          <IonList>\n            {/* Need to rewrite this so the \".filter\" and \".sort\" methods are not\n                being called on render... */}\n            {associates\n              .sort((a, b) => a.FirstName.localeCompare(b.FirstName))\n              .map((associate) => (\n                <IonItem\n                  href={`/AssociateProfile/${associate.UserId}`}\n                  key={associate.UserId}\n                >\n                  <IonAvatar className=\"avatario\" slot=\"start\">\n                    <img src={associate.ProfilePicURL} />\n                  </IonAvatar>\n                  <IonLabel className=\"labelo\">\n                    <h1>\n                      {associate.FirstName} {associate.LastName}\n                    </h1>\n                    <p>{associate.Company}</p>\n                  </IonLabel>\n                  <br></br>\n                </IonItem>\n              ))}\n          </IonList>\n        </IonGrid>\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\n//   return (\n//     <RenderPage/>\n//   );\n// };\n\nexport default AssociateProfile;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Search.tsx",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useState, useEffect } from \"react\";\nimport AssociateProfile from \"./AssociateProfile\";\nimport {\n  person,\n  personCircleOutline,\n  arrowBackCircle,\n  arrowBack,\n} from \"ionicons/icons\";\nimport {\n  Redirect,\n  Route,\n  Link,\n  matchPath,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport {\n  IonIcon,\n  IonSearchbar,\n  IonButton,\n  IonList,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonItem,\n  IonAvatar,\n  IonLabel,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Search.css\";\n\nexport const Search: React.FC<RouteComponentProps> = ({ match }) => {\n  interface ProfileData {\n    UserId: number;\n  }\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  React.useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile);\n\n  interface UsersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    IsScheduler: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [users, setUsers] = React.useState<UsersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Email: \"\",\n      IsScheduler: false,\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  const fetchUsers = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Search/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchUsers().then((data) => setUsers(data.personArray));\n  }, [profile]);\n\n  console.log(users);\n  console.log(typeof users);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title1\">Search</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              Search\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid className=\"wholeGrid\">\n          <IonRow>\n            <IonCol className=\"listCol\">\n              <IonSearchbar\n                value={searchText}\n                onIonChange={(e) => setSearchText(e.detail.value!)}\n                animated\n              ></IonSearchbar>\n            </IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol className=\"searchBar\">\n              <IonList className=\"searchBar\">\n                {/* Need to rewrite this so the \".filter\" and \".sort\" methods are not\n                being called on render... */}\n                {users\n                  .filter((value) => {\n                    if (searchText == \"\") {\n                      return \"\";\n                    } else if (\n                      value.FirstName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    } else if (\n                      value.LastName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    }\n                  })\n                  .sort((a, b) => a.FirstName.localeCompare(b.FirstName))\n                  .map((user) => (\n                    <IonItem\n                      href={`/AssociateProfile/${user.UserId}`}\n                      key={user.UserId}\n                    >\n                      <IonAvatar className=\"avatario\" slot=\"start\">\n                        <img src={user.ProfilePicURL} />\n                      </IonAvatar>\n                      <IonLabel className=\"labelo\">\n                        <h1>\n                          {user.FirstName} {user.LastName}\n                        </h1>\n                        <p>{user.Company}</p>\n                      </IonLabel>\n                      <br></br>\n                    </IonItem>\n                  ))}\n              </IonList>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Search;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/CreateAccount.tsx",["280","281","282","283"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  IonInput,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport \"./CreateAccount.css\";\nimport { arrowBackCircle } from \"ionicons/icons\";\n\nconst CreateAccount: React.FC = () => {\n\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [company, setCompany] = React.useState(\"\");\n  const [occupation, setOccupation] = React.useState(\"\");\n\n  const handleSubmit = () => {\n     \n    const newProfile = {\n      FirstName: firstName,\n      LastName: lastName,\n      Email: email,\n      Password: password,\n      Company: company,\n      Occupation: occupation,\n    };\n\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/CreateAccount\", { newProfile })\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Create Account</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Create Account\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n          <IonCol>\n              <Link to=\"/Login\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n          </IonRow>\n          <form >\n            <br></br>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Name:</h1>\n                  </IonLabel>\n                  <IonRow>\n                    <IonCol>\n                      <IonInput\n                        type=\"text\"\n                        name=\"FirstName\"\n                        placeholder=\"First\"\n                        onIonChange={(e: any) => setFirstName(e.target.value)}\n                        clearInput\n                      ></IonInput>\n                    </IonCol>\n                    <IonCol>\n                      <IonInput\n                        type=\"text\"\n                        name=\"LastName\"\n                        placeholder=\"Last\"\n                        onIonChange={(e: any) => setLastName(e.target.value)}\n                        clearInput\n                      ></IonInput>\n                    </IonCol>\n                  </IonRow>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Email:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Email\"\n                    placeholder=\"Email\"\n                    onIonChange={(e: any) => setEmail(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Password:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Password\"\n                    placeholder=\"Password\"\n                    onIonChange={(e: any) => setPassword(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Company/Agency:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"company\"\n                    placeholder=\"Company/Agency Name\"\n                    onIonChange={(e: any) => setCompany(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Occupation:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"occupation\"\n                    placeholder=\"Occupation\"\n                    onIonChange={(e: any) => setOccupation(e.target.value)}\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n            <br></br>\n            <IonRow>\n              <IonCol></IonCol>\n              <IonCol >\n                <IonButton\n                  href=\"/Login\"\n                  color=\"warning\"\n                  size=\"large\"\n                  fill=\"solid\"\n                  onClick={handleSubmit}\n                >Create Account\n                </IonButton>\n              </IonCol>\n              {/* <IonCol>\n              <IonButton\n                  href=\"/Login\"\n                  color=\"danger\"\n                  size=\"large\"\n                  fill=\"solid\"\n                >Cancel\n                </IonButton>\n              </IonCol> */}\n              <IonCol></IonCol>\n            </IonRow>\n          </form>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default CreateAccount;","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/EditProfile.tsx",["284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonLabel,\n  IonButton,\n  IonInput,\n  IonList,\n  IonItem,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonImg,\n  IonCheckbox,\n  useIonViewDidEnter,\n  IonTabBar,\n  IonTabButton,\n} from \"@ionic/react\";\nimport { person, arrowBackCircle, people,camera, trash, close } from \"ionicons/icons\";\nimport axios from \"axios\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport \"./Profile.css\";\n// import \"../components/GetUser\";\nimport GetUser from \"../components/GetUser\";\n\n\nconst EditProfile: React.FC = () => {\n\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    Username: string;\n    IsScheduler: boolean;\n    IsDeleted: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n    UserBio: string;\n  }\n\n  // const checkboxList = [{ val: \"Scheduler\", isChecked: true }];\n\n  const [editProfile, setEditProfile] = React.useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    Username: \"\",\n    IsScheduler: false,\n    IsDeleted: false,\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"\",\n    UserBio: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => {\n      setEditProfile(data.personDataFound);\n    });\n  }, []);\n\n  const handleSubmit = () => {\n    axios\n      .put(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/PublicUpdateUserProfile/\" +\n          editProfile.UserId,\n        {\n          withCredentials: true,\n          editProfile,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Edit Profile</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Edit Profile\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/Profile\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n            <IonCol></IonCol>\n            <IonCol></IonCol>\n            <IonCol>\n            <IonButton\n                  href=\"/Profile\"\n                  color=\"danger\"\n                  fill=\"solid\"\n                  onClick={handleSubmit}\n                >\n                  Save\n                </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n        <IonGrid>\n          <form>\n            <IonRow className=\"profileGrid\">\n              <IonCol>\n                <IonImg src={editProfile.ProfilePicURL}></IonImg>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Name:</h1>\n                  </IonLabel>\n                  <IonRow>\n                    <IonCol>\n                      <IonInput\n                        type=\"text\"\n                        name=\"FirstName\"\n                        value={editProfile.FirstName}\n                        placeholder=\"First Name\"\n                        onIonChange={(e: any) =>\n                          setEditProfile({\n                            ...editProfile,\n                            FirstName: e.target.value,\n                          })\n                        }\n                        clearInput\n                      ></IonInput>\n                    </IonCol>\n                    <IonCol>\n                      <IonInput\n                        type=\"text\"\n                        name=\"LastName\"\n                        value={editProfile.LastName}\n                        placeholder=\"Last Name\"\n                        onIonChange={(e: any) =>\n                          setEditProfile({\n                            ...editProfile,\n                            LastName: e.target.value,\n                          })\n                        }\n                        clearInput\n                      ></IonInput>\n                    </IonCol>\n                  </IonRow>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Email:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Email\"\n                    value={editProfile.Email}\n                    placeholder=\"Email Address\"\n                    onIonChange={(e: any) =>\n                      setEditProfile({ ...editProfile, Email: e.target.value })\n                    }\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Username:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Username\"\n                    value={editProfile.Username}\n                    placeholder=\"Username\"\n                    onIonChange={(e: any) =>\n                      setEditProfile({\n                        ...editProfile,\n                        Username: e.target.value,\n                      })\n                    }\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Company/Agency:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Company\"\n                    value={editProfile.Company}\n                    placeholder=\"Company/Ageny You Work For...\"\n                    onIonChange={(e: any) =>\n                      setEditProfile({\n                        ...editProfile,\n                        Company: e.target.value,\n                      })\n                    }\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>Occupation:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Occupation\"\n                    value={editProfile.Occupation}\n                    placeholder=\"Your Occupation...\"\n                    onIonChange={(e: any) =>\n                      setEditProfile({\n                        ...editProfile,\n                        Occupation: e.target.value,\n                      })\n                    }\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow className=\"jobGrid\">\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"stacked\">\n                    <h1>About:</h1>\n                  </IonLabel>\n                  <IonInput\n                    type=\"text\"\n                    name=\"Occupation\"\n                    value={editProfile.UserBio}\n                    placeholder=\"About Me...\"\n                    onIonChange={(e: any) =>\n                      setEditProfile({\n                        ...editProfile,\n                        UserBio: e.target.value,\n                      })\n                    }\n                    clearInput\n                  ></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <br></br>\n          </form>\n        </IonGrid>\n      </IonContent>\n\n    </IonPage>\n  );\n};\n\nexport default EditProfile;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedulerView.tsx",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Link } from \"react-router-dom\";\nimport {\n  IonIcon,\n  IonSearchbar,\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonToggle,\n  IonLabel,\n  IonAvatar,\n  IonSegment,\n  IonSegmentButton,\n  useIonViewDidEnter,\n  IonCard,\n  IonItem,\n  IonCardContent,\n  IonDatetime,\n  IonTabBar,\n  IonTabButton,\n  IonList,\n} from \"@ionic/react\";\nimport \"./Main.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport {\n  add,\n  addCircle,\n  addCircleOutline,\n  addCircleSharp,\n  arrowBackCircle,\n  arrowUp,\n} from \"ionicons/icons\";\n\nexport const SchedulerView: React.FC = () => {\n  // Get self Data\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Search Users/////////////////////\n  ///////////////////////////////////////////////////////\n  interface UsersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    IsScheduler: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [users, setUsers] = React.useState<UsersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Email: \"\",\n      IsScheduler: false,\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  const fetchUsers = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Search/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchUsers().then((data) => setUsers(data.personArray));\n  }, [profile]);\n\n  // Available Jobs Segment\n  //////////////////////////////////////\n  interface AvailableJobData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [schedAvailableJobs, setSchedAvailableJobs] = React.useState<\n    AvailableJobData[]\n  >([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No     Jobs\",\n      DateDay: \"Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedAvailableShifts/\" + profile.UserId,\n        {}\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const AvailableJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {schedAvailableJobs.map((availableJob) => (\n          <IonCard key={availableJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${availableJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{availableJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{availableJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location:</IonCol>\n                  <IonCol>{availableJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{availableJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // SchedScheduled Jobs Segment\n  //////////////////////////////////////////////\n  interface SchedScheduledJobsData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [schedScheduledJobs, setSchedScheduledJobs] = React.useState<\n    SchedScheduledJobsData[]\n  >([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No Jobs\",\n      DateDay: \"Sched Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchScheduledJobs = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedScheduledShifts/\" + profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const ScheduledJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {schedScheduledJobs.map((schedScheduledJob) => (\n          <IonCard key={schedScheduledJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${schedScheduledJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{schedScheduledJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{schedScheduledJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{schedScheduledJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{schedScheduledJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={schedScheduledJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  //Sched Past Jobs Segment\n  /////////////////////////////////////\n  interface SchedPastJobsData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [myPastJobs, setMyPastJobs] = React.useState<SchedPastJobsData[]>([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No Past\",\n      DateDay: \"Jobs Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchPastJobs = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedPastShifts/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const PastJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myPastJobs.map((myPastJob) => (\n          <IonCard key={myPastJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${myPastJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myPastJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myPastJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myPastJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myPastJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setSchedAvailableJobs(data.SchedAvailableJob);\n    });\n    fetchScheduledJobs().then((data) =>\n      setSchedScheduledJobs(data.SchedScheduledJob)\n    );\n    fetchPastJobs().then((data) => setMyPastJobs(data.SchedPastJob));\n  }, [profile]);\n\n  const SelectAJobList: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon slot=\"\" size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"7\">\n            <h1>Select A Job List</h1>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  //Segment Actions Logic\n  /////////////////////////////////////\n  const [mainSegment, setMainSegment] = useState<string>(\"\");\n\n  const MainSegmentActions: React.FC = () => {\n    if (mainSegment == \"past\") {\n      return <PastJobsSegment />;\n    }\n    if (mainSegment == \"scheduled\") {\n      return <ScheduledJobsSegment />;\n    }\n    if (mainSegment == \"open\") {\n      return <AvailableJobsSegment />;\n    }\n    return <SelectAJobList />;\n  };\n\n  //Toggle\n  //////////////////////////\n  const [checked, setChecked] = React.useState<boolean>(true);\n  const handleToggle = () => {\n    if (checked) window.location.href = \"/Main\";\n    return;\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title1\">WerkApp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              WerkApp\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar className=\"bckgrnd\">\n          <IonGrid>\n            <IonRow className=\"tpmrgn\">\n              <IonCol size=\"2\">\n                {/* <IonIcon size=\"large\" icon={reorderThreeOutline}></IonIcon> */}\n                <IonToggle\n                  checked\n                  // checked={checked}\n                  onIonChange={(e) => {\n                    setChecked(e.detail.checked);\n                    handleToggle();\n                  }}\n                  color=\"danger\"\n                ></IonToggle>\n                <IonLabel className=\"smallfont\">Scheduler</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\">\n                <IonSearchbar\n                  value={searchText}\n                  onIonChange={(e) => setSearchText(e.detail.value!)}\n                  animated\n                  className=\"srchbr\"\n                ></IonSearchbar>\n              </IonCol>\n              <IonCol size=\"1\">\n                <IonAvatar slot=\"\" className=\"tinyavatar\">\n                  <img src={profile.ProfilePicURL} />\n                </IonAvatar>\n              </IonCol>\n            </IonRow>\n\n            <IonList className=\"searchBar\">\n                {users\n                  .filter((value) => {\n                    if (searchText == \"\") {\n                      return \"\";\n                    } else if (\n                      value.FirstName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    } else if (\n                      value.LastName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    }\n                  })\n                  .map((user) => (\n                    <IonItem\n                      href={`/AssociateProfile/${user.UserId}`}\n                      key={user.UserId}\n                    >\n                      <IonAvatar className=\"avatario\" slot=\"start\">\n                        <img src={user.ProfilePicURL} />\n                      </IonAvatar>\n                      <IonLabel className=\"labelo\">\n                        <h1>\n                          {user.FirstName} {user.LastName}\n                        </h1>\n                        <p>{user.Company}</p>\n                      </IonLabel>\n                      <br></br>\n                    </IonItem>\n                  ))}\n              </IonList>\n\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  className=\"schdbckgrnd\"\n                  // value=\"\"\n                  onIonChange={(e: any) => {\n                    setMainSegment(e.detail.value!);\n                    console.log(mainSegment);\n                  }}\n                >\n                  <IonSegmentButton value=\"open\">\n                    <IonLabel>\n                      <h2>Open</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"scheduled\">\n                    <IonLabel>\n                      <h2>Scheduled</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"past\">\n                    <IonLabel>\n                      <h2>Past</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n\n        {/* Segment Lists */}\n        <MainSegmentActions />\n        {/* /////////////// */}\n      </IonContent>\n\n      <IonRow>\n        <IonCol size=\"1\"></IonCol>\n        <IonCol size=\"10\">\n          <IonButton\n            expand=\"block\"\n            color=\"secondwarning\"\n            fill=\"solid\"\n            href=\"/ScheduleJob\"\n          >\n            + Schedule New Job\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"1\"></IonCol>\n      </IonRow>\n    </IonPage>\n  );\n};\n\nexport default SchedulerView;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Crews.tsx",["318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState } from \"react\";\nimport {\n  IonContent,\n  IonLabel,\n  IonList,\n  IonItem,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  IonImg,\n  useIonViewDidEnter,\n  IonButton,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport { person, arrowBackCircle, arrowBack, people } from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./Associates.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\n\nconst Crews: React.FC = () => {\n  \n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">My Crews</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              My Crews\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/SchedulerView\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n        <br></br>\n        <IonGrid>\n          <IonRow className=\"\">\n            <IonCol className=\"title2\">\n              <IonIcon size=\"large\" icon={people} />\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n        <IonGrid>\n          <IonRow className=\"grid1\">\n            <IonCol>\n              <IonButton\n                href=\"/AddNewCrew\"\n                color=\"secondwarning\"\n                size=\"large\"\n                expand=\"block\"\n                fill=\"outline\"\n              >\n                + Add New\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Crews;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/PublishJob.tsx",["330","331","332","333","334","335","336","337","338","339","340"],"import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  IonInput,\n  IonTextarea,\n  IonSelect,\n  IonSelectOption,\n  IonAvatar,\n  useIonViewDidEnter,\n  IonList,\n  IonCheckbox,\n  IonFooter,\n  IonTabs,\n  IonTabBar,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport \"./CreateAccount.css\";\nimport { arrowBackCircle, checkmarkDoneSharp } from \"ionicons/icons\";\nimport GetUser from \"../components/GetUser\";\n\ninterface PublishJobProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst PublishJob: React.FC<PublishJobProps> = ({ match }) => {\n// Get Self UserId\n  interface ProfileData {\n    UserId: number;\n  }\n  const [myProfile, setMyProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setMyProfile(data.personDataFound));\n  }, []);\n\n  // Get Array Of All My Associates\n  interface AssociatesData {\n    UserId: any;\n    FirstName: string;\n    LastName: string;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n    isSelected: boolean;\n  }\n  const [associatesCrew, setAssociatesCrew] = React.useState<AssociatesData[]>([\n    {\n      UserId: \"\",\n      FirstName: \"\",\n      LastName: \"\",\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"\",\n      isSelected: false,\n    },\n  ]);\n\n  const fetchAssociates = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/businessassociate/ListOfAssociates/\" +\n          myProfile.UserId,\n        {}\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchAssociates().then((data) => setAssociatesCrew(data.listOfAssociates2));\n  }, [myProfile]);\n\n  //Set My Crew\n  const [crew, setCrew] = useState<Array<number>>([]);\n\n  const handleSubmit = () => {\n    const MyCrew = {\n      UserId: myProfile.UserId,\n      Crew: crew,\n      JobJobID: match.params,\n    };\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/PublishJob\", { MyCrew })\n      .then((data) => {\n        console.log(data);\n        window.location.href = \"/SchedulerView\"\n    });\n  };\n\n  console.log(crew);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Choose Werkers</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Choose Werkers\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/ScheduleJob\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n          </IonRow>\n          <form>\n            <IonGrid>\n              <IonList className=\"searchBar\">\n                {associatesCrew.map((val, key) => {\n                  key = val.UserId;\n                  return (\n                    <IonItem className=\"searchBar\">\n                      <IonCol className=\"squared\" size=\"1\">\n                        <IonCheckbox\n                          value={val.UserId}\n                          onIonChange={(event: any) => {\n                            const selectedCrew = parseInt(event.target.value);\n                            if (crew.includes(selectedCrew)) {\n                              const newIds = crew.filter(\n                                (crewId) => crewId !== selectedCrew\n                              );\n                              setCrew(newIds);\n                            } else {\n                              const newCrew = [...crew];\n                              newCrew.push(selectedCrew);\n                              setCrew(newCrew);\n                            }\n                          }}\n                          checked={crew.includes(val.UserId) ? true : false}\n                        />\n                      </IonCol>\n                      <IonCol size=\"1\" className=\"listCol\">\n                        <IonAvatar>\n                          <img src={val.ProfilePicURL} />\n                        </IonAvatar>\n                      </IonCol>\n                      <IonCol size=\"3\" className=\"listCol\">\n                        {val.FirstName} {val.LastName}\n                      </IonCol>\n                      <IonCol size=\"4\" className=\"listCol\">\n                        {val.Company}\n                      </IonCol>\n                    </IonItem>\n                  );\n                })}\n              </IonList>\n            </IonGrid>\n          </form>\n        </IonGrid>\n      </IonContent>\n\n      <IonTabBar className=\"schedulebutton\">\n        <IonTabButton>\n          <IonRow>\n            <IonCol></IonCol>\n            <IonCol>\n              <IonButton\n                onClick={handleSubmit}\n                color=\"danger\"\n                size=\"large\"\n                fill=\"solid\"\n                href=\"/SchedulerView\"\n              >\n                Schedule\n              </IonButton>\n            </IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n        </IonTabButton>\n      </IonTabBar>\n    </IonPage>\n  );\n};\n\nexport default PublishJob;\n\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftDetails.tsx",["341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonTabBar,\n  IonCard,\n  IonAvatar,\n  IonCardContent,\n  IonList,\n  IonCheckbox,\n  IonSegment,\n  IonSegmentButton,\n  useIonAlert,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  closeOutline,\n  closeCircleOutline,\n  closeCircle,\n  chatbubbleOutline,\n  people,\n  document,\n  documentOutline,\n  documentTextOutline,\n  peopleOutline,\n  chatboxOutline,\n} from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface ShiftDetailsProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst SchedShiftDetails: React.FC<ShiftDetailsProps> = ({ match }) => {\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  interface SchedJobData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    NumberOfWerkers: number;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n  }\n\n  const [schedJob, setSchedJob] = useState<SchedJobData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    NumberOfWerkers: 0,\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n  });\n\n  interface SchedWerkersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [werkers, setWerkers] = useState<SchedWerkersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  interface OpenShiftData {\n    unfilledshifts: number;\n    ShiftStatus: string;\n  }\n  const [openShifts, setOpenShifts] = useState<OpenShiftData>({\n    unfilledshifts: 0,\n    ShiftStatus: \"\",\n  });\n\n  console.log(match.params.id);\n\n  const fetchSchedJob = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedShiftDetails/\" + match.params.id,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  useEffect(() => {\n    fetchSchedJob().then((data) => {\n      setSchedJob(data.WerkShift);\n      setWerkers(data.Werkers);\n      setOpenShifts(data.OpenShifts);\n    });\n  }, [profile]);\n\n  // Button for available job summary\n  //////////////////////////////////////////\n  const handleSchedCancel = () => {\n    const werkJob = {\n      UserId: profile.UserId,\n    };\n\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedCancel/\" + schedJob.ShiftId, {\n        werkJob,\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/SchedShiftDetails/\" + schedJob.ShiftId;\n      });\n  };\n\n  const SchedAvailableJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: \"Cancel Job?\",\n                  buttons: [\"No\", { text: \"Yes\", handler: handleSchedCancel }],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"secondwarning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Cancel Job\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              href={`/EditShift/${match.params.id}`}\n              color=\"medium\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Edit Job\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  const SchedScheduledJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: \"Cancel Job?\",\n                  buttons: [\"No\", { text: \"Yes\", handler: handleSchedCancel }],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"secondwarning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Cancel Job\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              href={`/EditShift/${schedJob.ShiftId.toString}`}\n              color=\"medium\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Edit Job\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  // Button for past job summary\n  ///////////////////////////////////////////\n  const handlePaid = () => {\n    const JobPaid = {\n      UserId: profile.UserId,\n    };\n\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/Paid/\" + schedJob.ShiftId, { JobPaid })\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  const SchedPastJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              // onClick={() =>\n              //   present({\n              //     header: \"Do This Thing?\",\n              //     buttons: [\"Cancel\", { text: \"Ok\", handler: handleWhatever }],\n              //     onDidDismiss: (e) => console.log(\"did dismiss\"),\n              //   })\n              // }\n              color=\"secondwarning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Mark Closed\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              href={`/EditShift/${schedJob.ShiftId.toString}`}\n              color=\"medium\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Edit Job\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  // Conditionally render action buttons\n  ///////////////////////////////////////\n  const JobSummaryActions: React.FC = () => {\n    if (openShifts.ShiftStatus == \"Open\") {\n      return <SchedAvailableJobButton />;\n    }\n    if (openShifts.ShiftStatus == \"Scheduled\") {\n      return <SchedScheduledJobButton />;\n    }\n    return <SchedPastJobButton />;\n  };\n\n  const [present] = useIonAlert();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Job Summary</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Job Summary\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar>\n          <IonGrid>\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  value=\"/SchedShiftDetails/\"\n                  onIonChange={(e: any) => {\n                    window.location.href =\n                      `${e.detail.value}` + match.params.id;\n                  }}\n                >\n                  <IonSegmentButton value=\"/SchedShiftDetails/\">\n                    <IonIcon icon={documentTextOutline} />\n                    <IonLabel>\n                      <h2>Details</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftWerkers/\">\n                    <IonIcon icon={peopleOutline} />\n                    <IonLabel>\n                      <h2>Werkers</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftChat/\">\n                    <IonIcon icon={chatboxOutline} />\n                    <IonLabel>\n                      <h2>Chat</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/SchedulerView\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n            <IonCol></IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n        </IonGrid>\n        <IonGrid>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Date:</IonCol>\n            <IonDatetime\n              displayFormat=\"MMM D, YYYY\"\n              value={schedJob.DateDay}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>{\" \"}\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Start Time:</IonCol>\n            <IonDatetime\n              displayFormat=\"h:mm A\"\n              value={schedJob.StartDateTime}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Finish Time:</IonCol>\n            <IonDatetime\n              displayFormat=\"h:mm A\"\n              value={schedJob.FinishDateTime}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Pay:</IonCol>\n            <h1>{schedJob.Pay}</h1>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Company:</IonCol>\n            {schedJob.Company}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Location:</IonCol>\n            {schedJob.Location}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Job#:</IonCol>\n            {schedJob.ShiftIdentifier}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n\n          <br></br>\n\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Notes:</IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"2\"></IonCol>\n            <IonCol size=\"9\">{schedJob.ShiftNotes}</IonCol>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n        </IonGrid>\n      </IonContent>\n      <br></br>\n\n      <JobSummaryActions />\n    </IonPage>\n  );\n};\n\nexport default SchedShiftDetails;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ShiftDetails.tsx",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonTabBar,\n  IonCard,\n  IonAvatar,\n  IonCardContent,\n  IonSegment,\n  IonSegmentButton,\n  IonList,\n  useIonAlert,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  documentTextOutline,\n  peopleOutline,\n  chatboxOutline,\n} from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface ShiftDetailsProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst ShiftDetails: React.FC<ShiftDetailsProps> = ({ match }) => {\n  interface ShiftDetailsData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n    ShiftStatus: string;\n    SchedFirstName: string;\n    SchedLastName: string;\n    IsPaid: boolean;\n  }\n\n  const [shiftDetails, setshiftDetails] = useState<ShiftDetailsData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n    ShiftStatus: \"\",\n    SchedFirstName: \"\",\n    SchedLastName: \"\",\n    IsPaid: false,\n  });\n\n  const fetchAvailableJob = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftDetails/\" +\n          match.params.id +\n          \"/\" +\n          profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useEffect(() => {\n    fetchAvailableJob().then((data) => setshiftDetails(data.werkShift));\n  }, [profile]);\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, [shiftDetails]);\n\n  // Button for available job summary\n  //////////////////////////////////////////\n  const handleWerk = () => {\n    const werkJob = {\n      UserId: profile.UserId,\n      ShiftId: shiftDetails.ShiftId,\n      SchedID: shiftDetails.UserUserId,\n    };\n\n    axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/WerkShift/\", {\n        werkJob,\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/ShiftDetails/\" + shiftDetails.ShiftId;\n      });\n  };\n\n  const [present] = useIonAlert();\n\n  const AvailableJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: \"Werk This Job?\",\n                  buttons: [\"Cancel\", { text: \"Ok\", handler: handleWerk }],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"warning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Werk\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  // Button for scheduled job summary\n  /////////////////////////////\n  const handleWerked = () => {\n    const updateWerkerShiftStatus = {\n      UserId: profile.UserId,\n      ShiftId: shiftDetails.ShiftId,\n      UpdateStatus: \"Werked\",\n      SchedID: shiftDetails.UserUserId,\n    };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftStatusUpdate/\", {\n        updateWerkerShiftStatus,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/ShiftDetails/\" + shiftDetails.ShiftId;\n      });\n  };\n\n  const handleCancel = () => {\n    const updateWerkerShiftStatus = {\n      UserId: profile.UserId,\n      ShiftId: shiftDetails.ShiftId,\n      UpdateStatus: \"Cancelled\",\n    };\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftStatusUpdate/\", {\n        updateWerkerShiftStatus,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/PastJob/\" + shiftDetails.ShiftId;\n      });\n  };\n\n  const ScheduledJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: `Mark as \"Werked\"?`,\n                  buttons: [\"Cancel\", { text: \"Ok\", handler: handleWerked }],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"warning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Werked\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: \"Cancel Job?\",\n                  buttons: [\"Cancel\", { text: \"Ok\", handler: handleCancel }],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"medium\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Cancel\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  // Button for past job summary\n  ///////////////////////////////////////////\n  const handlePaid = () => {\n    const updateWerkerShiftStatus = {\n      UserId: profile.UserId,\n      ShiftId: shiftDetails.ShiftId,\n      IsPaid: true,\n      SchedID: shiftDetails.UserUserId,\n    };\n\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/WerkerIsPaid/\", {\n        updateWerkerShiftStatus,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/ShiftDetails/\" + shiftDetails.ShiftId;\n      });\n  };\n\n  const PaidJobButton: React.FC = () => {\n    return (\n      <React.Fragment>\n          {/* <IonRow>\n            <IonCol size=\"5\"></IonCol>\n            <IonCol size=\"\">\n              <h2>Paid</h2>\n            </IonCol>\n            <IonCol></IonCol>\n          </IonRow> */}\n        </React.Fragment>\n    );\n  };\n\n  // const ShiftDetails: React.FC<ShiftDetailsProps> = ({ match }) => {\n\n  const PastJobButton: React.FC = () => {\n      return (\n        <React.Fragment>\n          <IonRow>\n            <IonCol></IonCol>\n            <IonCol size=\"11\">\n              <IonButton\n                onClick={() =>\n                  present({\n                    header: \"Mark as Paid?\",\n                    buttons: [\"Cancel\", { text: \"Ok\", handler: handlePaid }],\n                    onDidDismiss: (e) => console.log(\"did dismiss\"),\n                  })\n                }\n                color=\"warning\"\n                fill=\"solid\"\n                expand=\"block\"\n              >\n                Mark Paid\n              </IonButton>\n            </IonCol>\n            <IonCol></IonCol>\n          </IonRow>\n        </React.Fragment>\n      );\n  };\n\n  console.log(shiftDetails.ShiftStatus);\n  // Conditionally render action buttons\n  ///////////////////////////////////////\n  const JobSummaryActions: React.FC = () => {\n    if (shiftDetails.ShiftStatus == \"Scheduled\") {\n      return <ScheduledJobButton />;\n    }\n    if (shiftDetails.ShiftStatus == \"Cancelled\") {\n      return <PastJobButton />;\n    }\n    if (shiftDetails.ShiftStatus == \"Werked\") {\n      return <PastJobButton />;\n    }\n    if (shiftDetails.ShiftStatus == \"Paid\") {\n      return <PaidJobButton />;\n    }\n    return <AvailableJobButton />;\n  };\n\n  const ChatToolbar: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonToolbar>\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonSegment\n                  value=\"/ShiftDetails/\"\n                  onIonChange={(e: any) => {\n                    window.location.href =\n                      `${e.detail.value}` + match.params.id;\n                  }}\n                >\n                  <IonSegmentButton value=\"/ShiftDetails/\">\n                    <IonIcon icon={documentTextOutline} />\n                    <IonLabel>\n                      <h2>Details</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/ShiftChat/\">\n                    <IonIcon icon={chatboxOutline} />\n                    <IonLabel>\n                      <h2>Chat</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </React.Fragment>\n    );\n  };\n\n  // const NotChatToolbar: React.FC = () => {\n  //   return (\n  //     <React.Fragment>\n  //       <br></br>\n  //     </React.Fragment>\n  //   );\n  // };\n\n  // //Conditionally render ShiftDetails Toolbar w/ Chat\n  // const ShiftDetailsToolbar: React.FC = () => {\n  //   if (shiftDetails.ShiftStatus == \"Scheduled\") {\n  //     return <ChatToolbar />;\n  //   }\n  //   if (shiftDetails.ShiftStatus == \"Cancelled\") {\n  //     return <ChatToolbar />;\n  //   }\n  //   if (shiftDetails.ShiftStatus == \"Werked\") {\n  //     return <ChatToolbar />;\n  //   }\n  //   return <NotChatToolbar />;\n  // };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Job Summary</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Job Summary\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <ChatToolbar/>\n        {/* <ShiftDetailsToolbar /> */}\n\n        <IonItem>\n          <IonAvatar className=\"avtr\" slot=\"start\">\n            <img src={\"../assets/profilePic.png\"} />\n          </IonAvatar>\n          <IonLabel>\n            {shiftDetails.SchedFirstName} {shiftDetails.SchedLastName}\n          </IonLabel>\n        </IonItem>\n        <br></br>\n        <IonGrid>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Date:</IonCol>\n            <IonDatetime\n              displayFormat=\"MMM D, YYYY\"\n              value={shiftDetails.DateDay}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>{\" \"}\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Start Time:</IonCol>\n            <IonDatetime\n              displayFormat=\"h:mm A\"\n              value={shiftDetails.StartDateTime}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Finish Time:</IonCol>\n            <IonDatetime\n              displayFormat=\"h:mm A\"\n              value={shiftDetails.FinishDateTime}\n            ></IonDatetime>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Pay:</IonCol>\n            <h2>{shiftDetails.Pay}</h2>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Company:</IonCol>\n            {shiftDetails.Company}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Location:</IonCol>\n            {shiftDetails.Location}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Job#:</IonCol>\n            {shiftDetails.ShiftIdentifier}\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n          <IonRow>\n            <IonCol size=\"1\"></IonCol>\n            <IonCol>Notes:</IonCol>\n          </IonRow>\n          <IonRow>\n            <IonCol size=\"2\"></IonCol>\n            <IonCol size=\"9\">{shiftDetails.ShiftNotes}</IonCol>\n            <IonCol size=\"1\"></IonCol>\n          </IonRow>\n          <br></br>\n        </IonGrid>\n      </IonContent>\n      <JobSummaryActions />\n    </IonPage>\n  );\n};\n\nexport default ShiftDetails;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/PastJob.tsx",["383","384","385","386","387","388","389"],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/components/GetUser.tsx",["390","391","392"],"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/ShiftChat.tsx",["393"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonItem,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonAvatar,\n  IonSegment,\n  IonSegmentButton,\n  IonInput,\n  IonList,\n  IonItemDivider,\n} from \"@ionic/react\";\nimport {\n  documentTextOutline,\n  chatboxOutline,\n  paperPlaneOutline,\n} from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface ShiftChatProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst ShiftChat: React.FC<ShiftChatProps> = ({ match }) => {\n  interface ShiftDetailsData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n    ShiftStatus: any;\n  }\n\n  const [shiftDetails, setshiftDetails] = useState<ShiftDetailsData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n    ShiftStatus: \"\",\n  });\n\n  const fetchAvailableJob = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftDetails/\" + match.params.id, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ChatData {\n    IsRead: boolean;\n    MessageAuthor: string;\n    MessageBox: string;\n    ShiftShiftId: number;\n    UserActionTakenId: number;\n    UserActionTakenUserId: number;\n    createdAt: string;\n    id: number;\n    updatedAt: string;\n  }\n\n  const [getShiftMessages, setGetShiftMessages] = useState<ChatData[]>([\n    {\n      IsRead: false,\n      MessageAuthor: \"\",\n      MessageBox: \"\",\n      ShiftShiftId: 0,\n      UserActionTakenId: 0,\n      UserActionTakenUserId: 0,\n      createdAt: \"\",\n      id: 0,\n      updatedAt: \"\",\n    },\n  ]);\n\n  const fetchShiftMessages = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/message/GetShiftMessages/\" + match.params.id,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    fetchAvailableJob().then((data) => setshiftDetails(data.werkShift));\n    fetchShiftMessages().then((data) =>\n      setGetShiftMessages(data.shiftMessages)\n    );\n  }, []);\n\n  useIonViewDidEnter(() => {\n    let interval = setInterval(() => {\n      fetchShiftMessages().then((data) =>\n        setGetShiftMessages(data.shiftMessages)\n      );\n    }, 30000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, [shiftDetails]);\n\n  /////////////////////////////////\n  ///// Scroll to bottom /////////////\n  const bottomRef = useRef<null | HTMLDivElement>(null);\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [getShiftMessages]);\n\n  /////////////////////////\n  //post a message\n  const [sendMessage, setSendMessage] = useState<string>(\"\");\n\n  const postMessage = () => {\n    const newNotificationRecord = {\n      UserUserId_actor: profile.UserId,\n      UserMessage: sendMessage,\n      ShiftId: shiftDetails.ShiftId,\n      SchedUserId: shiftDetails.UserUserId,\n    };\n    return axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/message/PostShiftMessage\", {\n        newNotificationRecord,\n        withCredentials: true,\n      })\n      .then(() => {\n        setSendMessage(\"\");\n      });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Chat</IonTitle>\n        </IonToolbar>\n        <IonToolbar>\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <IonSegment\n                  value=\"/ShiftChat\"\n                  onIonChange={(e: any) => {\n                    window.location.href = \"/ShiftDetails/\" + match.params.id;\n                  }}\n                >\n                  <IonSegmentButton value=\"/ShiftDetails\">\n                    <IonIcon icon={documentTextOutline} />\n                    <IonLabel>\n                      <h2>Details</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/ShiftChat\">\n                    <IonIcon icon={chatboxOutline} />\n                    <IonLabel>\n                      <h2>Chat</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonRow>\n          <IonCol className=\"searchBar\">\n            <IonList className=\"searchBar\">\n              {getShiftMessages.map((getShiftMessage) => (\n                <React.Fragment key={getShiftMessage.id}>\n                  <IonItem lines=\"none\">\n                    <IonAvatar className=\"avatario\" slot=\"start\">\n                      <img src={\"../assets/profilePic.png\"} />\n                    </IonAvatar>\n                    <IonLabel className=\"ion-text-wrap\">\n                      <p>{getShiftMessage.MessageAuthor}</p>\n                    </IonLabel>\n                    <IonDatetime\n                      slot=\"end\"\n                      className=\"td\"\n                      id=\"dynamicDisabled\"\n                      displayFormat=\"h:mm a M/D/YY\"\n                      value={getShiftMessage.createdAt}\n                    ></IonDatetime>\n                  </IonItem>\n                  <IonItem>\n                    <IonAvatar className=\"avatario\" slot=\"start\"></IonAvatar>\n                    {getShiftMessage.MessageBox}\n                    <IonAvatar></IonAvatar>\n                  </IonItem>\n                </React.Fragment>\n              ))}\n            </IonList>\n          </IonCol>\n        </IonRow>\n        <div ref={bottomRef} />\n      </IonContent>\n      <IonItemDivider>Send Message</IonItemDivider>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonInput\n              value={sendMessage}\n              placeholder=\"Send Message...\"\n              onIonChange={(e) => setSendMessage(e.detail.value!)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n        <IonCol size=\"2\">\n          <IonButton type=\"submit\" onClick={postMessage} fill=\"clear\">\n            <IonIcon size=\"large\" icon={paperPlaneOutline} />\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonPage>\n  );\n};\n\nexport default ShiftChat;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/EditShift.tsx",["394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IonContent,\n  IonLabel,\n  IonButton,\n  IonInput,\n  IonItem,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonDatetime,\n  IonTextarea,\n  useIonViewDidEnter,\n} from \"@ionic/react\";\nimport { arrowBackCircle } from \"ionicons/icons\";\nimport axios from \"axios\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport \"./Profile.css\";\nimport GetUser from \"../components/GetUser\";\n\ninterface EditShiftDetailsProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst EditShift: React.FC<EditShiftDetailsProps> = ({ match }) => {\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  interface SchedJobData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    NumberOfWerkers: number;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n  }\n\n  const [editSchedJob, setEditSchedJob] = useState<SchedJobData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    NumberOfWerkers: 0,\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n  });\n\n  interface SchedWerkersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [werkers, setWerkers] = useState<SchedWerkersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  interface OpenShiftData {\n    unfilledshifts: number;\n    ShiftStatus: string;\n  }\n  const [openShifts, setOpenShifts] = useState<OpenShiftData>({\n    unfilledshifts: 0,\n    ShiftStatus: \"\",\n  });\n\n  const fetchEditSchedJob = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedShiftDetails/\" + match.params.id,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((thing) => {\n        console.log(thing);\n        return thing.data;\n      });\n  };\n\n  useIonViewDidEnter(() => {\n    fetchEditSchedJob().then((data) => {\n      setEditSchedJob(data.WerkShift);\n      setWerkers(data.Werkers);\n      setOpenShifts(data.OpenShifts);\n    });\n  }, []);\n\n  console.log(editSchedJob);\n\n  const handleSubmit = () => {\n    axios\n      .put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/EditSchedShift/\", {\n        withCredentials: true,\n        editSchedJob,\n      })\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/SchedShiftDetails/\" + editSchedJob.ShiftId;\n      });\n  };\n\n  const Daterillo: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonDatetime\n          min=\"2020-06-04\"\n          max=\"2100-08-23\"\n          displayFormat=\"MMM D, YYYY\"\n          value={editSchedJob.DateDay}\n        ></IonDatetime>\n      </React.Fragment>\n    );\n  };\n\n  const StartTimerillo: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonDatetime\n          displayFormat=\"h:mm A\"\n          value={editSchedJob.StartDateTime}\n        ></IonDatetime>\n      </React.Fragment>\n    );\n  };\n\n  const EndTimerillo: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonDatetime\n          displayFormat=\"h:mm A\"\n          value={editSchedJob.FinishDateTime}\n        ></IonDatetime>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Edit Job</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Edit Job\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <form>\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Job ID/#:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol></IonCol>\n              <IonCol>\n                <IonInput\n                  type=\"text\"\n                  name=\"ShiftIdentifier\"\n                  value={editSchedJob.ShiftIdentifier}\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      ShiftIdentifier: e.target.value,\n                    })\n                  }\n                  clearInput\n                ></IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Date:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol></IonCol>\n              <IonCol>\n                <IonInput\n                  type=\"text\"\n                  name=\"DateDay\"\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      DateDay: e.target.value!,\n                    })\n                  }\n                  clearInput\n                >\n                  <Daterillo></Daterillo>\n                </IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Start:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol></IonCol>\n              <IonCol>\n                <IonInput\n                  type=\"text\"\n                  name=\"StartDateTime\"\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      StartDateTime: e.target.value,\n                    })\n                  }\n                  clearInput\n                >\n                  <StartTimerillo></StartTimerillo>\n                </IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>End:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol></IonCol>\n              <IonCol>\n                <IonInput\n                  type=\"text\"\n                  name=\"FinishDateTime\"\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      FinishDateTime: e.target.value,\n                    })\n                  }\n                  clearInput\n                >\n                  <EndTimerillo></EndTimerillo>\n                </IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Company:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol>\n              \n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n              <IonInput\n                  value={editSchedJob.Company}\n                  type=\"text\"\n                  name=\"Company\"\n                  class=\"ion-text-wrap\"\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      Company: e.target.value,\n                    })\n                  }\n                  clearInput\n                ></IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Location:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol>\n              \n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n              <IonInput\n                  type=\"text\"\n                  name=\"Location\"\n                  class=\"ion-text-wrap\"\n                  value={editSchedJob.Location}\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      Location: e.target.value,\n                    })\n                  }\n                  clearInput\n                ></IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Pay: </h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol>\n                \n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n              <IonInput\n                  type=\"text\"\n                  name=\"Pay\"\n                  class=\"ion-text-wrap\"\n                  value={editSchedJob.Pay}\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      Pay: e.target.value,\n                    })\n                  }\n                  clearInput\n                ></IonInput>\n              </IonCol>\n            </IonRow>\n\n            <IonRow>\n              <IonCol>\n                <IonLabel>\n                  <h1>Notes:</h1>\n                </IonLabel>\n              </IonCol>\n              <IonCol>\n                \n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n              <IonInput\n                  type=\"text\"\n                  name=\"ShiftNotes\"\n                  class=\"ion-text-wrap\"\n                  value={editSchedJob.ShiftNotes}\n                  onIonChange={(e: any) =>\n                    setEditSchedJob({\n                      ...editSchedJob,\n                      ShiftNotes: e.target.value,\n                    })\n                  }\n                ></IonInput>\n              </IonCol>\n            </IonRow>\n          </form>\n        </IonGrid>\n      </IonContent>\n      <IonButton\n        onClick={handleSubmit}\n        color=\"secondwarning\"\n        size=\"large\"\n        fill=\"solid\"\n        expand=\"block\"\n      >\n        Save\n      </IonButton>\n      <IonButton\n        href={`/SchedShiftDetails/${match.params.id}`}\n        color=\"medium\"\n        size=\"large\"\n        fill=\"solid\"\n        expand=\"block\"\n      >\n        Cancel\n      </IonButton>\n    </IonPage>\n  );\n};\n\nexport default EditShift;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftWerkers.tsx",["406","407","408","409","410","411"],"import React, { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonItem,\n  useIonViewDidEnter,\n  IonAvatar,\n  IonList,\n  IonSegment,\n  IonSegmentButton,\n  useIonAlert,\n} from \"@ionic/react\";\nimport {\n  closeCircleOutline,\n  documentTextOutline,\n  peopleOutline,\n  chatboxOutline,\n  checkmarkCircleOutline,\n} from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface ShiftDetailsProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst SchedShiftWerkers: React.FC<ShiftDetailsProps> = ({ match }) => {\n  const [present] = useIonAlert();\n\n  /////////////////////////////////////////\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  //////////////////////////////////////////////////\n  interface SchedJobData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    NumberOfWerkers: number;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n  }\n\n  const [schedJob, setSchedJob] = useState<SchedJobData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    NumberOfWerkers: 0,\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n  });\n\n  //////////////////////////\n  interface SchedWerkersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [werkers, setWerkers] = useState<SchedWerkersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  //////////////////////////\n  interface OpenShiftData {\n    unfilledshifts: number;\n    ShiftStatus: string;\n  }\n  const [openShifts, setOpenShifts] = useState<OpenShiftData>({\n    unfilledshifts: 0,\n    ShiftStatus: \"\",\n  });\n\n  const fetchSchedJob = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedShiftDetails/\" + match.params.id,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  interface InvitedWerkersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [invitedWerkers, setInvitedWerkers] = useState<InvitedWerkersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  const fetchInvitedWerkers = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/InvitedWerkers/\" + match.params.id, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  //////////////////////////////////////////////////////////\n  useEffect(() => {\n    fetchSchedJob().then((data) => {\n      setSchedJob(data.WerkShift);\n      setWerkers(data.Werkers);\n      setOpenShifts(data.OpenShifts);\n    });\n    fetchInvitedWerkers().then((invitedData) =>\n      setInvitedWerkers(invitedData.invitedWerkerList)\n    );\n  }, [profile]);\n\n  ///////////////////////////////////////////////////////////////\n  const [cancelWerker, setCancelWerker] = useState<number>(0);\n\n  const handleCancelWerker = () => {\n    axios\n      .delete(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/RemoveWerkerFromShift/\" +\n          cancelWerker + \"/\" +\n          match.params.id +\n          \"/Scheduler/\" +\n          profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/SchedShiftWerker/\" + match.params.id;\n      });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  const handleDecrementOpenSpotByOne = () => {\n    axios\n      .put(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/AddRemoveShiftSlot/\" +\n          match.params.id + \"/Remove\",\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/SchedShiftWerkers/\" + match.params.id;\n      });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////////\n  const incrementNumberOfWerkersNeeded = () => {\n    axios\n      .put(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/AddRemoveShiftSlot/\" +\n          match.params.id + \"/Add\",\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        window.location.href = \"/SchedShiftWerkers/\" + match.params.id;\n      });\n  };\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Werkers</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Werkers\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar>\n          <IonGrid>\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  value=\"/SchedShiftWerkers/\"\n                  onIonChange={(e: any) => {\n                    window.location.href =\n                      `${e.detail.value}` + match.params.id;\n                  }}\n                >\n                  <IonSegmentButton value=\"/SchedShiftDetails/\">\n                    <IonIcon icon={documentTextOutline} />\n                    <IonLabel>\n                      <h2>Details</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftWerkers/\">\n                    <IonIcon icon={peopleOutline} />\n                    <IonLabel>\n                      <h2>Werkers</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftChat/\">\n                    <IonIcon icon={chatboxOutline} />\n                    <IonLabel>\n                      <h2>Chat</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n\n        <h4>Scheduled:</h4>\n        <IonList>\n          {werkers.map((werker) => (\n            <IonItem key={werker.UserId}>\n              <IonAvatar className=\"avatario\" slot=\"start\">\n                <img src={werker.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel className=\"labelo\">\n                {werker.FirstName} {werker.LastName}\n              </IonLabel>\n              <IonIcon\n                onClick={() => {\n                  if (openShifts.ShiftStatus !== \"Past\") {\n                    setCancelWerker(werker.UserId); \n                    present({\n                      header: \"Cancel Werker?\",\n                      buttons: [\n                        \"No\", { text: \"Yes\", handler: handleCancelWerker },\n                      ],\n                      onDidDismiss: (e) => console.log(\"did dismiss\"),\n                    });\n                  } return null\n                }}\n                className=\"cancelbox\"\n                color={openShifts.ShiftStatus == \"Past\" ? \"success\" : \"danger\"}\n                size=\"large\"\n                icon={openShifts.ShiftStatus == \"Past\" ? checkmarkCircleOutline : closeCircleOutline}\n              />\n            </IonItem>\n          ))}\n        </IonList>\n        <IonList>\n          {[...Array(openShifts.unfilledshifts)].map((openShift, i) => (\n            <IonItem key={i}>\n              <IonLabel className=\"labelo\">\n                Open Shift\n                <p>Shift # {i + 1 + werkers.length}</p>\n              </IonLabel>\n              <IonIcon\n                onClick={() =>\n                  present({\n                    header: \"Remove Open Shift?\",\n                    buttons: [\n                      \"Cancel\",\n                      { text: \"Ok\", handler: handleDecrementOpenSpotByOne },\n                    ],\n                    onDidDismiss: (e) => console.log(\"did dismiss\"),\n                  })\n                }\n                className=\"cancelbox\"\n                color=\"danger\"\n                size=\"large\"\n                icon={closeCircleOutline}\n              />\n            </IonItem>\n          ))}\n        </IonList>\n        <br></br>\n        <h4>Invited:</h4>\n        <IonList>\n          {invitedWerkers.map((invitedWerker) => (\n            <IonItem key={invitedWerker.UserId}>\n              <IonAvatar className=\"avatario\" slot=\"start\">\n                <img src={invitedWerker.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel className=\"labelo\">\n                {invitedWerker.FirstName} {invitedWerker.LastName}\n              </IonLabel>\n              <IonIcon\n                className=\"cancelbox\"\n                color=\"danger\"\n                size=\"large\"\n              />\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              onClick={() =>\n                present({\n                  header: \"Add Another Slot?\",\n                  buttons: [\n                    \"Cancel\",\n                    { text: \"Ok\", handler: incrementNumberOfWerkersNeeded },\n                  ],\n                  onDidDismiss: (e) => console.log(\"did dismiss\"),\n                })\n              }\n              color=\"secondwarning\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Add Slot +\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        {/* <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"11\">\n            <IonButton\n              // onClick={republishShift}\n              color=\"medium\"\n              fill=\"solid\"\n              expand=\"block\"\n            >\n              Edit Werkers\n            </IonButton>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow> */}\n      </React.Fragment>\n      <br></br>\n    </IonPage>\n  );\n};\n\nexport default SchedShiftWerkers;\n","/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedShiftChat.tsx",["412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Link,\n  matchPath,\n  match,\n  useRouteMatch,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonButton,\n  IonIcon,\n  IonLabel,\n  IonTabButton,\n  IonItem,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonTabBar,\n  IonCard,\n  IonAvatar,\n  IonCardContent,\n  IonSegment,\n  IonSegmentButton,\n  IonInput,\n  IonList,\n  IonItemDivider,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  documentTextOutline,\n  peopleOutline,\n  chatboxOutline,\n  text,\n  sendOutline,\n  paperPlaneOutline,\n} from \"ionicons/icons\";\nimport \"./AvailableJob.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\ninterface ShiftChatProps\n  extends RouteComponentProps<{\n    id: string;\n  }> {}\n\nconst SchedShiftChat: React.FC<ShiftChatProps> = ({ match }) => {\n  interface ShiftDetailsData {\n    ShiftId: number;\n    ShiftIdentifier: string;\n    UserUserId: string;\n    DateDay: string;\n    StartDateTime: string;\n    FinishDateTime: string;\n    Company: string;\n    Location: string;\n    Pay: string;\n    ShiftNotes: string;\n    ShiftStatus: any;\n  }\n\n  const [shiftDetails, setshiftDetails] = useState<ShiftDetailsData>({\n    ShiftId: 0,\n    ShiftIdentifier: \"\",\n    UserUserId: \"\",\n    DateDay: \"\",\n    StartDateTime: \"\",\n    FinishDateTime: \"\",\n    Company: \"\",\n    Location: \"\",\n    Pay: \"\",\n    ShiftNotes: \"\",\n    ShiftStatus: \"\",\n  });\n\n  const fetchAvailableJob = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/ShiftDetails/\" + match.params.id, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ChatData {\n    IsRead: boolean;\n    MessageAuthor: string;\n    MessageBox: string;\n    ShiftShiftId: number;\n    UserActionTakenId: number;\n    UserActionTakenUserId: number;\n    createdAt: string;\n    id: number;\n    updatedAt: string;\n  }\n\n  const [getShiftMessages, setGetShiftMessages] = useState<ChatData[]>([\n    {\n      IsRead: false,\n      MessageAuthor: \"\",\n      MessageBox: \"\",\n      ShiftShiftId: 0,\n      UserActionTakenId: 0,\n      UserActionTakenUserId: 0,\n      createdAt: \"\",\n      id: 0,\n      updatedAt: \"\",\n    },\n  ]);\n\n  const fetchShiftMessages = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/message/GetShiftMessages/\" + match.params.id,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    fetchAvailableJob().then((data) => setshiftDetails(data.werkShift));\n    fetchShiftMessages().then((data) =>\n      setGetShiftMessages(data.shiftMessages)\n    );\n  }, []);\n\n  useIonViewDidEnter(() => {\n    let interval = setInterval(() => {\n      fetchShiftMessages().then((data) =>\n        setGetShiftMessages(data.shiftMessages)\n      );\n    }, 30000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, [shiftDetails]);\n\n  const bottomRef = useRef<null | HTMLDivElement>(null);\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [getShiftMessages]);\n\n  /////////////////////////\n  //post a message\n  const [sendMessage, setSendMessage] = useState<string>(\"\");\n\n  const postMessage = () => {\n    const newNotificationRecord = {\n      UserUserId_actor: profile.UserId,\n      UserMessage: sendMessage,\n      ShiftId: shiftDetails.ShiftId,\n      SchedUserId: shiftDetails.UserUserId,\n    };\n\n    return axios\n      .post(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/message/PostShiftMessage\", {\n        newNotificationRecord,\n        withCredentials: true,\n      })\n      .then(() => {\n        setSendMessage(\"\");\n      });\n  };\n\n  console.log(sendMessage);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title2\">Chat</IonTitle>\n        </IonToolbar>\n        <IonToolbar>\n          <IonGrid>\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  value=\"/SchedShiftChat/\"\n                  onIonChange={(e: any) => {\n                    window.location.href =\n                      `${e.detail.value}` + match.params.id;\n                  }}\n                >\n                  <IonSegmentButton value=\"/SchedShiftDetails/\">\n                    <IonIcon icon={documentTextOutline} />\n                    <IonLabel>\n                      <h2>Details</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftWerkers/\">\n                    <IonIcon icon={peopleOutline} />\n                    <IonLabel>\n                      <h2>Werkers</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"/SchedShiftChat/\">\n                    <IonIcon icon={chatboxOutline} />\n                    <IonLabel>\n                      <h2>Chat</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonRow>\n          <IonCol className=\"searchBar\">\n            <IonList className=\"searchBar\">\n              {getShiftMessages.map((getShiftMessage) => (\n                <React.Fragment>\n                <IonItem lines=\"none\" key={getShiftMessage.id}>\n                  <IonAvatar className=\"avatario\" slot=\"start\">\n                    <img src={\"../assets/profilePic.png\"} />\n                  </IonAvatar>\n                  <IonLabel className=\"ion-text-wrap\">\n                    <p>{getShiftMessage.MessageAuthor}</p>\n                  </IonLabel>\n                  <IonDatetime\n                    slot=\"end\"\n                    className=\"td\"\n                    id=\"dynamicDisabled\"\n                    displayFormat=\"h:mm a M/D/YY\"\n                    value={getShiftMessage.createdAt}\n                  ></IonDatetime>\n                </IonItem>\n                <IonItem>\n                  <IonAvatar className=\"avatario\" slot=\"start\"></IonAvatar>\n                  {getShiftMessage.MessageBox}\n                  <IonAvatar></IonAvatar>\n                </IonItem>\n              </React.Fragment>\n              ))}\n            </IonList>\n          </IonCol>\n        </IonRow>\n        <div ref={bottomRef} />\n      </IonContent>\n      <IonItemDivider>Send Message</IonItemDivider>\n      <IonRow>\n        <IonCol>\n          <IonItem>\n            <IonInput\n              value={sendMessage}\n              placeholder=\"Send Message...\"\n              onIonChange={(e) => setSendMessage(e.detail.value!)}\n            ></IonInput>\n          </IonItem>\n        </IonCol>\n        <IonCol size=\"2\">\n          <IonButton type=\"submit\" onClick={postMessage} fill=\"clear\">\n            <IonIcon size=\"large\" icon={paperPlaneOutline} />\n          </IonButton>\n        </IonCol>\n      </IonRow>\n    </IonPage>\n  );\n};\n\nexport default SchedShiftChat;\n",{"ruleId":"425","severity":1,"message":"426","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":20},{"ruleId":"425","severity":1,"message":"429","line":3,"column":27,"nodeType":"427","messageId":"428","endLine":3,"endColumn":31},{"ruleId":"425","severity":1,"message":"430","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":12},{"ruleId":"425","severity":1,"message":"431","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":9},{"ruleId":"425","severity":1,"message":"432","line":11,"column":3,"nodeType":"427","messageId":"428","endLine":11,"endColumn":9},{"ruleId":"425","severity":1,"message":"433","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":10},{"ruleId":"425","severity":1,"message":"434","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":9},{"ruleId":"425","severity":1,"message":"435","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":11},{"ruleId":"425","severity":1,"message":"436","line":24,"column":3,"nodeType":"427","messageId":"428","endLine":24,"endColumn":15},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"438","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"439","line":2,"column":20,"nodeType":"427","messageId":"428","endLine":2,"endColumn":25},{"ruleId":"425","severity":1,"message":"440","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":24},{"ruleId":"425","severity":1,"message":"441","line":16,"column":3,"nodeType":"427","messageId":"428","endLine":16,"endColumn":15},{"ruleId":"425","severity":1,"message":"442","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":11},{"ruleId":"425","severity":1,"message":"443","line":22,"column":3,"nodeType":"427","messageId":"428","endLine":22,"endColumn":12},{"ruleId":"425","severity":1,"message":"444","line":23,"column":3,"nodeType":"427","messageId":"428","endLine":23,"endColumn":18},{"ruleId":"425","severity":1,"message":"445","line":27,"column":10,"nodeType":"427","messageId":"428","endLine":27,"endColumn":16},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"447","line":3,"column":3,"nodeType":"427","messageId":"428","endLine":3,"endColumn":10},{"ruleId":"425","severity":1,"message":"448","line":11,"column":3,"nodeType":"427","messageId":"428","endLine":11,"endColumn":11},{"ruleId":"425","severity":1,"message":"449","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":10},{"ruleId":"425","severity":1,"message":"432","line":13,"column":3,"nodeType":"427","messageId":"428","endLine":13,"endColumn":9},{"ruleId":"425","severity":1,"message":"431","line":14,"column":3,"nodeType":"427","messageId":"428","endLine":14,"endColumn":9},{"ruleId":"425","severity":1,"message":"450","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":15},{"ruleId":"425","severity":1,"message":"451","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":14},{"ruleId":"425","severity":1,"message":"445","line":24,"column":3,"nodeType":"427","messageId":"428","endLine":24,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":18},{"ruleId":"425","severity":1,"message":"453","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":12},{"ruleId":"425","severity":1,"message":"454","line":27,"column":3,"nodeType":"427","messageId":"428","endLine":27,"endColumn":20},{"ruleId":"425","severity":1,"message":"455","line":28,"column":3,"nodeType":"427","messageId":"428","endLine":28,"endColumn":18},{"ruleId":"425","severity":1,"message":"429","line":30,"column":10,"nodeType":"427","messageId":"428","endLine":30,"endColumn":14},{"ruleId":"456","severity":1,"message":"457","line":97,"column":6,"nodeType":"458","endLine":97,"endColumn":15,"suggestions":"459"},{"ruleId":"460","severity":1,"message":"461","line":144,"column":19,"nodeType":"462","endLine":144,"endColumn":78},{"ruleId":"425","severity":1,"message":"463","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"445","line":27,"column":10,"nodeType":"427","messageId":"428","endLine":27,"endColumn":16},{"ruleId":"425","severity":1,"message":"466","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":9},{"ruleId":"425","severity":1,"message":"467","line":16,"column":3,"nodeType":"427","messageId":"428","endLine":16,"endColumn":14},{"ruleId":"425","severity":1,"message":"468","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":20},{"ruleId":"425","severity":1,"message":"442","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":11},{"ruleId":"425","severity":1,"message":"445","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":18},{"ruleId":"425","severity":1,"message":"469","line":29,"column":3,"nodeType":"427","messageId":"428","endLine":29,"endColumn":28},{"ruleId":"456","severity":1,"message":"470","line":119,"column":6,"nodeType":"458","endLine":119,"endColumn":15,"suggestions":"471"},{"ruleId":"460","severity":1,"message":"461","line":141,"column":17,"nodeType":"462","endLine":141,"endColumn":50},{"ruleId":"460","severity":1,"message":"461","line":215,"column":21,"nodeType":"462","endLine":215,"endColumn":58},{"ruleId":"425","severity":1,"message":"447","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":10},{"ruleId":"425","severity":1,"message":"450","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":15},{"ruleId":"425","severity":1,"message":"466","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":9},{"ruleId":"425","severity":1,"message":"451","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":14},{"ruleId":"425","severity":1,"message":"445","line":23,"column":10,"nodeType":"427","messageId":"428","endLine":23,"endColumn":16},{"ruleId":"425","severity":1,"message":"452","line":23,"column":18,"nodeType":"427","messageId":"428","endLine":23,"endColumn":33},{"ruleId":"425","severity":1,"message":"453","line":23,"column":35,"nodeType":"427","messageId":"428","endLine":23,"endColumn":44},{"ruleId":"425","severity":1,"message":"472","line":23,"column":46,"nodeType":"427","messageId":"428","endLine":23,"endColumn":52},{"ruleId":"425","severity":1,"message":"429","line":24,"column":10,"nodeType":"427","messageId":"428","endLine":24,"endColumn":14},{"ruleId":"456","severity":1,"message":"470","line":79,"column":6,"nodeType":"458","endLine":79,"endColumn":15,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":113,"column":27,"nodeType":"476","messageId":"477","endLine":113,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":114,"column":28,"nodeType":"480","messageId":"481","endLine":114,"endColumn":30},{"ruleId":"460","severity":1,"message":"461","line":137,"column":17,"nodeType":"462","endLine":137,"endColumn":54},{"ruleId":"425","severity":1,"message":"482","line":22,"column":3,"nodeType":"427","messageId":"428","endLine":22,"endColumn":12},{"ruleId":"425","severity":1,"message":"441","line":23,"column":3,"nodeType":"427","messageId":"428","endLine":23,"endColumn":15},{"ruleId":"425","severity":1,"message":"483","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":16},{"ruleId":"425","severity":1,"message":"484","line":27,"column":3,"nodeType":"427","messageId":"428","endLine":27,"endColumn":18},{"ruleId":"425","severity":1,"message":"485","line":28,"column":3,"nodeType":"427","messageId":"428","endLine":28,"endColumn":15},{"ruleId":"425","severity":1,"message":"445","line":32,"column":3,"nodeType":"427","messageId":"428","endLine":32,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":33,"column":3,"nodeType":"427","messageId":"428","endLine":33,"endColumn":18},{"ruleId":"425","severity":1,"message":"453","line":34,"column":3,"nodeType":"427","messageId":"428","endLine":34,"endColumn":12},{"ruleId":"425","severity":1,"message":"486","line":35,"column":3,"nodeType":"427","messageId":"428","endLine":35,"endColumn":16},{"ruleId":"425","severity":1,"message":"487","line":36,"column":3,"nodeType":"427","messageId":"428","endLine":36,"endColumn":14},{"ruleId":"425","severity":1,"message":"488","line":37,"column":3,"nodeType":"427","messageId":"428","endLine":37,"endColumn":21},{"ruleId":"425","severity":1,"message":"489","line":38,"column":3,"nodeType":"427","messageId":"428","endLine":38,"endColumn":22},{"ruleId":"425","severity":1,"message":"490","line":39,"column":3,"nodeType":"427","messageId":"428","endLine":39,"endColumn":6},{"ruleId":"425","severity":1,"message":"491","line":40,"column":3,"nodeType":"427","messageId":"428","endLine":40,"endColumn":7},{"ruleId":"425","severity":1,"message":"492","line":41,"column":3,"nodeType":"427","messageId":"428","endLine":41,"endColumn":7},{"ruleId":"425","severity":1,"message":"493","line":42,"column":3,"nodeType":"427","messageId":"428","endLine":42,"endColumn":10},{"ruleId":"425","severity":1,"message":"494","line":43,"column":3,"nodeType":"427","messageId":"428","endLine":43,"endColumn":7},{"ruleId":"425","severity":1,"message":"495","line":50,"column":10,"nodeType":"427","messageId":"428","endLine":50,"endColumn":16},{"ruleId":"456","severity":1,"message":"496","line":109,"column":6,"nodeType":"458","endLine":109,"endColumn":15,"suggestions":"497"},{"ruleId":"460","severity":1,"message":"461","line":161,"column":17,"nodeType":"462","endLine":161,"endColumn":66},{"ruleId":"460","severity":1,"message":"461","line":252,"column":17,"nodeType":"462","endLine":252,"endColumn":68},{"ruleId":"460","severity":1,"message":"461","line":341,"column":17,"nodeType":"462","endLine":341,"endColumn":63},{"ruleId":"456","severity":1,"message":"498","line":427,"column":6,"nodeType":"458","endLine":427,"endColumn":15,"suggestions":"499"},{"ruleId":"478","severity":1,"message":"479","line":432,"column":21,"nodeType":"480","messageId":"481","endLine":432,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":435,"column":21,"nodeType":"480","messageId":"481","endLine":435,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":438,"column":21,"nodeType":"480","messageId":"481","endLine":438,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":494,"column":21,"nodeType":"462","endLine":494,"endColumn":56},{"ruleId":"474","severity":1,"message":"475","line":502,"column":33,"nodeType":"476","messageId":"477","endLine":502,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":503,"column":34,"nodeType":"480","messageId":"481","endLine":503,"endColumn":36},{"ruleId":"460","severity":1,"message":"461","line":526,"column":23,"nodeType":"462","endLine":526,"endColumn":55},{"ruleId":"425","severity":1,"message":"447","line":3,"column":3,"nodeType":"427","messageId":"428","endLine":3,"endColumn":10},{"ruleId":"425","severity":1,"message":"500","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":10},{"ruleId":"425","severity":1,"message":"448","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":11},{"ruleId":"425","severity":1,"message":"501","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":10},{"ruleId":"425","severity":1,"message":"445","line":16,"column":10,"nodeType":"427","messageId":"428","endLine":16,"endColumn":16},{"ruleId":"425","severity":1,"message":"452","line":16,"column":18,"nodeType":"427","messageId":"428","endLine":16,"endColumn":33},{"ruleId":"425","severity":1,"message":"453","line":16,"column":35,"nodeType":"427","messageId":"428","endLine":16,"endColumn":44},{"ruleId":"425","severity":1,"message":"502","line":17,"column":8,"nodeType":"427","messageId":"428","endLine":17,"endColumn":24},{"ruleId":"425","severity":1,"message":"429","line":19,"column":10,"nodeType":"427","messageId":"428","endLine":19,"endColumn":14},{"ruleId":"503","severity":1,"message":"504","line":40,"column":21,"nodeType":"462","endLine":40,"endColumn":25},{"ruleId":"503","severity":1,"message":"504","line":41,"column":21,"nodeType":"462","endLine":41,"endColumn":25},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"438","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":18},{"ruleId":"425","severity":1,"message":"439","line":3,"column":20,"nodeType":"427","messageId":"428","endLine":3,"endColumn":25},{"ruleId":"425","severity":1,"message":"429","line":3,"column":27,"nodeType":"427","messageId":"428","endLine":3,"endColumn":31},{"ruleId":"425","severity":1,"message":"505","line":24,"column":10,"nodeType":"427","messageId":"428","endLine":24,"endColumn":17},{"ruleId":"478","severity":1,"message":"479","line":41,"column":27,"nodeType":"480","messageId":"481","endLine":41,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":46,"column":27,"nodeType":"480","messageId":"481","endLine":46,"endColumn":29},{"ruleId":"503","severity":1,"message":"504","line":79,"column":17,"nodeType":"462","endLine":79,"endColumn":21},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"506","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"507","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":13},{"ruleId":"425","severity":1,"message":"508","line":11,"column":3,"nodeType":"427","messageId":"428","endLine":11,"endColumn":21},{"ruleId":"425","severity":1,"message":"509","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":22},{"ruleId":"425","severity":1,"message":"510","line":13,"column":3,"nodeType":"427","messageId":"428","endLine":13,"endColumn":22},{"ruleId":"425","severity":1,"message":"466","line":22,"column":3,"nodeType":"427","messageId":"428","endLine":22,"endColumn":9},{"ruleId":"425","severity":1,"message":"467","line":23,"column":3,"nodeType":"427","messageId":"428","endLine":23,"endColumn":14},{"ruleId":"425","severity":1,"message":"482","line":24,"column":3,"nodeType":"427","messageId":"428","endLine":24,"endColumn":12},{"ruleId":"425","severity":1,"message":"445","line":30,"column":3,"nodeType":"427","messageId":"428","endLine":30,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":31,"column":3,"nodeType":"427","messageId":"428","endLine":31,"endColumn":18},{"ruleId":"425","severity":1,"message":"511","line":34,"column":3,"nodeType":"427","messageId":"428","endLine":34,"endColumn":14},{"ruleId":"425","severity":1,"message":"429","line":38,"column":3,"nodeType":"427","messageId":"428","endLine":38,"endColumn":7},{"ruleId":"425","severity":1,"message":"463","line":39,"column":3,"nodeType":"427","messageId":"428","endLine":39,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":40,"column":3,"nodeType":"427","messageId":"428","endLine":40,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":41,"column":3,"nodeType":"427","messageId":"428","endLine":41,"endColumn":16},{"ruleId":"425","severity":1,"message":"512","line":46,"column":10,"nodeType":"427","messageId":"428","endLine":46,"endColumn":17},{"ruleId":"425","severity":1,"message":"513","line":56,"column":10,"nodeType":"427","messageId":"428","endLine":56,"endColumn":19},{"ruleId":"456","severity":1,"message":"470","line":377,"column":4,"nodeType":"458","endLine":377,"endColumn":10,"suggestions":"514"},{"ruleId":"478","severity":1,"message":"479","line":383,"column":35,"nodeType":"480","messageId":"481","endLine":383,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":386,"column":35,"nodeType":"480","messageId":"481","endLine":386,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":389,"column":35,"nodeType":"480","messageId":"481","endLine":389,"endColumn":37},{"ruleId":"460","severity":1,"message":"461","line":443,"column":17,"nodeType":"462","endLine":443,"endColumn":54},{"ruleId":"460","severity":1,"message":"461","line":493,"column":21,"nodeType":"462","endLine":493,"endColumn":58},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"515","line":2,"column":8,"nodeType":"427","messageId":"428","endLine":2,"endColumn":24},{"ruleId":"425","severity":1,"message":"445","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":9},{"ruleId":"425","severity":1,"message":"516","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":22},{"ruleId":"425","severity":1,"message":"452","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":18},{"ruleId":"425","severity":1,"message":"453","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":12},{"ruleId":"425","severity":1,"message":"438","line":10,"column":3,"nodeType":"427","messageId":"428","endLine":10,"endColumn":11},{"ruleId":"425","severity":1,"message":"439","line":11,"column":3,"nodeType":"427","messageId":"428","endLine":11,"endColumn":8},{"ruleId":"425","severity":1,"message":"429","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":7},{"ruleId":"425","severity":1,"message":"463","line":13,"column":3,"nodeType":"427","messageId":"428","endLine":13,"endColumn":12},{"ruleId":"425","severity":1,"message":"465","line":14,"column":3,"nodeType":"427","messageId":"428","endLine":14,"endColumn":16},{"ruleId":"425","severity":1,"message":"447","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":10},{"ruleId":"425","severity":1,"message":"430","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":12},{"ruleId":"456","severity":1,"message":"496","line":88,"column":6,"nodeType":"458","endLine":88,"endColumn":15,"suggestions":"517"},{"ruleId":"474","severity":1,"message":"475","line":126,"column":35,"nodeType":"476","messageId":"477","endLine":126,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":127,"column":36,"nodeType":"480","messageId":"481","endLine":127,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":150,"column":25,"nodeType":"462","endLine":150,"endColumn":57},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"438","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"441","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":15},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"500","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":10},{"ruleId":"425","severity":1,"message":"467","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":14},{"ruleId":"425","severity":1,"message":"482","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":12},{"ruleId":"425","severity":1,"message":"441","line":21,"column":3,"nodeType":"427","messageId":"428","endLine":21,"endColumn":15},{"ruleId":"425","severity":1,"message":"445","line":23,"column":10,"nodeType":"427","messageId":"428","endLine":23,"endColumn":16},{"ruleId":"425","severity":1,"message":"472","line":23,"column":35,"nodeType":"427","messageId":"428","endLine":23,"endColumn":41},{"ruleId":"425","severity":1,"message":"518","line":23,"column":42,"nodeType":"427","messageId":"428","endLine":23,"endColumn":48},{"ruleId":"425","severity":1,"message":"519","line":23,"column":50,"nodeType":"427","messageId":"428","endLine":23,"endColumn":55},{"ruleId":"425","severity":1,"message":"520","line":23,"column":57,"nodeType":"427","messageId":"428","endLine":23,"endColumn":62},{"ruleId":"425","severity":1,"message":"521","line":25,"column":16,"nodeType":"427","messageId":"428","endLine":25,"endColumn":35},{"ruleId":"425","severity":1,"message":"438","line":2,"column":10,"nodeType":"427","messageId":"428","endLine":2,"endColumn":18},{"ruleId":"425","severity":1,"message":"439","line":2,"column":20,"nodeType":"427","messageId":"428","endLine":2,"endColumn":25},{"ruleId":"425","severity":1,"message":"429","line":2,"column":27,"nodeType":"427","messageId":"428","endLine":2,"endColumn":31},{"ruleId":"425","severity":1,"message":"482","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":12},{"ruleId":"425","severity":1,"message":"441","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":15},{"ruleId":"425","severity":1,"message":"522","line":34,"column":3,"nodeType":"427","messageId":"428","endLine":34,"endColumn":6},{"ruleId":"425","severity":1,"message":"523","line":35,"column":3,"nodeType":"427","messageId":"428","endLine":35,"endColumn":12},{"ruleId":"425","severity":1,"message":"524","line":36,"column":3,"nodeType":"427","messageId":"428","endLine":36,"endColumn":19},{"ruleId":"425","severity":1,"message":"525","line":37,"column":3,"nodeType":"427","messageId":"428","endLine":37,"endColumn":17},{"ruleId":"425","severity":1,"message":"452","line":38,"column":3,"nodeType":"427","messageId":"428","endLine":38,"endColumn":18},{"ruleId":"456","severity":1,"message":"496","line":100,"column":6,"nodeType":"458","endLine":100,"endColumn":15,"suggestions":"526"},{"ruleId":"460","severity":1,"message":"461","line":147,"column":17,"nodeType":"462","endLine":147,"endColumn":52},{"ruleId":"460","severity":1,"message":"461","line":243,"column":17,"nodeType":"462","endLine":243,"endColumn":52},{"ruleId":"460","severity":1,"message":"461","line":332,"column":17,"nodeType":"462","endLine":332,"endColumn":52},{"ruleId":"456","severity":1,"message":"498","line":389,"column":6,"nodeType":"458","endLine":389,"endColumn":15,"suggestions":"527"},{"ruleId":"478","severity":1,"message":"479","line":425,"column":21,"nodeType":"480","messageId":"481","endLine":425,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":428,"column":21,"nodeType":"480","messageId":"481","endLine":428,"endColumn":23},{"ruleId":"478","severity":1,"message":"479","line":431,"column":21,"nodeType":"480","messageId":"481","endLine":431,"endColumn":23},{"ruleId":"460","severity":1,"message":"461","line":489,"column":19,"nodeType":"462","endLine":489,"endColumn":54},{"ruleId":"474","severity":1,"message":"475","line":496,"column":35,"nodeType":"476","messageId":"477","endLine":496,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":497,"column":36,"nodeType":"480","messageId":"481","endLine":497,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":519,"column":25,"nodeType":"462","endLine":519,"endColumn":57},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"448","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":11},{"ruleId":"425","severity":1,"message":"500","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":10},{"ruleId":"425","severity":1,"message":"501","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":10},{"ruleId":"425","severity":1,"message":"450","line":15,"column":3,"nodeType":"427","messageId":"428","endLine":15,"endColumn":15},{"ruleId":"425","severity":1,"message":"528","line":16,"column":3,"nodeType":"427","messageId":"428","endLine":16,"endColumn":12},{"ruleId":"425","severity":1,"message":"466","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":9},{"ruleId":"425","severity":1,"message":"529","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":21},{"ruleId":"425","severity":1,"message":"530","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":13},{"ruleId":"425","severity":1,"message":"445","line":22,"column":10,"nodeType":"427","messageId":"428","endLine":22,"endColumn":16},{"ruleId":"425","severity":1,"message":"453","line":22,"column":35,"nodeType":"427","messageId":"428","endLine":22,"endColumn":44},{"ruleId":"425","severity":1,"message":"531","line":26,"column":8,"nodeType":"427","messageId":"428","endLine":26,"endColumn":15},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"448","line":14,"column":3,"nodeType":"427","messageId":"428","endLine":14,"endColumn":11},{"ruleId":"425","severity":1,"message":"532","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":11},{"ruleId":"425","severity":1,"message":"533","line":18,"column":3,"nodeType":"427","messageId":"428","endLine":18,"endColumn":14},{"ruleId":"425","severity":1,"message":"443","line":19,"column":3,"nodeType":"427","messageId":"428","endLine":19,"endColumn":12},{"ruleId":"425","severity":1,"message":"444","line":20,"column":3,"nodeType":"427","messageId":"428","endLine":20,"endColumn":18},{"ruleId":"425","severity":1,"message":"534","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":12},{"ruleId":"425","severity":1,"message":"535","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":10},{"ruleId":"425","severity":1,"message":"536","line":31,"column":27,"nodeType":"427","messageId":"428","endLine":31,"endColumn":45},{"ruleId":"456","severity":1,"message":"470","line":88,"column":6,"nodeType":"458","endLine":88,"endColumn":17,"suggestions":"537"},{"ruleId":"460","severity":1,"message":"461","line":160,"column":27,"nodeType":"462","endLine":160,"endColumn":58},{"ruleId":"425","severity":1,"message":"463","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"441","line":21,"column":3,"nodeType":"427","messageId":"428","endLine":21,"endColumn":15},{"ruleId":"425","severity":1,"message":"501","line":22,"column":3,"nodeType":"427","messageId":"428","endLine":22,"endColumn":10},{"ruleId":"425","severity":1,"message":"482","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":12},{"ruleId":"425","severity":1,"message":"538","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":10},{"ruleId":"425","severity":1,"message":"528","line":27,"column":3,"nodeType":"427","messageId":"428","endLine":27,"endColumn":12},{"ruleId":"425","severity":1,"message":"539","line":28,"column":3,"nodeType":"427","messageId":"428","endLine":28,"endColumn":17},{"ruleId":"425","severity":1,"message":"500","line":29,"column":3,"nodeType":"427","messageId":"428","endLine":29,"endColumn":10},{"ruleId":"425","severity":1,"message":"467","line":30,"column":3,"nodeType":"427","messageId":"428","endLine":30,"endColumn":14},{"ruleId":"425","severity":1,"message":"445","line":36,"column":3,"nodeType":"427","messageId":"428","endLine":36,"endColumn":9},{"ruleId":"425","severity":1,"message":"540","line":38,"column":3,"nodeType":"427","messageId":"428","endLine":38,"endColumn":15},{"ruleId":"425","severity":1,"message":"541","line":39,"column":3,"nodeType":"427","messageId":"428","endLine":39,"endColumn":21},{"ruleId":"425","severity":1,"message":"542","line":40,"column":3,"nodeType":"427","messageId":"428","endLine":40,"endColumn":14},{"ruleId":"425","severity":1,"message":"543","line":41,"column":3,"nodeType":"427","messageId":"428","endLine":41,"endColumn":20},{"ruleId":"425","severity":1,"message":"472","line":42,"column":3,"nodeType":"427","messageId":"428","endLine":42,"endColumn":9},{"ruleId":"425","severity":1,"message":"544","line":43,"column":3,"nodeType":"427","messageId":"428","endLine":43,"endColumn":11},{"ruleId":"425","severity":1,"message":"545","line":44,"column":3,"nodeType":"427","messageId":"428","endLine":44,"endColumn":18},{"ruleId":"425","severity":1,"message":"546","line":105,"column":10,"nodeType":"427","messageId":"428","endLine":105,"endColumn":17},{"ruleId":"456","severity":1,"message":"547","line":145,"column":6,"nodeType":"458","endLine":145,"endColumn":15,"suggestions":"548"},{"ruleId":"425","severity":1,"message":"549","line":249,"column":9,"nodeType":"427","messageId":"428","endLine":249,"endColumn":19},{"ruleId":"478","severity":1,"message":"479","line":305,"column":32,"nodeType":"480","messageId":"481","endLine":305,"endColumn":34},{"ruleId":"478","severity":1,"message":"479","line":308,"column":32,"nodeType":"480","messageId":"481","endLine":308,"endColumn":34},{"ruleId":"425","severity":1,"message":"429","line":3,"column":3,"nodeType":"427","messageId":"428","endLine":3,"endColumn":7},{"ruleId":"425","severity":1,"message":"463","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"441","line":21,"column":3,"nodeType":"427","messageId":"428","endLine":21,"endColumn":15},{"ruleId":"425","severity":1,"message":"482","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":12},{"ruleId":"425","severity":1,"message":"538","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":10},{"ruleId":"425","severity":1,"message":"539","line":28,"column":3,"nodeType":"427","messageId":"428","endLine":28,"endColumn":17},{"ruleId":"425","severity":1,"message":"500","line":31,"column":3,"nodeType":"427","messageId":"428","endLine":31,"endColumn":10},{"ruleId":"425","severity":1,"message":"445","line":35,"column":3,"nodeType":"427","messageId":"428","endLine":35,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":36,"column":3,"nodeType":"427","messageId":"428","endLine":36,"endColumn":18},{"ruleId":"425","severity":1,"message":"550","line":38,"column":3,"nodeType":"427","messageId":"428","endLine":38,"endColumn":16},{"ruleId":"456","severity":1,"message":"551","line":112,"column":6,"nodeType":"458","endLine":112,"endColumn":15,"suggestions":"552"},{"ruleId":"478","severity":1,"message":"479","line":316,"column":34,"nodeType":"480","messageId":"481","endLine":316,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":319,"column":34,"nodeType":"480","messageId":"481","endLine":319,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":322,"column":34,"nodeType":"480","messageId":"481","endLine":322,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":325,"column":34,"nodeType":"480","messageId":"481","endLine":325,"endColumn":36},{"ruleId":"460","severity":1,"message":"461","line":409,"column":13,"nodeType":"462","endLine":409,"endColumn":53},{"ruleId":"425","severity":1,"message":"463","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"440","line":9,"column":10,"nodeType":"427","messageId":"428","endLine":9,"endColumn":24},{"ruleId":"425","severity":1,"message":"445","line":28,"column":10,"nodeType":"427","messageId":"428","endLine":28,"endColumn":16},{"ruleId":"456","severity":1,"message":"553","line":88,"column":6,"nodeType":"458","endLine":88,"endColumn":15,"suggestions":"554"},{"ruleId":"503","severity":1,"message":"504","line":209,"column":17,"nodeType":"462","endLine":209,"endColumn":21},{"ruleId":"425","severity":1,"message":"555","line":1,"column":8,"nodeType":"427","messageId":"428","endLine":1,"endColumn":13},{"ruleId":"425","severity":1,"message":"446","line":1,"column":17,"nodeType":"427","messageId":"428","endLine":1,"endColumn":25},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"460","severity":1,"message":"461","line":219,"column":23,"nodeType":"462","endLine":219,"endColumn":63},{"ruleId":"425","severity":1,"message":"437","line":1,"column":27,"nodeType":"427","messageId":"428","endLine":1,"endColumn":36},{"ruleId":"425","severity":1,"message":"501","line":7,"column":3,"nodeType":"427","messageId":"428","endLine":7,"endColumn":10},{"ruleId":"425","severity":1,"message":"447","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":10},{"ruleId":"425","severity":1,"message":"533","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":14},{"ruleId":"425","severity":1,"message":"452","line":20,"column":10,"nodeType":"427","messageId":"428","endLine":20,"endColumn":25},{"ruleId":"425","severity":1,"message":"429","line":23,"column":3,"nodeType":"427","messageId":"428","endLine":23,"endColumn":7},{"ruleId":"425","severity":1,"message":"463","line":24,"column":3,"nodeType":"427","messageId":"428","endLine":24,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":16},{"ruleId":"425","severity":1,"message":"556","line":42,"column":10,"nodeType":"427","messageId":"428","endLine":42,"endColumn":17},{"ruleId":"425","severity":1,"message":"546","line":84,"column":10,"nodeType":"427","messageId":"428","endLine":84,"endColumn":17},{"ruleId":"425","severity":1,"message":"557","line":97,"column":10,"nodeType":"427","messageId":"428","endLine":97,"endColumn":20},{"ruleId":"425","severity":1,"message":"558","line":70,"column":10,"nodeType":"427","messageId":"428","endLine":70,"endColumn":18},{"ruleId":"456","severity":1,"message":"559","line":161,"column":6,"nodeType":"458","endLine":161,"endColumn":15,"suggestions":"560"},{"ruleId":"460","severity":1,"message":"461","line":273,"column":17,"nodeType":"462","endLine":273,"endColumn":51},{"ruleId":"478","severity":1,"message":"479","line":292,"column":47,"nodeType":"480","messageId":"481","endLine":292,"endColumn":49},{"ruleId":"478","severity":1,"message":"479","line":294,"column":46,"nodeType":"480","messageId":"481","endLine":294,"endColumn":48},{"ruleId":"460","severity":1,"message":"461","line":331,"column":17,"nodeType":"462","endLine":331,"endColumn":58},{"ruleId":"425","severity":1,"message":"429","line":3,"column":3,"nodeType":"427","messageId":"428","endLine":3,"endColumn":7},{"ruleId":"425","severity":1,"message":"463","line":4,"column":3,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"464","line":5,"column":3,"nodeType":"427","messageId":"428","endLine":5,"endColumn":8},{"ruleId":"425","severity":1,"message":"465","line":6,"column":3,"nodeType":"427","messageId":"428","endLine":6,"endColumn":16},{"ruleId":"425","severity":1,"message":"441","line":21,"column":3,"nodeType":"427","messageId":"428","endLine":21,"endColumn":15},{"ruleId":"425","severity":1,"message":"482","line":25,"column":3,"nodeType":"427","messageId":"428","endLine":25,"endColumn":12},{"ruleId":"425","severity":1,"message":"538","line":26,"column":3,"nodeType":"427","messageId":"428","endLine":26,"endColumn":10},{"ruleId":"425","severity":1,"message":"539","line":28,"column":3,"nodeType":"427","messageId":"428","endLine":28,"endColumn":17},{"ruleId":"425","severity":1,"message":"445","line":36,"column":3,"nodeType":"427","messageId":"428","endLine":36,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":37,"column":3,"nodeType":"427","messageId":"428","endLine":37,"endColumn":18},{"ruleId":"425","severity":1,"message":"561","line":41,"column":3,"nodeType":"427","messageId":"428","endLine":41,"endColumn":7},{"ruleId":"425","severity":1,"message":"562","line":42,"column":3,"nodeType":"427","messageId":"428","endLine":42,"endColumn":14},{"ruleId":"460","severity":1,"message":"461","line":244,"column":21,"nodeType":"462","endLine":244,"endColumn":61},"@typescript-eslint/no-unused-vars","'useCookies' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'IonButton' is defined but never used.","'IonCol' is defined but never used.","'IonRow' is defined but never used.","'ellipse' is defined but never used.","'square' is defined but never used.","'triangle' is defined but never used.","'searchCircle' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'IonReactRouter' is defined but never used.","'IonTabButton' is defined but never used.","'IonModal' is defined but never used.","'IonSelect' is defined but never used.","'IonSelectOption' is defined but never used.","'person' is defined but never used.","'useState' is defined but never used.","'IonIcon' is defined but never used.","'IonLabel' is defined but never used.","'IonGrid' is defined but never used.","'IonThumbnail' is defined but never used.","'IonDatetime' is defined but never used.","'arrowBackCircle' is defined but never used.","'arrowBack' is defined but never used.","'mailUnreadOutline' is defined but never used.","'mailOpenOutline' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchRequests'. Either include it or remove the dependency array.","ArrayExpression",["563"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'matchPath' is defined but never used.","'match' is defined but never used.","'useRouteMatch' is defined but never used.","'IonImg' is defined but never used.","'IonCheckbox' is defined but never used.","'useIonActionSheet' is defined but never used.","'ellipsisHorizontalOutline' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchAssociates'. Either include it or remove the dependency array.",["564"],"'people' is defined but never used.",["565"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IonTabBar' is defined but never used.","'IonCardHeader' is defined but never used.","'IonCardSubtitle' is defined but never used.","'IonCardTitle' is defined but never used.","'createOutline' is defined but never used.","'reorderFour' is defined but never used.","'reorderFourOutline' is defined but never used.","'reorderThreeOutline' is defined but never used.","'pin' is defined but never used.","'wifi' is defined but never used.","'wine' is defined but never used.","'warning' is defined but never used.","'walk' is defined but never used.","'create' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["566"],"React Hook useEffect has missing dependencies: 'fetchAvailableJobs', 'fetchPastJobs', and 'fetchScheduledJobs'. Either include them or remove the dependency array.",["567"],"'IonList' is defined but never used.","'IonItem' is defined but never used.","'ExploreContainer' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'cookies' is assigned a value but never used.","'IonRouterLink' is defined but never used.","'IonSpinner' is defined but never used.","'useIonViewDidLeave' is defined but never used.","'useIonViewWillEnter' is defined but never used.","'useIonViewWillLeave' is defined but never used.","'pencilSharp' is defined but never used.","'profile' is defined but never used.","'isLoading' is assigned a value but never used.",["568"],"'AssociateProfile' is defined but never used.","'personCircleOutline' is defined but never used.",["569"],"'camera' is defined but never used.","'trash' is defined but never used.","'close' is defined but never used.","'RouteComponentProps' is defined but never used.","'add' is defined but never used.","'addCircle' is defined but never used.","'addCircleOutline' is defined but never used.","'addCircleSharp' is defined but never used.",["570"],["571"],"'IonAvatar' is defined but never used.","'useIonViewDidEnter' is defined but never used.","'axios' is defined but never used.","'GetUser' is defined but never used.","'IonInput' is defined but never used.","'IonTextarea' is defined but never used.","'IonFooter' is defined but never used.","'IonTabs' is defined but never used.","'checkmarkDoneSharp' is defined but never used.",["572"],"'IonCard' is defined but never used.","'IonCardContent' is defined but never used.","'closeOutline' is defined but never used.","'closeCircleOutline' is defined but never used.","'closeCircle' is defined but never used.","'chatbubbleOutline' is defined but never used.","'document' is defined but never used.","'documentOutline' is defined but never used.","'werkers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSchedJob'. Either include it or remove the dependency array.",["573"],"'handlePaid' is assigned a value but never used.","'peopleOutline' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAvailableJob'. Either include it or remove the dependency array.",["574"],"React Hook useEffect has a missing dependency: 'fetchMyPastJob'. Either include it or remove the dependency array.",["575"],"'React' is defined but never used.","'profile' is assigned a value but never used.","'openShifts' is assigned a value but never used.","'schedJob' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchInvitedWerkers' and 'fetchSchedJob'. Either include them or remove the dependency array.",["576"],"'text' is defined but never used.","'sendOutline' is defined but never used.",{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"579","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"582","fix":"588"},{"desc":"582","fix":"589"},{"desc":"584","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},"Update the dependencies array to be: [fetchRequests, profile]",{"range":"601","text":"602"},"Update the dependencies array to be: [fetchAssociates, profile]",{"range":"603","text":"604"},{"range":"605","text":"604"},"Update the dependencies array to be: [fetchUsers, profile]",{"range":"606","text":"607"},"Update the dependencies array to be: [fetchAvailableJobs, fetchPastJobs, fetchScheduledJobs, profile]",{"range":"608","text":"609"},"Update the dependencies array to be: [Self, fetchAssociates]",{"range":"610","text":"611"},{"range":"612","text":"607"},{"range":"613","text":"607"},{"range":"614","text":"609"},"Update the dependencies array to be: [fetchAssociates, myProfile]",{"range":"615","text":"616"},"Update the dependencies array to be: [fetchSchedJob, profile]",{"range":"617","text":"618"},"Update the dependencies array to be: [fetchAvailableJob, profile]",{"range":"619","text":"620"},"Update the dependencies array to be: [fetchMyPastJob, profile]",{"range":"621","text":"622"},"Update the dependencies array to be: [fetchInvitedWerkers, fetchSchedJob, profile]",{"range":"623","text":"624"},[2341,2350],"[fetchRequests, profile]",[2512,2521],"[fetchAssociates, profile]",[1758,1767],[2187,2196],"[fetchUsers, profile]",[11320,11329],"[fetchAvailableJobs, fetchPastJobs, fetchScheduledJobs, profile]",[9456,9462],"[Self, fetchAssociates]",[1813,1822],[2084,2093],[10299,10308],[1965,1976],"[fetchAssociates, myProfile]",[2873,2882],"[fetchSchedJob, profile]",[2234,2243],"[fetchAvailableJob, profile]",[1854,1863],"[fetchMyPastJob, profile]",[3686,3695],"[fetchInvitedWerkers, fetchSchedJob, profile]"]