{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx\";\nimport React from \"react\";\nimport { IonIcon, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, IonRow, IonCol, useIonViewDidEnter } from \"@ionic/react\";\nimport axios from \"axios\";\nimport { arrowBackCircle } from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./AvailableJobs.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\nexport const Notifications = ({\n  match\n}) => {\n  //GET MY PROFILE DATA\n  const [profile, setProfile] = React.useState({\n    UserId: 0\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile); // GET ARRAY OF ALL NEW REQUESTS\n\n  const [notifications, setNotifications] = React.useState([{\n    // NotificationId: 0,\n    // isRead: false,\n    // SenderPicUrl: \"../assets/profilePic.png\",\n    // NotificationType: \"No Notifications\",\n    // Message: \"Here Yet! Go do stuff!\",\n    // MessageDate: \"Yet!\",\n    // NotificationLink: \"\"\n    id: 0\n  }]);\n\n  const fetchRequests = () => {\n    return axios.get(\"http://localhost:3000/notifications/ListOfNotifications/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then(data => setNotifications(data.listOfNotifications));\n  }, [profile]);\n  console.log(\"hellow world\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Notifications\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title2\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Notifications\"))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    size: \"large\",\n    icon: arrowBackCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default Notifications;","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx"],"names":["React","IonIcon","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","IonRow","IonCol","useIonViewDidEnter","axios","arrowBackCircle","Link","GetUser","Notifications","match","profile","setProfile","useState","UserId","then","data","personDataFound","console","log","notifications","setNotifications","id","fetchRequests","get","withCredentials","response","useEffect","listOfNotifications"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  useIonViewDidEnter,\n  IonDatetime,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport { person, arrowBackCircle, arrowBack } from \"ionicons/icons\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport \"./AvailableJobs.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\n\nexport const Notifications: React.FC<RouteComponentProps> = ({ match }) => {\n  //GET MY PROFILE DATA\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile);\n\n  // GET ARRAY OF ALL NEW REQUESTS\n  interface NotificationsDate {\n    // NotificationId: number;\n    // isRead: boolean;\n    // SenderPicUrl: string;\n    // NotificationType: string\n    // Message: string;\n    // MessageDate: string;\n    // NotificationLink: string\n    id: number;\n\n  }\n\n  const [notifications, setNotifications] = React.useState<NotificationsDate[]>([\n    {\n      // NotificationId: 0,\n      // isRead: false,\n      // SenderPicUrl: \"../assets/profilePic.png\",\n      // NotificationType: \"No Notifications\",\n      // Message: \"Here Yet! Go do stuff!\",\n      // MessageDate: \"Yet!\",\n      // NotificationLink: \"\"\n      id: 0\n    },\n  ]);\n\n  const fetchRequests = () => {\n    return axios\n      .get(\n        \"http://localhost:3000/notifications/ListOfNotifications/\" + profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then((data) => setNotifications(data.listOfNotifications));\n  }, [profile]);\n\n  console.log(\"hellow world\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Notifications</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Notifications\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/Main\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n        {/* <IonList>\n          {notifications.map((notification) => (\n            <IonItem href={`${notification.NotificationLink}`} key={notification.NotificationId}>\n                <IonAvatar className=\"avatario\" slot=\"start\" >\n                  <img src={notification.SenderPicUrl}  /> \n                </IonAvatar>\n              <IonLabel className=\"labelo\">\n                <h1>{notification.NotificationType}</h1>\n                <p>{notification.Message}</p>\n              </IonLabel>\n              <IonDatetime\n                slot=\"end\"\n                displayFormat=\"DD-MMM-YY\"\n                value={notification.MessageDate}\n              ></IonDatetime>\n            </IonItem>\n          ))}\n        </IonList> */}\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}