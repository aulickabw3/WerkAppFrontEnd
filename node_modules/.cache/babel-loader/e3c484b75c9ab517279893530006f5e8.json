{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedulerView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { IonIcon, IonSearchbar, IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, IonCol, IonRow, IonToggle, IonLabel, IonAvatar, IonSegment, IonSegmentButton, useIonViewDidEnter, IonCard, IonItem, IonCardContent, IonDatetime, IonList } from \"@ionic/react\";\nimport \"./Main.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport { arrowUp } from \"ionicons/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SchedulerView = () => {\n  _s();\n\n  // Get self Data\n  const [profile, setProfile] = useState({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\"\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []); // Search Users/////////////////////\n  ///////////////////////////////////////////////////////\n\n  const [users, setUsers] = React.useState([{\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Email: \"\",\n    IsScheduler: false,\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"\"\n  }]);\n\n  const fetchUsers = () => {\n    return axios.get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Search/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  React.useEffect(() => {\n    fetchUsers().then(data => setUsers(data.personArray));\n  }, [profile]); // Available Jobs Segment\n  //////////////////////////////////////\n\n  const [schedAvailableJobs, setSchedAvailableJobs] = React.useState([{\n    ShiftId: 0,\n    ShiftIdentifier: 0,\n    UserUserId: 0,\n    Company: \"No     Jobs\",\n    DateDay: \"Yet\",\n    Location: \"\",\n    Pay: \"\"\n  }]);\n\n  const fetchAvailableJobs = () => {\n    return axios.get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedAvailableShifts/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const AvailableJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: schedAvailableJobs.map(availableJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile.ProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [profile.FirstName, \" \", profile.LastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/SchedShiftDetails/${availableJob.ShiftId}`,\n            fill: \"outline\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.ShiftIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                displayFormat: \"DD-MMM-YY\",\n                value: availableJob.DateDay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, availableJob.ShiftId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }; // SchedScheduled Jobs Segment\n  //////////////////////////////////////////////\n\n\n  const [schedScheduledJobs, setSchedScheduledJobs] = React.useState([{\n    ShiftId: 0,\n    ShiftIdentifier: 0,\n    UserUserId: 0,\n    Company: \"No Jobs\",\n    DateDay: \"Sched Yet\",\n    Location: \"\",\n    Pay: \"\"\n  }]);\n\n  const fetchScheduledJobs = () => {\n    return axios.get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedScheduledShifts/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const ScheduledJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: schedScheduledJobs.map(schedScheduledJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile.ProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [profile.FirstName, \" \", profile.LastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/SchedShiftDetails/${schedScheduledJob.ShiftId}`,\n            fill: \"outline\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: schedScheduledJob.ShiftIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: schedScheduledJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: schedScheduledJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: schedScheduledJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                displayFormat: \"DD-MMM-YY\",\n                value: schedScheduledJob.DateDay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, schedScheduledJob.ShiftId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }; //Sched Past Jobs Segment\n  /////////////////////////////////////\n\n\n  const [myPastJobs, setMyPastJobs] = React.useState([{\n    ShiftId: 0,\n    ShiftIdentifier: 0,\n    UserUserId: 0,\n    Company: \"No Past\",\n    DateDay: \"Jobs Yet\",\n    Location: \"\",\n    Pay: \"\"\n  }]);\n\n  const fetchPastJobs = () => {\n    return axios.get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedPastShifts/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const PastJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: myPastJobs.map(myPastJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile.ProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [profile.FirstName, \" \", profile.LastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/SchedShiftDetails/${myPastJob.ShiftId}`,\n            fill: \"outline\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.ShiftIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                displayFormat: \"DD-MMM-YY\",\n                value: myPastJob.DateDay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, myPastJob.ShiftId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then(data => {\n      setSchedAvailableJobs(data.SchedAvailableJob);\n    });\n    fetchScheduledJobs().then(data => setSchedScheduledJobs(data.SchedScheduledJob));\n    fetchPastJobs().then(data => setMyPastJobs(data.SchedPastJob));\n  }, [profile]);\n\n  const SelectAJobList = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IonRow, {\n        children: [/*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            slot: \"\",\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: [/*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          size: \"7\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select A Job List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  }; //Segment Actions Logic\n  /////////////////////////////////////\n\n\n  const [mainSegment, setMainSegment] = useState(\"\");\n\n  const MainSegmentActions = () => {\n    if (mainSegment == \"past\") {\n      return /*#__PURE__*/_jsxDEV(PastJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (mainSegment == \"scheduled\") {\n      return /*#__PURE__*/_jsxDEV(ScheduledJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (mainSegment == \"open\") {\n      return /*#__PURE__*/_jsxDEV(AvailableJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SelectAJobList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 12\n    }, this);\n  }; //Toggle\n  //////////////////////////\n\n\n  const [checked, setChecked] = React.useState(true);\n\n  const handleToggle = () => {\n    if (checked) window.location.href = \"/Main\";\n    return;\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"secondwarning\",\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          className: \"title1\",\n          children: \"WerkApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          color: \"secondwarning\",\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title1\",\n            size: \"large\",\n            children: \"WerkApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        className: \"bckgrnd\",\n        children: /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: [/*#__PURE__*/_jsxDEV(IonRow, {\n            className: \"tpmrgn\",\n            children: [/*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(IonToggle, {\n                checked: true // checked={checked}\n                ,\n                onIonChange: e => {\n                  setChecked(e.detail.checked);\n                  handleToggle();\n                },\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n                className: \"smallfont\",\n                children: \"Scheduler\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"8\",\n              children: /*#__PURE__*/_jsxDEV(IonSearchbar, {\n                value: searchText,\n                onIonChange: e => setSearchText(e.detail.value),\n                animated: true,\n                className: \"srchbr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"1\",\n              children: /*#__PURE__*/_jsxDEV(IonAvatar, {\n                slot: \"\",\n                className: \"tinyavatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profile.ProfilePicURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonList, {\n            className: \"searchBar\",\n            children: users.filter(value => {\n              if (searchText == \"\") {\n                return \"\";\n              } else if (value.FirstName.toLowerCase().includes(searchText.toLowerCase())) {\n                return value;\n              } else if (value.LastName.toLowerCase().includes(searchText.toLowerCase())) {\n                return value;\n              }\n            }).map(user => /*#__PURE__*/_jsxDEV(IonItem, {\n              href: `/AssociateProfile/${user.UserId}`,\n              children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n                className: \"avatario\",\n                slot: \"start\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user.ProfilePicURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n                className: \"labelo\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: [user.FirstName, \" \", user.LastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: user.Company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 23\n              }, this)]\n            }, user.UserId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"12\",\n              children: /*#__PURE__*/_jsxDEV(IonSegment, {\n                className: \"schdbckgrnd\" // value=\"\"\n                ,\n                onIonChange: e => {\n                  setMainSegment(e.detail.value);\n                  console.log(mainSegment);\n                },\n                children: [/*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"open\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Open\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"scheduled\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"past\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Past\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainSegmentActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n      children: [/*#__PURE__*/_jsxDEV(IonCol, {\n        size: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n        size: \"10\",\n        children: /*#__PURE__*/_jsxDEV(IonButton, {\n          expand: \"block\",\n          color: \"secondwarning\",\n          fill: \"solid\",\n          href: \"/ScheduleJob\",\n          children: \"+ Schedule New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n        size: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SchedulerView, \"TBnFowvAUFsZ3HPaaYmtsYo7+bE=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = SchedulerView;\nexport default SchedulerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SchedulerView\");","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/SchedulerView.tsx"],"names":["React","useEffect","useState","IonIcon","IonSearchbar","IonButton","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","IonCol","IonRow","IonToggle","IonLabel","IonAvatar","IonSegment","IonSegmentButton","useIonViewDidEnter","IonCard","IonItem","IonCardContent","IonDatetime","IonList","axios","GetUser","arrowUp","SchedulerView","profile","setProfile","UserId","FirstName","LastName","ProfilePicURL","then","data","personDataFound","users","setUsers","Email","IsScheduler","Company","Occupation","fetchUsers","get","withCredentials","response","console","log","personArray","schedAvailableJobs","setSchedAvailableJobs","ShiftId","ShiftIdentifier","UserUserId","DateDay","Location","Pay","fetchAvailableJobs","AvailableJobsSegment","map","availableJob","schedScheduledJobs","setSchedScheduledJobs","fetchScheduledJobs","ScheduledJobsSegment","schedScheduledJob","myPastJobs","setMyPastJobs","fetchPastJobs","PastJobsSegment","myPastJob","SchedAvailableJob","SchedScheduledJob","SchedPastJob","SelectAJobList","mainSegment","setMainSegment","MainSegmentActions","checked","setChecked","handleToggle","window","location","href","searchText","setSearchText","e","detail","value","filter","toLowerCase","includes","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Link } from \"react-router-dom\";\nimport {\n  IonIcon,\n  IonSearchbar,\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonToggle,\n  IonLabel,\n  IonAvatar,\n  IonSegment,\n  IonSegmentButton,\n  useIonViewDidEnter,\n  IonCard,\n  IonItem,\n  IonCardContent,\n  IonDatetime,\n  IonTabBar,\n  IonTabButton,\n  IonList,\n} from \"@ionic/react\";\nimport \"./Main.css\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport {\n  add,\n  addCircle,\n  addCircleOutline,\n  addCircleSharp,\n  arrowBackCircle,\n  arrowUp,\n} from \"ionicons/icons\";\n\nexport const SchedulerView: React.FC = () => {\n  // Get self Data\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Search Users/////////////////////\n  ///////////////////////////////////////////////////////\n  interface UsersData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Email: string;\n    IsScheduler: boolean;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [users, setUsers] = React.useState<UsersData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Email: \"\",\n      IsScheduler: false,\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"\",\n    },\n  ]);\n\n  const fetchUsers = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/user/Search/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchUsers().then((data) => setUsers(data.personArray));\n  }, [profile]);\n\n  // Available Jobs Segment\n  //////////////////////////////////////\n  interface AvailableJobData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [schedAvailableJobs, setSchedAvailableJobs] = React.useState<\n    AvailableJobData[]\n  >([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No     Jobs\",\n      DateDay: \"Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedAvailableShifts/\" + profile.UserId,\n        {}\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const AvailableJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {schedAvailableJobs.map((availableJob) => (\n          <IonCard key={availableJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${availableJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{availableJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{availableJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location:</IonCol>\n                  <IonCol>{availableJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{availableJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // SchedScheduled Jobs Segment\n  //////////////////////////////////////////////\n  interface SchedScheduledJobsData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [schedScheduledJobs, setSchedScheduledJobs] = React.useState<\n    SchedScheduledJobsData[]\n  >([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No Jobs\",\n      DateDay: \"Sched Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchScheduledJobs = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedScheduledShifts/\" + profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const ScheduledJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {schedScheduledJobs.map((schedScheduledJob) => (\n          <IonCard key={schedScheduledJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${schedScheduledJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{schedScheduledJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{schedScheduledJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{schedScheduledJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{schedScheduledJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={schedScheduledJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  //Sched Past Jobs Segment\n  /////////////////////////////////////\n  interface SchedPastJobsData {\n    ShiftId: any;\n    ShiftIdentifier: any;\n    UserUserId: any;\n    Company: any;\n    DateDay: any;\n    Location: string;\n    Pay: string;\n  }\n\n  const [myPastJobs, setMyPastJobs] = React.useState<SchedPastJobsData[]>([\n    {\n      ShiftId: 0,\n      ShiftIdentifier: 0,\n      UserUserId: 0,\n      Company: \"No Past\",\n      DateDay: \"Jobs Yet\",\n      Location: \"\",\n      Pay: \"\",\n    },\n  ]);\n\n  const fetchPastJobs = () => {\n    return axios\n      .get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com/shifts/SchedPastShifts/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const PastJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myPastJobs.map((myPastJob) => (\n          <IonCard key={myPastJob.ShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={profile.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>\n                  {profile.FirstName} {profile.LastName}\n                </h2>\n              </IonLabel>\n              <IonButton\n                href={`/SchedShiftDetails/${myPastJob.ShiftId}`}\n                fill=\"outline\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myPastJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myPastJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myPastJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myPastJob.Pay}</IonCol>\n                </IonRow>\n                <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.DateDay}\n                  ></IonDatetime>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setSchedAvailableJobs(data.SchedAvailableJob);\n    });\n    fetchScheduledJobs().then((data) =>\n      setSchedScheduledJobs(data.SchedScheduledJob)\n    );\n    fetchPastJobs().then((data) => setMyPastJobs(data.SchedPastJob));\n  }, [profile]);\n\n  const SelectAJobList: React.FC = () => {\n    return (\n      <React.Fragment>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon slot=\"\" size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"7\">\n            <h1>Select A Job List</h1>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n      </React.Fragment>\n    );\n  };\n\n  //Segment Actions Logic\n  /////////////////////////////////////\n  const [mainSegment, setMainSegment] = useState<string>(\"\");\n\n  const MainSegmentActions: React.FC = () => {\n    if (mainSegment == \"past\") {\n      return <PastJobsSegment />;\n    }\n    if (mainSegment == \"scheduled\") {\n      return <ScheduledJobsSegment />;\n    }\n    if (mainSegment == \"open\") {\n      return <AvailableJobsSegment />;\n    }\n    return <SelectAJobList />;\n  };\n\n  //Toggle\n  //////////////////////////\n  const [checked, setChecked] = React.useState<boolean>(true);\n  const handleToggle = () => {\n    if (checked) window.location.href = \"/Main\";\n    return;\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"secondwarning\">\n          <IonTitle className=\"title1\">WerkApp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"secondwarning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              WerkApp\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar className=\"bckgrnd\">\n          <IonGrid>\n            <IonRow className=\"tpmrgn\">\n              <IonCol size=\"2\">\n                {/* <IonIcon size=\"large\" icon={reorderThreeOutline}></IonIcon> */}\n                <IonToggle\n                  checked\n                  // checked={checked}\n                  onIonChange={(e) => {\n                    setChecked(e.detail.checked);\n                    handleToggle();\n                  }}\n                  color=\"danger\"\n                ></IonToggle>\n                <IonLabel className=\"smallfont\">Scheduler</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\">\n                <IonSearchbar\n                  value={searchText}\n                  onIonChange={(e) => setSearchText(e.detail.value!)}\n                  animated\n                  className=\"srchbr\"\n                ></IonSearchbar>\n              </IonCol>\n              <IonCol size=\"1\">\n                <IonAvatar slot=\"\" className=\"tinyavatar\">\n                  <img src={profile.ProfilePicURL} />\n                </IonAvatar>\n              </IonCol>\n            </IonRow>\n\n            <IonList className=\"searchBar\">\n                {users\n                  .filter((value) => {\n                    if (searchText == \"\") {\n                      return \"\";\n                    } else if (\n                      value.FirstName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    } else if (\n                      value.LastName.toLowerCase().includes(\n                        searchText.toLowerCase()\n                      )\n                    ) {\n                      return value;\n                    }\n                  })\n                  .map((user) => (\n                    <IonItem\n                      href={`/AssociateProfile/${user.UserId}`}\n                      key={user.UserId}\n                    >\n                      <IonAvatar className=\"avatario\" slot=\"start\">\n                        <img src={user.ProfilePicURL} />\n                      </IonAvatar>\n                      <IonLabel className=\"labelo\">\n                        <h1>\n                          {user.FirstName} {user.LastName}\n                        </h1>\n                        <p>{user.Company}</p>\n                      </IonLabel>\n                      <br></br>\n                    </IonItem>\n                  ))}\n              </IonList>\n\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  className=\"schdbckgrnd\"\n                  // value=\"\"\n                  onIonChange={(e: any) => {\n                    setMainSegment(e.detail.value!);\n                    console.log(mainSegment);\n                  }}\n                >\n                  <IonSegmentButton value=\"open\">\n                    <IonLabel>\n                      <h2>Open</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"scheduled\">\n                    <IonLabel>\n                      <h2>Scheduled</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"past\">\n                    <IonLabel>\n                      <h2>Past</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n\n        {/* Segment Lists */}\n        <MainSegmentActions />\n        {/* /////////////// */}\n      </IonContent>\n\n      <IonRow>\n        <IonCol size=\"1\"></IonCol>\n        <IonCol size=\"10\">\n          <IonButton\n            expand=\"block\"\n            color=\"secondwarning\"\n            fill=\"solid\"\n            href=\"/ScheduleJob\"\n          >\n            + Schedule New Job\n          </IonButton>\n        </IonCol>\n        <IonCol size=\"1\"></IonCol>\n      </IonRow>\n    </IonPage>\n  );\n};\n\nexport default SchedulerView;\n"]},"metadata":{},"sourceType":"module"}