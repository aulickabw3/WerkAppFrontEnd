{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonAvatar, useIonViewDidEnter, IonDatetime } from \"@ionic/react\";\nimport axios from \"axios\";\nimport \"./Main.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notifications = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [profile, setProfile] = React.useState({\n    UserId: 0\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile); // GET ARRAY OF ALL NEW REQUESTS\n\n  const [notifications, setNotifications] = React.useState([{\n    id: 0,\n    IsRead: false,\n    UserActionTakenUserProfilePicURL: \"../assets/profilePic.png\",\n    UserActionTakenUserActionTyped: \"No Notifications\",\n    UserActionTakenUserActionTypeDescription: \"Here Yet! Go do stuff!\",\n    UserActionTakenUserName: \"\",\n    createdAt: \"Yet!\",\n    UserActionTakenAppLink: \"\"\n  }]);\n\n  const fetchRequests = () => {\n    return axios.get(\"http://localhost:3000/notifications/ListOfNotifications/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then(data => setNotifications(data.listOfNotifications));\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          className: \"title2\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title2\",\n            size: \"large\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonList, {\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n            href: `${notification.UserActionTakenAppLink}`,\n            children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n              className: \"avatario\",\n              slot: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: notification.UserActionTakenUserProfilePicURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), notification.UserActionTakenUserName, \" \", notification.UserActionTakenUserActionTypeDescription, /*#__PURE__*/_jsxDEV(IonDatetime, {\n              slot: \"end\",\n              displayFormat: \"DD-MMM-YY\",\n              value: notification.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notifications, \"wRl8TzZr/jopzURXJ6F4qAilk08=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx"],"names":["React","Fragment","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonAvatar","useIonViewDidEnter","IonDatetime","axios","GetUser","Notifications","match","profile","setProfile","useState","UserId","then","data","personDataFound","console","log","notifications","setNotifications","id","IsRead","UserActionTakenUserProfilePicURL","UserActionTakenUserActionTyped","UserActionTakenUserActionTypeDescription","UserActionTakenUserName","createdAt","UserActionTakenAppLink","fetchRequests","get","withCredentials","response","useEffect","listOfNotifications","map","notification"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  useIonViewDidEnter,\n  IonDatetime,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport { person, arrowBackCircle, arrowBack } from \"ionicons/icons\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport \"./Main.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\n\nexport const Notifications: React.FC<RouteComponentProps> = ({ match }) => {\n  //GET MY PROFILE DATA\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile);\n\n  // GET ARRAY OF ALL NEW REQUESTS\n  interface NotificationsDate {\n    id: number;\n    IsRead: boolean;\n    UserActionTakenUserProfilePicURL: string;\n    UserActionTakenUserActionTyped: string\n    UserActionTakenUserActionTypeDescription: string;\n    UserActionTakenUserName: string;\n    createdAt: string;\n    UserActionTakenAppLink: string\n  }\n\n  const [notifications, setNotifications] = React.useState<NotificationsDate[]>([\n    {\n      id: 0,\n      IsRead: false,\n      UserActionTakenUserProfilePicURL: \"../assets/profilePic.png\",\n      UserActionTakenUserActionTyped: \"No Notifications\",\n      UserActionTakenUserActionTypeDescription: \"Here Yet! Go do stuff!\",\n      UserActionTakenUserName: \"\",\n      createdAt: \"Yet!\",\n      UserActionTakenAppLink: \"\"\n    },\n  ]);\n\n  const fetchRequests = () => {\n    return axios\n      .get(\n        \"http://localhost:3000/notifications/ListOfNotifications/\" + profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then((data) => setNotifications(data.listOfNotifications));\n  }, [profile]);\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Notifications</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Notifications\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <br></br>\n        <br></br>\n        <IonList>\n          {notifications.map((notification) => (\n            <Fragment>\n              <br></br>\n            <IonItem href={`${notification.UserActionTakenAppLink}`} key={notification.id}>\n                <IonAvatar className=\"avatario\" slot=\"start\" >\n                  <img src={notification.UserActionTakenUserProfilePicURL}  /> \n                </IonAvatar>\n              {notification.UserActionTakenUserName} {notification.UserActionTakenUserActionTypeDescription}\n              <IonDatetime\n                slot=\"end\"\n                displayFormat=\"DD-MMM-YY\"\n                value={notification.createdAt}\n              ></IonDatetime>\n            </IonItem>\n            </Fragment>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}