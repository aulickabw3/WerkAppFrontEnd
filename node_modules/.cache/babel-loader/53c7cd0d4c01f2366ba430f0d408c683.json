{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n} // Manages the updates of all `<ReactTimeAgo/>` elements on a page.\n// The reasons for going with `requestAnimationFrame()`:\n// * `requestAnimationFrame` won't be called when a tab is in background.\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\n// `requestAnimationFrame()` polyfill for old browsers.\n\n\nimport requestAnimationFrame from 'raf';\nimport binarySearch from './helpers/binarySearch.js';\nexport default {\n  instances: [],\n  add: function add(instance) {\n    var _this = this;\n\n    var wasIdle = this.instances.length === 0;\n\n    _add(this.instances, instance);\n\n    if (wasIdle) {\n      this.start();\n    }\n\n    return {\n      stop: function stop() {\n        remove(_this.instances, instance);\n\n        if (_this.instances.length === 0) {\n          _this.stop();\n        }\n      },\n      forceUpdate: function forceUpdate() {\n        updateInstance(instance, _this.instances);\n      }\n    };\n  },\n  tick: function tick() {\n    var now = Date.now();\n\n    while (true) {\n      var instance = this.instances[0];\n\n      if (now >= instance.nextUpdateTime) {\n        updateInstance(instance, this.instances);\n      } else {\n        break;\n      }\n    }\n  },\n  scheduleNextTick: function scheduleNextTick() {\n    var _this2 = this;\n\n    this.scheduledTick = requestAnimationFrame(function () {\n      _this2.tick();\n\n      _this2.scheduleNextTick();\n    });\n  },\n  start: function start() {\n    this.scheduleNextTick();\n  },\n  stop: function stop() {\n    requestAnimationFrame.cancel(this.scheduledTick);\n  }\n};\n\nfunction _updateInstance(instance) {\n  var _instance$getNextValu = instance.getNextValue(),\n      _instance$getNextValu2 = _slicedToArray(_instance$getNextValu, 2),\n      value = _instance$getNextValu2[0],\n      nextUpdateTime = _instance$getNextValu2[1];\n\n  instance.setValue(value);\n  instance.nextUpdateTime = nextUpdateTime;\n}\n\nfunction updateInstance(instance, instances) {\n  _updateInstance(instance);\n\n  remove(instances, instance);\n\n  _add(instances, instance);\n}\n\nfunction _add(instances, instance) {\n  var i = findTargetIndex(instances, instance);\n  instances.splice(i, 0, instance);\n}\n\nfunction remove(instances, instance) {\n  var i = instances.indexOf(instance);\n  instances.splice(i, 1);\n}\n\nfunction findTargetIndex(instances, instance) {\n  var nextUpdateTime = instance.nextUpdateTime;\n  return binarySearch(instances, function (instance) {\n    if (instance.nextUpdateTime === nextUpdateTime) {\n      return 0;\n    } else if (instance.nextUpdateTime > nextUpdateTime) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/node_modules/react-time-ago/source/Updater.js"],"names":["instances","add","wasIdle","stop","remove","forceUpdate","updateInstance","tick","now","Date","instance","scheduleNextTick","requestAnimationFrame","start","value","nextUpdateTime","_updateInstance","i","findTargetIndex","binarySearch"],"mappings":"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","sourcesContent":["// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch.js'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}"]},"metadata":{},"sourceType":"module"}