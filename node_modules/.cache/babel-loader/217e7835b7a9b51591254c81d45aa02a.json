{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonAvatar, useIonViewDidEnter } from \"@ionic/react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport axios from \"axios\"; // import TimeAgo from 'react-timeago'\n\nimport \"./Main.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notifications = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [profile, setProfile] = React.useState({\n    UserId: 0\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile); // GET ARRAY OF ALL NEW REQUESTS\n\n  const [notifications, setNotifications] = React.useState([{\n    id: 0,\n    IsRead: false,\n    UserActionTakenUserProfilePicURL: \"../assets/profilePic.png\",\n    UserActionTakenUserActionTyped: \"No Notifications\",\n    UserActionTakenUserActionTypeDescription: \"Here Yet! Go do stuff!\",\n    UserActionTakenUserName: \"\",\n    createdAt: 0,\n    UserActionTakenAppLink: \"\"\n  }]);\n\n  const fetchRequests = () => {\n    return axios.get(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com//notifications/ListOfNotifications/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then(data => {\n      setNotifications(data.listOfNotifications);\n    });\n  }, [profile]);\n  console.log(notifications);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          className: \"title2\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title2\",\n            size: \"large\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonList, {\n        children: notifications.reverse().map(notification => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n            onClick: e => {\n              const ReadData = {\n                IsRead: true\n              };\n              return axios.put(\"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com//notifications/MarkRead/\" + notification.id, {\n                ReadData,\n                withCredentials: true\n              }).then(response => {\n                console.log(response);\n              });\n            },\n            className: `${notification.IsRead ? \"read\" : \"unread\"}`,\n            href: `${notification.UserActionTakenAppLink}`,\n            children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n              className: \"avatario\",\n              slot: \"start\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: notification.UserActionTakenUserProfilePicURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), notification.UserActionTakenUserName, notification.UserActionTakenUserActionTypeDescription, /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n              timeStyle: \"twitter-minute-now\",\n              slot: \"end\",\n              className: \"nill\",\n              date: notification.createdAt,\n              locale: \"en-US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notifications, \"qJ9APNOUU9NvmuHJTCqMIshddVE=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Notifications.tsx"],"names":["React","Fragment","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonAvatar","useIonViewDidEnter","ReactTimeAgo","axios","GetUser","Notifications","match","profile","setProfile","useState","UserId","then","data","personDataFound","console","log","notifications","setNotifications","id","IsRead","UserActionTakenUserProfilePicURL","UserActionTakenUserActionTyped","UserActionTakenUserActionTypeDescription","UserActionTakenUserName","createdAt","UserActionTakenAppLink","fetchRequests","get","withCredentials","response","useEffect","listOfNotifications","reverse","map","notification","e","ReadData","put"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  useIonViewDidEnter,\n  IonDatetime,\n} from \"@ionic/react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport axios from \"axios\";\n// import TimeAgo from 'react-timeago'\nimport {\n  person,\n  arrowBackCircle,\n  arrowBack,\n  mailUnreadOutline,\n  mailOpenOutline,\n} from \"ionicons/icons\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport \"./Main.css\";\nimport \"./Search.css\";\nimport GetUser from \"../components/GetUser\";\n\nexport const Notifications: React.FC<RouteComponentProps> = ({ match }) => {\n  //GET MY PROFILE DATA\n  interface ProfileData {\n    UserId: number;\n  }\n\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n  console.log(profile);\n\n  // GET ARRAY OF ALL NEW REQUESTS\n  interface NotificationsDate {\n    id: number;\n    IsRead: boolean;\n    UserActionTakenUserProfilePicURL: string;\n    UserActionTakenUserActionTyped: string;\n    UserActionTakenUserActionTypeDescription: string;\n    UserActionTakenUserName: string;\n    createdAt: number;\n    UserActionTakenAppLink: string;\n  }\n\n  const [notifications, setNotifications] = React.useState<NotificationsDate[]>(\n    [\n      {\n        id: 0,\n        IsRead: false,\n        UserActionTakenUserProfilePicURL: \"../assets/profilePic.png\",\n        UserActionTakenUserActionTyped: \"No Notifications\",\n        UserActionTakenUserActionTypeDescription: \"Here Yet! Go do stuff!\",\n        UserActionTakenUserName: \"\",\n        createdAt: 0,\n        UserActionTakenAppLink: \"\",\n      },\n    ]\n  );\n\n\n  const fetchRequests = () => {\n    return axios\n      .get(\n        \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com//notifications/ListOfNotifications/\" +\n          profile.UserId,\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchRequests().then((data) => {\n      setNotifications(data.listOfNotifications);\n    });\n  }, [profile]);\n\n  console.log(notifications);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Notifications</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Notifications\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <br></br>\n        <IonList>\n          {notifications.reverse().map((notification) => (\n            <Fragment key={notification.id}>\n              <br></br>\n              <IonItem\n                onClick={(e: any) => {\n                  const ReadData = {\n                    IsRead: true,\n                  };\n                  return axios\n                    .put(\n                      \"http://werkappserver-env.eba-qyjsvfm3.us-east-1.elasticbeanstalk.com//notifications/MarkRead/\" +\n                        notification.id,\n                      {\n                        ReadData,\n                        withCredentials: true,\n                      }\n                    )\n                    .then((response) => {\n                      console.log(response);\n                    });\n                }}\n                className={`${notification.IsRead ? \"read\" : \"unread\"}`}\n                href={`${notification.UserActionTakenAppLink}`}\n              >\n                <IonAvatar className=\"avatario\" slot=\"start\">\n                  <img src={notification.UserActionTakenUserProfilePicURL} />\n                </IonAvatar>\n                {notification.UserActionTakenUserName}\n                {notification.UserActionTakenUserActionTypeDescription}\n                <ReactTimeAgo\n                  timeStyle=\"twitter-minute-now\"\n                  slot=\"end\"\n                  className=\"nill\"\n                  date={notification.createdAt}\n                  locale=\"en-US\"\n                />\n              </IonItem>\n            </Fragment>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}