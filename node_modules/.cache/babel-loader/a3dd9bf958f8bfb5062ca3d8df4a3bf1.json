{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { IonIcon, IonContent, IonRow, IonCol, IonLabel, IonItem, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, useIonViewDidEnter, IonAvatar, IonDatetime, IonSegment, IonSegmentButton, IonSearchbar, IonButton, IonToggle, IonCard, IonCardContent } from \"@ionic/react\";\nimport { arrowUp } from \"ionicons/icons\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nexport const Main = () => {\n  const [profile, setProfile] = useState({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\"\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []); // Available Jobs Segment\n  //////////////////////////////////////\n\n  const [availableJobs, setAvailableJobs] = React.useState([{\n    JJobId: 0,\n    JJobId2: 0,\n    dentifier: \"\",\n    SchedulerId: 0,\n    Company: \"No     Jobs\",\n    Location: \"\",\n    Date: \"Yet\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchAvailableJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  console.log(availableJobs);\n\n  const AvailableJobsSegment = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, availableJobs.map(availableJob => /*#__PURE__*/React.createElement(IonCard, {\n      key: availableJob.JJobId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonAvatar, {\n      className: \"avtr\",\n      slot: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: availableJob.SchedulerProfilePicURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, availableJob.FirstName)), /*#__PURE__*/React.createElement(IonButton, {\n      href: `/ShiftDetails/${availableJob.JJobId}`,\n      color: \"medium\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"View\")), /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Date:\"), /*#__PURE__*/React.createElement(IonDatetime, {\n      className: \"\",\n      displayFormat: \"DD-MMM-YY\",\n      value: availableJob.Date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Job#:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, availableJob.dentifier)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, \"Company:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, availableJob.Company)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Location::\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, availableJob.Location)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Pay:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, availableJob.Pay)))))));\n  }; // Scheduled Jobs Segment\n  //////////////////////////////////////////////\n\n\n  const [myScheduledJobs, setMyScheduledJobs] = React.useState([{\n    ShiftShiftId: 0,\n    ShiftIdentifier: \"\",\n    Company: \"Go Get\",\n    Location: \"\",\n    Date: \"Some Work!!\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchScheduledJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/MyScheduledJobs/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const ScheduledJobsSegment = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, myScheduledJobs.map(myScheduledJob => /*#__PURE__*/React.createElement(IonCard, {\n      key: myScheduledJob.ShiftShiftId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonAvatar, {\n      className: \"avtr\",\n      slot: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: myScheduledJob.SchedulerProfilePicURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, myScheduledJob.FirstName)), /*#__PURE__*/React.createElement(IonButton, {\n      href: `/ShiftDetails/${myScheduledJob.ShiftShiftId}`,\n      color: \"medium\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \"View\")), /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }, \"Date:\"), /*#__PURE__*/React.createElement(IonDatetime, {\n      className: \"\",\n      displayFormat: \"DD-MMM-YY\",\n      value: myScheduledJob.Date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, \"Job#:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }, myScheduledJob.ShiftIdentifier)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, \"Company:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, myScheduledJob.Company)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, \"Location::\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, myScheduledJob.Location)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"Pay:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, myScheduledJob.Pay)))))));\n  }; // Past Jobs Segment\n  /////////////////////////////////////////\n\n\n  const [myPastJobs, setMyPastJobs] = React.useState([{\n    ShiftShiftId: 0,\n    ShiftIdentifier: \"\",\n    Company: \"Go Get\",\n    Location: \"\",\n    Date: \"Some Work!!\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchPastJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/MyPastJobs/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const PastJobsSegment = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, myPastJobs.map(myPastJob => /*#__PURE__*/React.createElement(IonCard, {\n      key: myPastJob.ShiftShiftId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonAvatar, {\n      className: \"avtr\",\n      slot: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: myPastJob.SchedulerProfilePicURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(IonLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, myPastJob.FirstName)), /*#__PURE__*/React.createElement(IonButton, {\n      href: `/ShiftDetails/${myPastJob.ShiftShiftId}`,\n      color: \"medium\",\n      slot: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }\n    }, \"View\")), /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, \"Date:\"), /*#__PURE__*/React.createElement(IonDatetime, {\n      className: \"\",\n      displayFormat: \"DD-MMM-YY\",\n      value: myPastJob.Date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, \"Job#:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, myPastJob.ShiftIdentifier)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, \"Company:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, myPastJob.Company)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    }, \"Location::\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 19\n      }\n    }, myPastJob.Location)), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, \"Pay:\"), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }, myPastJob.Pay)))))));\n  };\n\n  console.log(myPastJobs);\n\n  const SelectAJobList = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      slot: \"\",\n      size: \"large\",\n      icon: arrowUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      size: \"large\",\n      icon: arrowUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      size: \"large\",\n      icon: arrowUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IonRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(IonCol, {\n      size: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, \"Select A Job List\")), /*#__PURE__*/React.createElement(IonCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then(data => {\n      setAvailableJobs(data.availableShifts2);\n    });\n    fetchScheduledJobs().then(data => setMyScheduledJobs(data.scheduledShifts2));\n    fetchPastJobs().then(data => setMyPastJobs(data.pastShifts2));\n  }, [profile]);\n  const [mainSegment, setMainSegment] = useState(\"\");\n\n  const MainSegmentActions = () => {\n    if (mainSegment == \"past\") {\n      return /*#__PURE__*/React.createElement(PastJobsSegment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (mainSegment == \"scheduled\") {\n      return /*#__PURE__*/React.createElement(ScheduledJobsSegment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (mainSegment == \"available\") {\n      return /*#__PURE__*/React.createElement(AvailableJobsSegment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SelectAJobList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleToggle = () => {\n    if (!checked) window.location.href = \"/SchedulerView\";\n    return;\n  };\n\n  const handleSearch = () => {\n    window.location.href = \"/Search\";\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, \"WerkApp\"))), /*#__PURE__*/React.createElement(IonContent, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title1\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, \"WerkApp\"))), /*#__PURE__*/React.createElement(IonToolbar, {\n    className: \"bckgrnd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    className: \"tpmrgn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonToggle, {\n    checked: checked,\n    onIonChange: e => {\n      setChecked(e.detail.checked);\n      handleToggle();\n    },\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"smallfont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, \"Scheduler\")), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonSearchbar, {\n    className: \"srchbr\",\n    value: searchText,\n    onIonChange: handleSearch,\n    animated: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonCol, {\n    size: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    slot: \"\",\n    className: \"tinyavatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profile.ProfilePicURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    size: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonSegment, {\n    className: \"bckgrnd\",\n    onIonChange: e => {\n      setMainSegment(e.detail.value);\n      console.log(mainSegment);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 23\n    }\n  }, \"Available\"))), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"scheduled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 23\n    }\n  }, \"Scheduled\"))), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"past\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 23\n    }\n  }, \"Past\")))))))), /*#__PURE__*/React.createElement(MainSegmentActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Main;","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx"],"names":["React","useEffect","useState","IonIcon","IonContent","IonRow","IonCol","IonLabel","IonItem","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","useIonViewDidEnter","IonAvatar","IonDatetime","IonSegment","IonSegmentButton","IonSearchbar","IonButton","IonToggle","IonCard","IonCardContent","arrowUp","axios","GetUser","Main","profile","setProfile","UserId","FirstName","LastName","ProfilePicURL","then","data","personDataFound","availableJobs","setAvailableJobs","JJobId","JJobId2","dentifier","SchedulerId","Company","Location","Date","Pay","SchedulerProfilePicURL","fetchAvailableJobs","get","withCredentials","response","console","log","AvailableJobsSegment","map","availableJob","myScheduledJobs","setMyScheduledJobs","ShiftShiftId","ShiftIdentifier","fetchScheduledJobs","ScheduledJobsSegment","myScheduledJob","myPastJobs","setMyPastJobs","fetchPastJobs","PastJobsSegment","myPastJob","SelectAJobList","availableShifts2","scheduledShifts2","pastShifts2","mainSegment","setMainSegment","MainSegmentActions","checked","setChecked","handleToggle","window","location","href","handleSearch","searchText","setSearchText","e","detail","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonList,\n  IonLabel,\n  IonItem,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  useIonViewDidEnter,\n  IonAvatar,\n  IonDatetime,\n  IonSegment,\n  IonSegmentButton,\n  IonSearchbar,\n  IonButton,\n  IonTabBar,\n  IonTabButton,\n  IonToggle,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  arrowBack,\n  createOutline,\n  reorderFour,\n  reorderFourOutline,\n  reorderThreeOutline,\n  pin,\n  wifi,\n  wine,\n  warning,\n  walk,\n  arrowUp,\n} from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport { create } from \"domain\";\n\nexport const Main: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Available Jobs Segment\n  //////////////////////////////////////\n  interface AvailableJobData {\n    JJobId: number;\n    JJobId2: any;\n    dentifier: string;\n    SchedulerId: any;\n    Company: any;\n    Location: string;\n    Date: any;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: any;\n  }\n\n  const [availableJobs, setAvailableJobs] = React.useState<AvailableJobData[]>([\n    {\n      JJobId: 0,\n      JJobId2: 0,\n      dentifier: \"\",\n      SchedulerId: 0,\n      Company: \"No     Jobs\",\n      Location: \"\",\n      Date: \"Yet\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  console.log(availableJobs);\n\n  const AvailableJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {availableJobs.map((availableJob) => (\n          <IonCard key={availableJob.JJobId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={availableJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{availableJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${availableJob.JJobId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              \n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{availableJob.dentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{availableJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{availableJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{availableJob.Pay}</IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Scheduled Jobs Segment\n  //////////////////////////////////////////////\n  interface MyScheduledJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myScheduledJobs, setMyScheduledJobs] = React.useState<\n    MyScheduledJobsData[]\n  >([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchScheduledJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/MyScheduledJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const ScheduledJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myScheduledJobs.map((myScheduledJob) => (\n          <IonCard key={myScheduledJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myScheduledJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myScheduledJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myScheduledJob.ShiftShiftId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myScheduledJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myScheduledJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myScheduledJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myScheduledJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myScheduledJob.Pay}</IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Past Jobs Segment\n  /////////////////////////////////////////\n  interface MyPastJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myPastJobs, setMyPastJobs] = React.useState<MyPastJobsData[]>([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchPastJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/MyPastJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const PastJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myPastJobs.map((myPastJob) => (\n          <IonCard key={myPastJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myPastJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myPastJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myPastJob.ShiftShiftId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myPastJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myPastJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myPastJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myPastJob.Pay}</IonCol>\n                </IonRow>\n                {/* <br></br>\n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.Date}\n                  ></IonDatetime>\n                </IonRow> */}\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  console.log(myPastJobs);\n\n  const SelectAJobList: React.FC = () => {\n    return (\n      <React.Fragment>\n      <IonRow>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon slot=\"\" size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"7\">\n            <h1>Select A Job List</h1>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n    </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setAvailableJobs(data.availableShifts2);\n    });\n    fetchScheduledJobs().then((data) =>\n      setMyScheduledJobs(data.scheduledShifts2)\n    );\n    fetchPastJobs().then((data) => setMyPastJobs(data.pastShifts2));\n  }, [profile]);\n\n  const [mainSegment, setMainSegment] = useState<string>(\"\");\n\n  const MainSegmentActions: React.FC = () => {\n    if (mainSegment == \"past\") {\n      return <PastJobsSegment />;\n    }\n    if (mainSegment == \"scheduled\") {\n      return <ScheduledJobsSegment />;\n    }\n    if (mainSegment == \"available\") {\n      return <AvailableJobsSegment />;\n    }\n    return <SelectAJobList />\n  };\n\n  const [checked, setChecked] = React.useState<boolean>(false);\n\n  const handleToggle = () => {\n    if (!checked) window.location.href = \"/SchedulerView\";\n    return;\n  };\n\n  const handleSearch = () => {\n    window.location.href = \"/Search\";\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title1\">WerkApp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              WerkApp\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar className=\"bckgrnd\">\n          <IonGrid>\n            <IonRow className=\"tpmrgn\">\n              <IonCol size=\"2\">\n                <IonToggle\n                  checked={checked}\n                  onIonChange={(e) => {\n                    setChecked(e.detail.checked);\n                    handleToggle();\n                  }}\n                  color=\"danger\"\n                ></IonToggle>\n                <IonLabel className=\"smallfont\">Scheduler</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\">\n                <IonSearchbar\n                  className=\"srchbr\"\n                  value={searchText}\n                  onIonChange={handleSearch}\n                  animated\n                ></IonSearchbar>\n              </IonCol>\n              <IonCol size=\"1\">\n                <IonAvatar slot=\"\" className=\"tinyavatar\">\n                  <img src={profile.ProfilePicURL} />\n                </IonAvatar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  className=\"bckgrnd\"\n                  onIonChange={(e: any) => {\n                    setMainSegment(e.detail.value!);\n                    console.log(mainSegment);\n                  }}\n                >\n                  <IonSegmentButton value=\"available\">\n                    <IonLabel>\n                      <h2>Available</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"scheduled\">\n                    <IonLabel>\n                      <h2>Scheduled</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"past\">\n                    <IonLabel>\n                      <h2>Past</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n        \n        <MainSegmentActions />\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}