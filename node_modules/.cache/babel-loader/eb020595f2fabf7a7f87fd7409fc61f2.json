{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { IonIcon, IonContent, IonRow, IonCol, IonLabel, IonItem, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, useIonViewDidEnter, IonAvatar, IonDatetime, IonSegment, IonSegmentButton, IonSearchbar, IonButton, IonToggle, IonCard, IonCardContent } from \"@ionic/react\";\nimport { arrowUp } from \"ionicons/icons\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const [profile, setProfile] = useState({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\"\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []); // Available Jobs Segment\n  //////////////////////////////////////\n\n  const [availableJobs, setAvailableJobs] = React.useState([{\n    JJobId: 0,\n    JJobId2: 0,\n    dentifier: \"\",\n    SchedulerId: 0,\n    Company: \"No     Jobs\",\n    Location: \"\",\n    Date: \"Yet\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchAvailableJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  console.log(availableJobs);\n\n  const AvailableJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: availableJobs.map(availableJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: availableJob.SchedulerProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: availableJob.FirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/ShiftDetails/${availableJob.JJobId}`,\n            color: \"medium\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                className: \"\",\n                displayFormat: \"DD-MMM-YY\",\n                value: availableJob.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.dentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: availableJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, availableJob.JJobId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }; // Scheduled Jobs Segment\n  //////////////////////////////////////////////\n\n\n  const [myScheduledJobs, setMyScheduledJobs] = React.useState([{\n    ShiftShiftId: 0,\n    ShiftIdentifier: \"\",\n    Company: \"Go Get\",\n    Location: \"\",\n    Date: \"Some Work!!\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchScheduledJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/MyScheduledJobs/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const ScheduledJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: myScheduledJobs.map(myScheduledJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: myScheduledJob.SchedulerProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: myScheduledJob.FirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/ShiftDetails/${myScheduledJob.ShiftShiftId}`,\n            color: \"medium\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                className: \"\",\n                displayFormat: \"DD-MMM-YY\",\n                value: myScheduledJob.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myScheduledJob.ShiftIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myScheduledJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myScheduledJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myScheduledJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, myScheduledJob.ShiftShiftId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }; // Past Jobs Segment\n  /////////////////////////////////////////\n\n\n  const [myPastJobs, setMyPastJobs] = React.useState([{\n    ShiftShiftId: 0,\n    ShiftIdentifier: \"\",\n    Company: \"Go Get\",\n    Location: \"\",\n    Date: \"Some Work!!\",\n    Pay: \"\",\n    FirstName: \"\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchPastJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/MyPastJobs/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  const PastJobsSegment = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: myPastJobs.map(myPastJob => /*#__PURE__*/_jsxDEV(IonCard, {\n        children: [/*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avtr\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: myPastJob.SchedulerProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: myPastJob.FirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n            href: `/ShiftDetails/${myPastJob.ShiftShiftId}`,\n            color: \"medium\",\n            slot: \"end\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonCardContent, {\n          children: /*#__PURE__*/_jsxDEV(IonGrid, {\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonDatetime, {\n                className: \"\",\n                displayFormat: \"DD-MMM-YY\",\n                value: myPastJob.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Job#:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.ShiftIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Location::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Pay:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: myPastJob.Pay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, myPastJob.ShiftShiftId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  };\n\n  console.log(myPastJobs);\n\n  const SelectAJobList = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IonRow, {\n        children: [/*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            slot: \"\",\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          children: /*#__PURE__*/_jsxDEV(IonIcon, {\n            size: \"large\",\n            icon: arrowUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n        children: [/*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n          size: \"7\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select A Job List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonCol, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then(data => {\n      setAvailableJobs(data.availableShifts2);\n    });\n    fetchScheduledJobs().then(data => setMyScheduledJobs(data.scheduledShifts2));\n    fetchPastJobs().then(data => setMyPastJobs(data.pastShifts2));\n  }, [profile]);\n  const [mainSegment, setMainSegment] = useState(\"\");\n\n  const MainSegmentActions = () => {\n    if (mainSegment == \"past\") {\n      return /*#__PURE__*/_jsxDEV(PastJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (mainSegment == \"scheduled\") {\n      return /*#__PURE__*/_jsxDEV(ScheduledJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (mainSegment == \"available\") {\n      return /*#__PURE__*/_jsxDEV(AvailableJobsSegment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SelectAJobList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 12\n    }, this);\n  };\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleToggle = () => {\n    if (!checked) window.location.href = \"/SchedulerView\";\n    return;\n  };\n\n  const handleSearch = () => {\n    window.location.href = \"/Search\";\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          className: \"title1\",\n          children: \"WerkApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title1\",\n            size: \"large\",\n            children: \"WerkApp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonToolbar, {\n        className: \"bckgrnd\",\n        children: /*#__PURE__*/_jsxDEV(IonGrid, {\n          children: [/*#__PURE__*/_jsxDEV(IonRow, {\n            className: \"tpmrgn\",\n            children: [/*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(IonToggle, {\n                checked: checked,\n                onIonChange: e => {\n                  setChecked(e.detail.checked);\n                  handleToggle();\n                },\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n                className: \"smallfont\",\n                children: \"Scheduler\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"8\",\n              children: /*#__PURE__*/_jsxDEV(IonSearchbar, {\n                className: \"srchbr\",\n                value: searchText,\n                onIonChange: handleSearch,\n                animated: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"1\",\n              children: /*#__PURE__*/_jsxDEV(IonAvatar, {\n                slot: \"\",\n                className: \"tinyavatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: profile.ProfilePicURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonRow, {\n            children: /*#__PURE__*/_jsxDEV(IonCol, {\n              size: \"12\",\n              children: /*#__PURE__*/_jsxDEV(IonSegment, {\n                className: \"bckgrnd\",\n                onIonChange: e => {\n                  setMainSegment(e.detail.value);\n                  console.log(mainSegment);\n                },\n                children: [/*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"available\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"scheduled\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Scheduled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IonSegmentButton, {\n                  value: \"past\",\n                  children: /*#__PURE__*/_jsxDEV(IonLabel, {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \"Past\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainSegmentActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"ESaPjtQFm9Eqi0xjMEE2fe+GUeQ=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Main.tsx"],"names":["React","useEffect","useState","IonIcon","IonContent","IonRow","IonCol","IonLabel","IonItem","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","useIonViewDidEnter","IonAvatar","IonDatetime","IonSegment","IonSegmentButton","IonSearchbar","IonButton","IonToggle","IonCard","IonCardContent","arrowUp","axios","GetUser","Main","profile","setProfile","UserId","FirstName","LastName","ProfilePicURL","then","data","personDataFound","availableJobs","setAvailableJobs","JJobId","JJobId2","dentifier","SchedulerId","Company","Location","Date","Pay","SchedulerProfilePicURL","fetchAvailableJobs","get","withCredentials","response","console","log","AvailableJobsSegment","map","availableJob","myScheduledJobs","setMyScheduledJobs","ShiftShiftId","ShiftIdentifier","fetchScheduledJobs","ScheduledJobsSegment","myScheduledJob","myPastJobs","setMyPastJobs","fetchPastJobs","PastJobsSegment","myPastJob","SelectAJobList","availableShifts2","scheduledShifts2","pastShifts2","mainSegment","setMainSegment","MainSegmentActions","checked","setChecked","handleToggle","window","location","href","handleSearch","searchText","setSearchText","e","detail","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonList,\n  IonLabel,\n  IonItem,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  useIonViewDidEnter,\n  IonAvatar,\n  IonDatetime,\n  IonSegment,\n  IonSegmentButton,\n  IonSearchbar,\n  IonButton,\n  IonTabBar,\n  IonTabButton,\n  IonToggle,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n} from \"@ionic/react\";\nimport {\n  person,\n  arrowBackCircle,\n  arrowBack,\n  createOutline,\n  reorderFour,\n  reorderFourOutline,\n  reorderThreeOutline,\n  pin,\n  wifi,\n  wine,\n  warning,\n  walk,\n  arrowUp,\n} from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\nimport \"./Main.css\";\nimport { create } from \"domain\";\n\nexport const Main: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    ProfilePicURL: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    ProfilePicURL: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Available Jobs Segment\n  //////////////////////////////////////\n  interface AvailableJobData {\n    JJobId: number;\n    JJobId2: any;\n    dentifier: string;\n    SchedulerId: any;\n    Company: any;\n    Location: string;\n    Date: any;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: any;\n  }\n\n  const [availableJobs, setAvailableJobs] = React.useState<AvailableJobData[]>([\n    {\n      JJobId: 0,\n      JJobId2: 0,\n      dentifier: \"\",\n      SchedulerId: 0,\n      Company: \"No     Jobs\",\n      Location: \"\",\n      Date: \"Yet\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  console.log(availableJobs);\n\n  const AvailableJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {availableJobs.map((availableJob) => (\n          <IonCard key={availableJob.JJobId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={availableJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{availableJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${availableJob.JJobId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              \n                <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={availableJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{availableJob.dentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{availableJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{availableJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{availableJob.Pay}</IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Scheduled Jobs Segment\n  //////////////////////////////////////////////\n  interface MyScheduledJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myScheduledJobs, setMyScheduledJobs] = React.useState<\n    MyScheduledJobsData[]\n  >([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchScheduledJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/MyScheduledJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const ScheduledJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myScheduledJobs.map((myScheduledJob) => (\n          <IonCard key={myScheduledJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myScheduledJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myScheduledJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myScheduledJob.ShiftShiftId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myScheduledJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myScheduledJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myScheduledJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myScheduledJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myScheduledJob.Pay}</IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  // Past Jobs Segment\n  /////////////////////////////////////////\n  interface MyPastJobsData {\n    ShiftShiftId: number;\n    ShiftIdentifier: string;\n    Company: string;\n    Location: string;\n    Date: string;\n    Pay: string;\n    FirstName: string;\n    SchedulerProfilePicURL: string;\n  }\n\n  const [myPastJobs, setMyPastJobs] = React.useState<MyPastJobsData[]>([\n    {\n      ShiftShiftId: 0,\n      ShiftIdentifier: \"\",\n      Company: \"Go Get\",\n      Location: \"\",\n      Date: \"Some Work!!\",\n      Pay: \"\",\n      FirstName: \"\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchPastJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/MyPastJobs/\" + profile.UserId, {})\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  const PastJobsSegment: React.FC = () => {\n    return (\n      <React.Fragment>\n        {myPastJobs.map((myPastJob) => (\n          <IonCard key={myPastJob.ShiftShiftId}>\n            <IonItem>\n              <IonAvatar className=\"avtr\" slot=\"start\">\n                <img src={myPastJob.SchedulerProfilePicURL} />\n              </IonAvatar>\n              <IonLabel>\n                <h2>{myPastJob.FirstName}</h2>\n              </IonLabel>\n              <IonButton\n                href={`/ShiftDetails/${myPastJob.ShiftShiftId}`}\n                color=\"medium\"\n                slot=\"end\"\n              >\n                View\n              </IonButton>\n            </IonItem>\n            <IonCardContent>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>Date:</IonCol>\n                  <IonDatetime\n                    className=\"\"\n                    displayFormat=\"DD-MMM-YY\"\n                    value={myPastJob.Date}\n                  ></IonDatetime>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Job#:</IonCol>\n                  <IonCol>{myPastJob.ShiftIdentifier}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Company:</IonCol>\n                  <IonCol>{myPastJob.Company}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Location::</IonCol>\n                  <IonCol>{myPastJob.Location}</IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol>Pay:</IonCol>\n                  <IonCol>{myPastJob.Pay}</IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardContent>\n          </IonCard>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  console.log(myPastJobs);\n\n  const SelectAJobList: React.FC = () => {\n    return (\n      <React.Fragment>\n      <IonRow>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon slot=\"\" size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n          <IonCol>\n            <IonIcon size=\"large\" icon={arrowUp} />\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol></IonCol>\n          <IonCol size=\"7\">\n            <h1>Select A Job List</h1>\n          </IonCol>\n          <IonCol></IonCol>\n        </IonRow>\n    </React.Fragment>\n    );\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setAvailableJobs(data.availableShifts2);\n    });\n    fetchScheduledJobs().then((data) =>\n      setMyScheduledJobs(data.scheduledShifts2)\n    );\n    fetchPastJobs().then((data) => setMyPastJobs(data.pastShifts2));\n  }, [profile]);\n\n  const [mainSegment, setMainSegment] = useState<string>(\"\");\n\n  const MainSegmentActions: React.FC = () => {\n    if (mainSegment == \"past\") {\n      return <PastJobsSegment />;\n    }\n    if (mainSegment == \"scheduled\") {\n      return <ScheduledJobsSegment />;\n    }\n    if (mainSegment == \"available\") {\n      return <AvailableJobsSegment />;\n    }\n    return <SelectAJobList />\n  };\n\n  const [checked, setChecked] = React.useState<boolean>(false);\n\n  const handleToggle = () => {\n    if (!checked) window.location.href = \"/SchedulerView\";\n    return;\n  };\n\n  const handleSearch = () => {\n    window.location.href = \"/Search\";\n  };\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title1\">WerkApp</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"content\">\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title1\" size=\"large\">\n              WerkApp\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonToolbar className=\"bckgrnd\">\n          <IonGrid>\n            <IonRow className=\"tpmrgn\">\n              <IonCol size=\"2\">\n                <IonToggle\n                  checked={checked}\n                  onIonChange={(e) => {\n                    setChecked(e.detail.checked);\n                    handleToggle();\n                  }}\n                  color=\"danger\"\n                ></IonToggle>\n                <IonLabel className=\"smallfont\">Scheduler</IonLabel>\n              </IonCol>\n              <IonCol size=\"8\">\n                <IonSearchbar\n                  className=\"srchbr\"\n                  value={searchText}\n                  onIonChange={handleSearch}\n                  animated\n                ></IonSearchbar>\n              </IonCol>\n              <IonCol size=\"1\">\n                <IonAvatar slot=\"\" className=\"tinyavatar\">\n                  <img src={profile.ProfilePicURL} />\n                </IonAvatar>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol size=\"12\">\n                <IonSegment\n                  className=\"bckgrnd\"\n                  onIonChange={(e: any) => {\n                    setMainSegment(e.detail.value!);\n                    console.log(mainSegment);\n                  }}\n                >\n                  <IonSegmentButton value=\"available\">\n                    <IonLabel>\n                      <h2>Available</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"scheduled\">\n                    <IonLabel>\n                      <h2>Scheduled</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                  <IonSegmentButton value=\"past\">\n                    <IonLabel>\n                      <h2>Past</h2>\n                    </IonLabel>\n                  </IonSegmentButton>\n                </IonSegment>\n              </IonCol>\n            </IonRow>\n          </IonGrid>\n        </IonToolbar>\n        \n        <MainSegmentActions />\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}