{"ast":null,"code":"// \"Binary\" search in a sorted array.\nexport default function (array, test) {\n  if (array.length === 0) {\n    return 0;\n  }\n\n  var min = 0;\n  var max = array.length - 1;\n  var guess;\n\n  while (min <= max) {\n    guess = Math.floor((max + min) / 2);\n    var result = test(array[guess]);\n\n    if (result === 0) {\n      return guess;\n    } else if (result < 0) {\n      min = guess + 1;\n\n      if (min > max) {\n        return min;\n      }\n    } else {\n      max = guess - 1;\n\n      if (max < min) {\n        return min;\n      }\n    }\n  } // return -1\n  // return min\n\n}","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/node_modules/react-time-ago/source/helpers/binarySearch.js"],"names":["array","min","max","guess","Math","result","test"],"mappings":"AAAA;AACA,eAAe,UAAA,KAAA,EAAA,IAAA,EAAuB;AACrC,MAAIA,KAAK,CAALA,MAAAA,KAAJ,CAAA,EAAwB;AACvB,WAAA,CAAA;AACA;;AAED,MAAIC,GAAG,GAAP,CAAA;AACA,MAAIC,GAAG,GAAGF,KAAK,CAALA,MAAAA,GAAV,CAAA;AACA,MAAA,KAAA;;AAEA,SAAOC,GAAG,IAAV,GAAA,EAAmB;AAClBE,IAAAA,KAAK,GAAGC,IAAI,CAAJA,KAAAA,CAAW,CAACF,GAAG,GAAJ,GAAA,IAAnBC,CAAQC,CAARD;AAEA,QAAME,MAAM,GAAGC,IAAI,CAACN,KAAK,CAAzB,KAAyB,CAAN,CAAnB;;AACA,QAAIK,MAAM,KAAV,CAAA,EAAkB;AACjB,aAAA,KAAA;AADD,KAAA,MAGK,IAAIA,MAAM,GAAV,CAAA,EAAgB;AACpBJ,MAAAA,GAAG,GAAGE,KAAK,GAAXF,CAAAA;;AACA,UAAIA,GAAG,GAAP,GAAA,EAAe;AACd,eAAA,GAAA;AACA;AAJG,KAAA,MAMA;AACJC,MAAAA,GAAG,GAAGC,KAAK,GAAXD,CAAAA;;AACA,UAAIA,GAAG,GAAP,GAAA,EAAe;AACd,eAAA,GAAA;AACA;AACD;AA3BmC,GAAA,CA8BrC;AACA;;AACA","sourcesContent":["// \"Binary\" search in a sorted array.\r\nexport default function (array, test) {\r\n\tif (array.length === 0) {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tlet min = 0\r\n\tlet max = array.length - 1\r\n\tlet guess\r\n\r\n\twhile (min <= max) {\r\n\t\tguess = Math.floor((max + min) / 2)\r\n\r\n\t\tconst result = test(array[guess])\r\n\t\tif (result === 0) {\r\n\t\t\treturn guess\r\n\t\t}\r\n\t\telse if (result < 0) {\r\n\t\t\tmin = guess + 1\r\n\t\t\tif (min > max) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmax = guess - 1\r\n\t\t\tif (max < min) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// return -1\r\n\t// return min\r\n}"]},"metadata":{},"sourceType":"module"}