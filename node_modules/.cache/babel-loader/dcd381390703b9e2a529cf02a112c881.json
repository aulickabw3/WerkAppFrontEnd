{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Associates.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { IonContent, IonLabel, IonList, IonItem, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, IonRow, IonCol, IonAvatar, useIonViewDidEnter, IonSearchbar } from \"@ionic/react\";\nimport axios from \"axios\";\n// import \"./Associates.css\";\n// import \"./Search.css\";\nimport \"./Main.css\";\nimport GetUser from \"../components/GetUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Associates = () => {\n  _s();\n\n  //GET MY PROFILE DATA\n  const [profile, setProfile] = React.useState({\n    UserId: 0\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []); // Get Array Of All My Associates\n\n  const [associates, setAssociates] = React.useState([{\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    Company: \"\",\n    Occupation: \"\",\n    ProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchAssociates = () => {\n    return axios.get(\"http://localhost:3000/businessassociate/ListOfAssociates/\" + profile.UserId, {}).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  React.useEffect(() => {\n    fetchAssociates().then(data => setAssociates(data.listOfAssociates2));\n  }, [profile]);\n  const [searchText, setSearchText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        color: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          className: \"title2\",\n          children: \"Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          color: \"warning\",\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title2\",\n            size: \"large\",\n            children: \"Associates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonGrid, {\n        children: /*#__PURE__*/_jsxDEV(IonRow, {\n          children: /*#__PURE__*/_jsxDEV(IonCol, {\n            children: /*#__PURE__*/_jsxDEV(IonSearchbar, {\n              value: searchText,\n              onIonChange: e => setSearchText(e.detail.value),\n              animated: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonList, {\n        children: associates.filter(value => {\n          if (searchText == \"\") {\n            return value;\n          } else if (value.FirstName.toLowerCase().includes(searchText.toLowerCase())) {\n            return value;\n          } else if (value.LastName.toLowerCase().includes(searchText.toLowerCase())) {\n            return value;\n          }\n        }).sort((a, b) => a.FirstName.localeCompare(b.FirstName)).map(associate => /*#__PURE__*/_jsxDEV(IonItem, {\n          href: `/AssociateProfile/${associate.UserId}`,\n          children: [/*#__PURE__*/_jsxDEV(IonAvatar, {\n            className: \"avatario\",\n            slot: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: associate.ProfilePicURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonLabel, {\n            className: \"labelo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [associate.FirstName, \" \", associate.LastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: associate.Company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, associate.UserId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Associates, \"jbBfK0MGVoMsb3f7LCGL1DzHoWU=\", false, function () {\n  return [useIonViewDidEnter];\n});\n\n_c = Associates;\nexport default Associates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Associates\");","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/Associates.tsx"],"names":["React","useState","IonContent","IonLabel","IonList","IonItem","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","IonRow","IonCol","IonAvatar","useIonViewDidEnter","IonSearchbar","axios","GetUser","Associates","profile","setProfile","UserId","then","data","personDataFound","associates","setAssociates","FirstName","LastName","Company","Occupation","ProfilePicURL","fetchAssociates","get","response","console","log","useEffect","listOfAssociates2","searchText","setSearchText","e","detail","value","filter","toLowerCase","includes","sort","a","b","localeCompare","map","associate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  IonContent,\n  IonLabel,\n  IonList,\n  IonItem,\n  IonIcon,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonThumbnail,\n  IonAvatar,\n  IonImg,\n  useIonViewDidEnter,\n  IonDatetime,\n  IonSearchbar,\n} from \"@ionic/react\";\nimport axios from \"axios\";\nimport { person, arrowBackCircle, arrowBack, people } from \"ionicons/icons\";\nimport { Link } from \"react-router-dom\";\n// import \"./Associates.css\";\n// import \"./Search.css\";\nimport \"./Main.css\";\nimport GetUser from \"../components/GetUser\";\n\nconst Associates: React.FC = () => {\n  //GET MY PROFILE DATA\n  interface ProfileData {\n    UserId: number;\n  }\n  const [profile, setProfile] = React.useState<ProfileData>({\n    UserId: 0,\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Get Array Of All My Associates\n  interface AssociatesData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n    Company: string;\n    Occupation: string;\n    ProfilePicURL: string;\n  }\n\n  const [associates, setAssociates] = React.useState<AssociatesData[]>([\n    {\n      UserId: 0,\n      FirstName: \"\",\n      LastName: \"\",\n      Company: \"\",\n      Occupation: \"\",\n      ProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAssociates = () => {\n    return axios\n      .get(\n        \"http://localhost:3000/businessassociate/ListOfAssociates/\" +\n          profile.UserId,\n        {}\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  React.useEffect(() => {\n    fetchAssociates().then((data) => setAssociates(data.listOfAssociates2));\n  }, [profile]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Associates</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Associates\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonSearchbar\n                value={searchText}\n                onIonChange={(e) => setSearchText(e.detail.value!)}\n                animated\n              ></IonSearchbar>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n        <IonList>\n          {/* Need to rewrite this so the \".filter\" and \".sort\" methods are not\n                being called on render... */}\n          {associates\n          .filter((value) => {\n            if (searchText == \"\") {\n              return value;\n            } else if (\n              value.FirstName.toLowerCase().includes(\n                searchText.toLowerCase()\n              )\n            ) {\n              return value;\n            } else if (\n              value.LastName.toLowerCase().includes(\n                searchText.toLowerCase()\n              )\n            ) {\n              return value;\n            }\n          })\n          .sort((a, b) => a.FirstName.localeCompare(b.FirstName))\n          .map((associate) => (\n            <IonItem\n              href={`/AssociateProfile/${associate.UserId}`}\n              key={associate.UserId}\n            >\n              <IonAvatar className=\"avatario\" slot=\"start\">\n                <img src={associate.ProfilePicURL} />\n              </IonAvatar>\n              <IonLabel className=\"labelo\">\n                <h1>\n                  {associate.FirstName} {associate.LastName}\n                </h1>\n                <p>{associate.Company}</p>\n              </IonLabel>\n              <br></br>\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Associates;\n"]},"metadata":{},"sourceType":"module"}