{"ast":null,"code":"var _jsxFileName = \"/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AvailableJobs.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { IonIcon, IonContent, IonRow, IonCol, IonList, IonLabel, IonItem, IonHeader, IonPage, IonTitle, IonToolbar, IonGrid, useIonViewDidEnter, IonAvatar, IonDatetime } from \"@ionic/react\";\nimport { arrowBackCircle } from \"ionicons/icons\";\nimport \"./AvailableJobs.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\nconst AvailableJobs = () => {\n  const [profile, setProfile] = useState({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\"\n  });\n  useIonViewDidEnter(() => {\n    GetUser().then(data => setProfile(data.personDataFound));\n  }, []); // Get Array Of All My Associates\n\n  const [availableJobs, setAvailableJobs] = React.useState([{\n    JJobId: 0,\n    JJobId2: 0,\n    SchedulerId: 0,\n    Company: \"No     Jobs\",\n    Location: \"\",\n    Date: \"Yet\",\n    SchedulerProfilePicURL: \"../assets/profilePic.png\"\n  }]);\n\n  const fetchAvailableJobs = () => {\n    return axios.get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      return response.data;\n    });\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then(data => {\n      setAvailableJobs(data.availableShifts2);\n      console.log();\n    });\n  }, [profile]);\n  console.log(availableJobs);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Available Jobs\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    className: \"title2\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Available Jobs\"))), /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    size: \"large\",\n    icon: arrowBackCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, availableJobs.map(availableJob => /*#__PURE__*/React.createElement(IonItem, {\n    href: `/AvailableJob/${availableJob.JJobId}`,\n    key: availableJob.JJobId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonAvatar, {\n    className: \"avatario\",\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: availableJob.SchedulerProfilePicURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"labelo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, availableJob.Company), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, availableJob.Location)), /*#__PURE__*/React.createElement(IonDatetime, {\n    slot: \"end\",\n    displayFormat: \"DD-MMM-YY\",\n    value: availableJob.Date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default AvailableJobs;","map":{"version":3,"sources":["/Users/trey/ProgrammingProjects/WerkAppFrontEnd/src/pages/AvailableJobs.tsx"],"names":["React","useEffect","useState","IonIcon","IonContent","IonRow","IonCol","IonList","IonLabel","IonItem","IonHeader","IonPage","IonTitle","IonToolbar","IonGrid","useIonViewDidEnter","IonAvatar","IonDatetime","arrowBackCircle","Link","axios","GetUser","AvailableJobs","profile","setProfile","UserId","FirstName","LastName","then","data","personDataFound","availableJobs","setAvailableJobs","JJobId","JJobId2","SchedulerId","Company","Location","Date","SchedulerProfilePicURL","fetchAvailableJobs","get","withCredentials","response","console","log","availableShifts2","map","availableJob"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  IonIcon,\n  IonContent,\n  IonRow,\n  IonCol,\n  IonList,\n  IonLabel,\n  IonItem,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  useIonViewDidEnter,\n  IonAvatar,\n  IonDatetime,\n} from \"@ionic/react\";\nimport { person, arrowBackCircle, arrowBack } from \"ionicons/icons\";\nimport \"./AvailableJobs.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport GetUser from \"../components/GetUser\";\n\nconst AvailableJobs: React.FC = () => {\n  interface ProfileData {\n    UserId: number;\n    FirstName: string;\n    LastName: string;\n  }\n  const [profile, setProfile] = useState<ProfileData>({\n    UserId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n  });\n\n  useIonViewDidEnter(() => {\n    GetUser().then((data) => setProfile(data.personDataFound));\n  }, []);\n\n  // Get Array Of All My Associates\n  interface AvailableJobData {\n    JJobId: number;\n    JJobId2: any;\n    SchedulerId: any;\n    Company: any;\n    Location: string;\n    Date: any;\n    SchedulerProfilePicURL: any;\n  }\n\n  const [availableJobs, setAvailableJobs] = React.useState<AvailableJobData[]>([\n    {\n      JJobId: 0,\n      JJobId2: 0,\n      SchedulerId: 0,\n      Company: \"No     Jobs\",\n      Location: \"\",\n      Date: \"Yet\",\n      SchedulerProfilePicURL: \"../assets/profilePic.png\",\n    },\n  ]);\n\n  const fetchAvailableJobs = () => {\n    return axios\n      .get(\"http://localhost:3000/shifts/AvailableShifts/\" + profile.UserId, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  };\n\n  useEffect(() => {\n    fetchAvailableJobs().then((data) => {\n      setAvailableJobs(data.availableShifts2);\n      console.log();\n    });\n  }, [profile]);\n\n  console.log(availableJobs);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"warning\">\n          <IonTitle className=\"title2\">Available Jobs</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar color=\"warning\">\n            <IonTitle className=\"title2\" size=\"large\">\n              Available Jobs\n            </IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <Link to=\"/Main\">\n                <IonIcon size=\"large\" icon={arrowBackCircle} />\n              </Link>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n\n        <IonList>\n          {availableJobs.map((availableJob) => (\n            <IonItem href={`/AvailableJob/${availableJob.JJobId}`} key={availableJob.JJobId}>\n                <IonAvatar className=\"avatario\" slot=\"start\" >\n                  <img src={availableJob.SchedulerProfilePicURL}  /> \n                </IonAvatar>\n              <IonLabel className=\"labelo\">\n                <h1>{availableJob.Company}</h1>\n                <p>{availableJob.Location}</p>\n              </IonLabel>\n              <IonDatetime\n                slot=\"end\"\n                displayFormat=\"DD-MMM-YY\"\n                value={availableJob.Date}\n              ></IonDatetime>\n            </IonItem>\n          ))}\n        </IonList>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default AvailableJobs;\n"]},"metadata":{},"sourceType":"module"}